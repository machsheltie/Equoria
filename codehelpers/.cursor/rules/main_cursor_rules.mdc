---
description: Main coordination file for Equoria's modular Cursor rule system. References all other rules and provides global guidance for Cursor AI.
globs: ["**/*"]
alwaysApply: true
---

## 🧠 Cursor AI Rule Coordinator – Equoria

This is the master rules file for the Equoria project. It informs Cursor how to interpret and apply modular `.mdc` files stored in `.cursor/rules/`.

---

### 🗂️ Modular Rule Overview

This project uses modular rules by topic and concern. Each file has a dedicated domain:

| File                        | Domain / Focus                          |
|----------------------------|-----------------------------------------|
| 001_project_overview.mdc   | High-level game scope and objectives     |
| 002_tech_stack.mdc         | Languages, CI tools, dev workflow       |
| 003_ui_ux_guidelines.mdc   | Frontend structure, responsiveness, UX  |
| 004_breeding_mechanics.mdc | Genetics system, phenotype logic        |
| 005_event_systems.mdc      | Scheduled/random game event rules       |
| 006_permissions_and_moderation.mdc | Role-based access and moderation tools |
| 007_frameworks.mdc         | Framework integration (React Native, Express, PostgreSQL, etc.) |
| 008_frontendcoding.mdc     | JavaScript, JSX, Tailwind code conventions |
| 009_testing_and_tdd,mdc    | Testing and TDD                         |
| project_milestones.mdc     | Running log of completed features       |
| documentation.mdc          | Living technical reference (functions, routes, schemas) |
| equoria_auth.mdc           | Auth middleware, route protection, role logic |

---

### 📌 How Cursor Should Use This File

- This file serves as the entry point and coordination layer.
- All files in `.cursor/rules/` and any subfolders should be respected and referenced during coding, generation, and refactoring.
- If a file matches more than one domain (e.g., frontend + auth), Cursor should prioritize specific `.mdc` file logic over general rules.
- Cursor should append updates to `project_milestones.mdc` and `documentation.mdc` automatically after major changes or new features.

---

### 🔍 Cursor Best Practices for This Project

- Apply rules based on path context (e.g., use `004_breeding_mechanics.mdc` for `geneticsEngine.js`)
- Use `008_frontendcoding.mdc` for React Native component structure, syntax, and Tailwind usage
- Reference `equoria_auth.mdc` when creating/modifying protected routes or role logic
- Add new rule files in this format when expanding domains (e.g., `deployment.mdc`, `notifications.mdc`)
# Update .cursorrules to auto-update nodemon.json when dev folders are added
- when: a new folder is created at the project root AND it is used for backend code
  do: update nodemon.json to include the folder name in the "watch" list
Ensure you are updating documentation.mdc and project_milestones at regular intervals.


---

> Cursor, this file is your anchor. Use it to orchestrate all subrules and maintain consistency across the Equoria game project.
