---
description: 
globs: 
alwaysApply: false
---
---
description: Guidelines for PostgreSQL database interactions in Equoria
globs: ["backend/database/**/*.js", "backend/database/**/*.sql"]
alwaysApply: false
---
# PostgreSQL Database Best Practices

## Schema Design
- Use `INTEGER GENERATED ALWAYS AS IDENTITY` for primary keys (e.g., `horses.id`).
- Define foreign keys: `breed_id REFERENCES public.breeds(id)`, `owner_id REFERENCES public.users(id)`.
- Use `JSONB` for flexible data: `horses.genotype`, `horses.tack`, `breeds.allowed_alleles`.
- Store schema in `backend/database/schema.sql`.

## Query Optimization
- Use specific `SELECT` columns (e.g., `SELECT name, breed_id FROM public.horses`).
- Create indexes: `idx_horses_owner_id`, `idx_horses_breed_id`, `idx_horses_stable_id`.
- Use `EXPLAIN` to analyze query performance.
- Monitor with `pg_stat_statements` (optional).

## Security
- Use parameterized queries to prevent SQL injection (e.g., `db.query('SELECT * FROM public.horses WHERE id = $1', [id])`).
- Restrict database user permissions to `SELECT`, `INSERT`, `UPDATE`, `DELETE`.
- Store credentials in `.env` (e.g., `DATABASE_URL`).

## Transactions
- Use transactions for multi-step operations (e.g., seeding `horses` with `BEGIN`, `COMMIT`, `ROLLBACK`).
- Ensure atomicity for data consistency (e.g., event logging, breed updates).

## Breed Profiles
- Store in `breeds` table as `JSONB`: `allowed_alleles`, `disallowed_combinations`, `allele_weights`, `marking_bias`, `shade_bias`, `boolean_modifiers_prevalence`.
- Validate `determinePhenotype()` outputs against breed profiles.
- Reference `@docs/004_breeding_mechanics.mdc` for genetics rules.

## Testing
- Write tests for queries using `pgtest` or `testcontainers` with `.env.test`.
- Validate data integrity and query performance.
- Run `npm run test:database` before committing.

## Incremental Development
- Implement one query or schema change at a time.
- Write tests first, then code, then run tests.
- Validate against `@docs/004_breeding_mechanics.mdc` and `@docs/007_frameworks.mdc`.
- Clarify ambiguous prompts with the developer.

## References
- @docs/001_project_overview.mdc
- @docs/004_breeding_mechanics.mdc
- @docs/007_frameworks.mdc



- @docs/database_schema.md