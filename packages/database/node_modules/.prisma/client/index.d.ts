
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Breed
 * 
 */
export type Breed = $Result.DefaultSelection<Prisma.$BreedPayload>
/**
 * Model Stable
 * 
 */
export type Stable = $Result.DefaultSelection<Prisma.$StablePayload>
/**
 * Model Horse
 * 
 */
export type Horse = $Result.DefaultSelection<Prisma.$HorsePayload>
/**
 * Model Groom
 * 
 */
export type Groom = $Result.DefaultSelection<Prisma.$GroomPayload>
/**
 * Model GroomAssignment
 * 
 */
export type GroomAssignment = $Result.DefaultSelection<Prisma.$GroomAssignmentPayload>
/**
 * Model GroomInteraction
 * 
 */
export type GroomInteraction = $Result.DefaultSelection<Prisma.$GroomInteractionPayload>
/**
 * Model Show
 * 
 */
export type Show = $Result.DefaultSelection<Prisma.$ShowPayload>
/**
 * Model CompetitionResult
 * 
 */
export type CompetitionResult = $Result.DefaultSelection<Prisma.$CompetitionResultPayload>
/**
 * Model TrainingLog
 * 
 */
export type TrainingLog = $Result.DefaultSelection<Prisma.$TrainingLogPayload>
/**
 * Model FoalDevelopment
 * 
 */
export type FoalDevelopment = $Result.DefaultSelection<Prisma.$FoalDevelopmentPayload>
/**
 * Model FoalActivity
 * 
 */
export type FoalActivity = $Result.DefaultSelection<Prisma.$FoalActivityPayload>
/**
 * Model FoalTrainingHistory
 * 
 */
export type FoalTrainingHistory = $Result.DefaultSelection<Prisma.$FoalTrainingHistoryPayload>
/**
 * Model XpEvent
 * 
 */
export type XpEvent = $Result.DefaultSelection<Prisma.$XpEventPayload>
/**
 * Model RefreshToken
 * 
 */
export type RefreshToken = $Result.DefaultSelection<Prisma.$RefreshTokenPayload>
/**
 * Model HorseXpEvent
 * 
 */
export type HorseXpEvent = $Result.DefaultSelection<Prisma.$HorseXpEventPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.breed`: Exposes CRUD operations for the **Breed** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Breeds
    * const breeds = await prisma.breed.findMany()
    * ```
    */
  get breed(): Prisma.BreedDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stable`: Exposes CRUD operations for the **Stable** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Stables
    * const stables = await prisma.stable.findMany()
    * ```
    */
  get stable(): Prisma.StableDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.horse`: Exposes CRUD operations for the **Horse** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Horses
    * const horses = await prisma.horse.findMany()
    * ```
    */
  get horse(): Prisma.HorseDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.groom`: Exposes CRUD operations for the **Groom** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Grooms
    * const grooms = await prisma.groom.findMany()
    * ```
    */
  get groom(): Prisma.GroomDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.groomAssignment`: Exposes CRUD operations for the **GroomAssignment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more GroomAssignments
    * const groomAssignments = await prisma.groomAssignment.findMany()
    * ```
    */
  get groomAssignment(): Prisma.GroomAssignmentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.groomInteraction`: Exposes CRUD operations for the **GroomInteraction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more GroomInteractions
    * const groomInteractions = await prisma.groomInteraction.findMany()
    * ```
    */
  get groomInteraction(): Prisma.GroomInteractionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.show`: Exposes CRUD operations for the **Show** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Shows
    * const shows = await prisma.show.findMany()
    * ```
    */
  get show(): Prisma.ShowDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.competitionResult`: Exposes CRUD operations for the **CompetitionResult** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CompetitionResults
    * const competitionResults = await prisma.competitionResult.findMany()
    * ```
    */
  get competitionResult(): Prisma.CompetitionResultDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.trainingLog`: Exposes CRUD operations for the **TrainingLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TrainingLogs
    * const trainingLogs = await prisma.trainingLog.findMany()
    * ```
    */
  get trainingLog(): Prisma.TrainingLogDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.foalDevelopment`: Exposes CRUD operations for the **FoalDevelopment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FoalDevelopments
    * const foalDevelopments = await prisma.foalDevelopment.findMany()
    * ```
    */
  get foalDevelopment(): Prisma.FoalDevelopmentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.foalActivity`: Exposes CRUD operations for the **FoalActivity** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FoalActivities
    * const foalActivities = await prisma.foalActivity.findMany()
    * ```
    */
  get foalActivity(): Prisma.FoalActivityDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.foalTrainingHistory`: Exposes CRUD operations for the **FoalTrainingHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FoalTrainingHistories
    * const foalTrainingHistories = await prisma.foalTrainingHistory.findMany()
    * ```
    */
  get foalTrainingHistory(): Prisma.FoalTrainingHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.xpEvent`: Exposes CRUD operations for the **XpEvent** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more XpEvents
    * const xpEvents = await prisma.xpEvent.findMany()
    * ```
    */
  get xpEvent(): Prisma.XpEventDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.refreshToken`: Exposes CRUD operations for the **RefreshToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RefreshTokens
    * const refreshTokens = await prisma.refreshToken.findMany()
    * ```
    */
  get refreshToken(): Prisma.RefreshTokenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.horseXpEvent`: Exposes CRUD operations for the **HorseXpEvent** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HorseXpEvents
    * const horseXpEvents = await prisma.horseXpEvent.findMany()
    * ```
    */
  get horseXpEvent(): Prisma.HorseXpEventDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.8.2
   * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Breed: 'Breed',
    Stable: 'Stable',
    Horse: 'Horse',
    Groom: 'Groom',
    GroomAssignment: 'GroomAssignment',
    GroomInteraction: 'GroomInteraction',
    Show: 'Show',
    CompetitionResult: 'CompetitionResult',
    TrainingLog: 'TrainingLog',
    FoalDevelopment: 'FoalDevelopment',
    FoalActivity: 'FoalActivity',
    FoalTrainingHistory: 'FoalTrainingHistory',
    XpEvent: 'XpEvent',
    RefreshToken: 'RefreshToken',
    HorseXpEvent: 'HorseXpEvent'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user" | "breed" | "stable" | "horse" | "groom" | "groomAssignment" | "groomInteraction" | "show" | "competitionResult" | "trainingLog" | "foalDevelopment" | "foalActivity" | "foalTrainingHistory" | "xpEvent" | "refreshToken" | "horseXpEvent"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Breed: {
        payload: Prisma.$BreedPayload<ExtArgs>
        fields: Prisma.BreedFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BreedFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BreedPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BreedFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BreedPayload>
          }
          findFirst: {
            args: Prisma.BreedFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BreedPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BreedFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BreedPayload>
          }
          findMany: {
            args: Prisma.BreedFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BreedPayload>[]
          }
          create: {
            args: Prisma.BreedCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BreedPayload>
          }
          createMany: {
            args: Prisma.BreedCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BreedCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BreedPayload>[]
          }
          delete: {
            args: Prisma.BreedDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BreedPayload>
          }
          update: {
            args: Prisma.BreedUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BreedPayload>
          }
          deleteMany: {
            args: Prisma.BreedDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BreedUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BreedUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BreedPayload>[]
          }
          upsert: {
            args: Prisma.BreedUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BreedPayload>
          }
          aggregate: {
            args: Prisma.BreedAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBreed>
          }
          groupBy: {
            args: Prisma.BreedGroupByArgs<ExtArgs>
            result: $Utils.Optional<BreedGroupByOutputType>[]
          }
          count: {
            args: Prisma.BreedCountArgs<ExtArgs>
            result: $Utils.Optional<BreedCountAggregateOutputType> | number
          }
        }
      }
      Stable: {
        payload: Prisma.$StablePayload<ExtArgs>
        fields: Prisma.StableFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StableFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StablePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StableFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StablePayload>
          }
          findFirst: {
            args: Prisma.StableFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StablePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StableFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StablePayload>
          }
          findMany: {
            args: Prisma.StableFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StablePayload>[]
          }
          create: {
            args: Prisma.StableCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StablePayload>
          }
          createMany: {
            args: Prisma.StableCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StableCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StablePayload>[]
          }
          delete: {
            args: Prisma.StableDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StablePayload>
          }
          update: {
            args: Prisma.StableUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StablePayload>
          }
          deleteMany: {
            args: Prisma.StableDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StableUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.StableUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StablePayload>[]
          }
          upsert: {
            args: Prisma.StableUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StablePayload>
          }
          aggregate: {
            args: Prisma.StableAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStable>
          }
          groupBy: {
            args: Prisma.StableGroupByArgs<ExtArgs>
            result: $Utils.Optional<StableGroupByOutputType>[]
          }
          count: {
            args: Prisma.StableCountArgs<ExtArgs>
            result: $Utils.Optional<StableCountAggregateOutputType> | number
          }
        }
      }
      Horse: {
        payload: Prisma.$HorsePayload<ExtArgs>
        fields: Prisma.HorseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HorseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorsePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HorseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorsePayload>
          }
          findFirst: {
            args: Prisma.HorseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorsePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HorseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorsePayload>
          }
          findMany: {
            args: Prisma.HorseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorsePayload>[]
          }
          create: {
            args: Prisma.HorseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorsePayload>
          }
          createMany: {
            args: Prisma.HorseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HorseCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorsePayload>[]
          }
          delete: {
            args: Prisma.HorseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorsePayload>
          }
          update: {
            args: Prisma.HorseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorsePayload>
          }
          deleteMany: {
            args: Prisma.HorseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HorseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.HorseUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorsePayload>[]
          }
          upsert: {
            args: Prisma.HorseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorsePayload>
          }
          aggregate: {
            args: Prisma.HorseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHorse>
          }
          groupBy: {
            args: Prisma.HorseGroupByArgs<ExtArgs>
            result: $Utils.Optional<HorseGroupByOutputType>[]
          }
          count: {
            args: Prisma.HorseCountArgs<ExtArgs>
            result: $Utils.Optional<HorseCountAggregateOutputType> | number
          }
        }
      }
      Groom: {
        payload: Prisma.$GroomPayload<ExtArgs>
        fields: Prisma.GroomFieldRefs
        operations: {
          findUnique: {
            args: Prisma.GroomFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.GroomFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomPayload>
          }
          findFirst: {
            args: Prisma.GroomFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.GroomFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomPayload>
          }
          findMany: {
            args: Prisma.GroomFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomPayload>[]
          }
          create: {
            args: Prisma.GroomCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomPayload>
          }
          createMany: {
            args: Prisma.GroomCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.GroomCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomPayload>[]
          }
          delete: {
            args: Prisma.GroomDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomPayload>
          }
          update: {
            args: Prisma.GroomUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomPayload>
          }
          deleteMany: {
            args: Prisma.GroomDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.GroomUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.GroomUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomPayload>[]
          }
          upsert: {
            args: Prisma.GroomUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomPayload>
          }
          aggregate: {
            args: Prisma.GroomAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGroom>
          }
          groupBy: {
            args: Prisma.GroomGroupByArgs<ExtArgs>
            result: $Utils.Optional<GroomGroupByOutputType>[]
          }
          count: {
            args: Prisma.GroomCountArgs<ExtArgs>
            result: $Utils.Optional<GroomCountAggregateOutputType> | number
          }
        }
      }
      GroomAssignment: {
        payload: Prisma.$GroomAssignmentPayload<ExtArgs>
        fields: Prisma.GroomAssignmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.GroomAssignmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomAssignmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.GroomAssignmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomAssignmentPayload>
          }
          findFirst: {
            args: Prisma.GroomAssignmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomAssignmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.GroomAssignmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomAssignmentPayload>
          }
          findMany: {
            args: Prisma.GroomAssignmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomAssignmentPayload>[]
          }
          create: {
            args: Prisma.GroomAssignmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomAssignmentPayload>
          }
          createMany: {
            args: Prisma.GroomAssignmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.GroomAssignmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomAssignmentPayload>[]
          }
          delete: {
            args: Prisma.GroomAssignmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomAssignmentPayload>
          }
          update: {
            args: Prisma.GroomAssignmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomAssignmentPayload>
          }
          deleteMany: {
            args: Prisma.GroomAssignmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.GroomAssignmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.GroomAssignmentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomAssignmentPayload>[]
          }
          upsert: {
            args: Prisma.GroomAssignmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomAssignmentPayload>
          }
          aggregate: {
            args: Prisma.GroomAssignmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGroomAssignment>
          }
          groupBy: {
            args: Prisma.GroomAssignmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<GroomAssignmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.GroomAssignmentCountArgs<ExtArgs>
            result: $Utils.Optional<GroomAssignmentCountAggregateOutputType> | number
          }
        }
      }
      GroomInteraction: {
        payload: Prisma.$GroomInteractionPayload<ExtArgs>
        fields: Prisma.GroomInteractionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.GroomInteractionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomInteractionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.GroomInteractionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomInteractionPayload>
          }
          findFirst: {
            args: Prisma.GroomInteractionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomInteractionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.GroomInteractionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomInteractionPayload>
          }
          findMany: {
            args: Prisma.GroomInteractionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomInteractionPayload>[]
          }
          create: {
            args: Prisma.GroomInteractionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomInteractionPayload>
          }
          createMany: {
            args: Prisma.GroomInteractionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.GroomInteractionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomInteractionPayload>[]
          }
          delete: {
            args: Prisma.GroomInteractionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomInteractionPayload>
          }
          update: {
            args: Prisma.GroomInteractionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomInteractionPayload>
          }
          deleteMany: {
            args: Prisma.GroomInteractionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.GroomInteractionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.GroomInteractionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomInteractionPayload>[]
          }
          upsert: {
            args: Prisma.GroomInteractionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GroomInteractionPayload>
          }
          aggregate: {
            args: Prisma.GroomInteractionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGroomInteraction>
          }
          groupBy: {
            args: Prisma.GroomInteractionGroupByArgs<ExtArgs>
            result: $Utils.Optional<GroomInteractionGroupByOutputType>[]
          }
          count: {
            args: Prisma.GroomInteractionCountArgs<ExtArgs>
            result: $Utils.Optional<GroomInteractionCountAggregateOutputType> | number
          }
        }
      }
      Show: {
        payload: Prisma.$ShowPayload<ExtArgs>
        fields: Prisma.ShowFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ShowFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShowPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ShowFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShowPayload>
          }
          findFirst: {
            args: Prisma.ShowFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShowPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ShowFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShowPayload>
          }
          findMany: {
            args: Prisma.ShowFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShowPayload>[]
          }
          create: {
            args: Prisma.ShowCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShowPayload>
          }
          createMany: {
            args: Prisma.ShowCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ShowCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShowPayload>[]
          }
          delete: {
            args: Prisma.ShowDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShowPayload>
          }
          update: {
            args: Prisma.ShowUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShowPayload>
          }
          deleteMany: {
            args: Prisma.ShowDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ShowUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ShowUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShowPayload>[]
          }
          upsert: {
            args: Prisma.ShowUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShowPayload>
          }
          aggregate: {
            args: Prisma.ShowAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateShow>
          }
          groupBy: {
            args: Prisma.ShowGroupByArgs<ExtArgs>
            result: $Utils.Optional<ShowGroupByOutputType>[]
          }
          count: {
            args: Prisma.ShowCountArgs<ExtArgs>
            result: $Utils.Optional<ShowCountAggregateOutputType> | number
          }
        }
      }
      CompetitionResult: {
        payload: Prisma.$CompetitionResultPayload<ExtArgs>
        fields: Prisma.CompetitionResultFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CompetitionResultFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompetitionResultPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CompetitionResultFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompetitionResultPayload>
          }
          findFirst: {
            args: Prisma.CompetitionResultFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompetitionResultPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CompetitionResultFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompetitionResultPayload>
          }
          findMany: {
            args: Prisma.CompetitionResultFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompetitionResultPayload>[]
          }
          create: {
            args: Prisma.CompetitionResultCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompetitionResultPayload>
          }
          createMany: {
            args: Prisma.CompetitionResultCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CompetitionResultCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompetitionResultPayload>[]
          }
          delete: {
            args: Prisma.CompetitionResultDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompetitionResultPayload>
          }
          update: {
            args: Prisma.CompetitionResultUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompetitionResultPayload>
          }
          deleteMany: {
            args: Prisma.CompetitionResultDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CompetitionResultUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CompetitionResultUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompetitionResultPayload>[]
          }
          upsert: {
            args: Prisma.CompetitionResultUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompetitionResultPayload>
          }
          aggregate: {
            args: Prisma.CompetitionResultAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompetitionResult>
          }
          groupBy: {
            args: Prisma.CompetitionResultGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompetitionResultGroupByOutputType>[]
          }
          count: {
            args: Prisma.CompetitionResultCountArgs<ExtArgs>
            result: $Utils.Optional<CompetitionResultCountAggregateOutputType> | number
          }
        }
      }
      TrainingLog: {
        payload: Prisma.$TrainingLogPayload<ExtArgs>
        fields: Prisma.TrainingLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TrainingLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrainingLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TrainingLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrainingLogPayload>
          }
          findFirst: {
            args: Prisma.TrainingLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrainingLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TrainingLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrainingLogPayload>
          }
          findMany: {
            args: Prisma.TrainingLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrainingLogPayload>[]
          }
          create: {
            args: Prisma.TrainingLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrainingLogPayload>
          }
          createMany: {
            args: Prisma.TrainingLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TrainingLogCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrainingLogPayload>[]
          }
          delete: {
            args: Prisma.TrainingLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrainingLogPayload>
          }
          update: {
            args: Prisma.TrainingLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrainingLogPayload>
          }
          deleteMany: {
            args: Prisma.TrainingLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TrainingLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TrainingLogUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrainingLogPayload>[]
          }
          upsert: {
            args: Prisma.TrainingLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrainingLogPayload>
          }
          aggregate: {
            args: Prisma.TrainingLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTrainingLog>
          }
          groupBy: {
            args: Prisma.TrainingLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<TrainingLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.TrainingLogCountArgs<ExtArgs>
            result: $Utils.Optional<TrainingLogCountAggregateOutputType> | number
          }
        }
      }
      FoalDevelopment: {
        payload: Prisma.$FoalDevelopmentPayload<ExtArgs>
        fields: Prisma.FoalDevelopmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FoalDevelopmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalDevelopmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FoalDevelopmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalDevelopmentPayload>
          }
          findFirst: {
            args: Prisma.FoalDevelopmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalDevelopmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FoalDevelopmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalDevelopmentPayload>
          }
          findMany: {
            args: Prisma.FoalDevelopmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalDevelopmentPayload>[]
          }
          create: {
            args: Prisma.FoalDevelopmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalDevelopmentPayload>
          }
          createMany: {
            args: Prisma.FoalDevelopmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FoalDevelopmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalDevelopmentPayload>[]
          }
          delete: {
            args: Prisma.FoalDevelopmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalDevelopmentPayload>
          }
          update: {
            args: Prisma.FoalDevelopmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalDevelopmentPayload>
          }
          deleteMany: {
            args: Prisma.FoalDevelopmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FoalDevelopmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FoalDevelopmentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalDevelopmentPayload>[]
          }
          upsert: {
            args: Prisma.FoalDevelopmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalDevelopmentPayload>
          }
          aggregate: {
            args: Prisma.FoalDevelopmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFoalDevelopment>
          }
          groupBy: {
            args: Prisma.FoalDevelopmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<FoalDevelopmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.FoalDevelopmentCountArgs<ExtArgs>
            result: $Utils.Optional<FoalDevelopmentCountAggregateOutputType> | number
          }
        }
      }
      FoalActivity: {
        payload: Prisma.$FoalActivityPayload<ExtArgs>
        fields: Prisma.FoalActivityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FoalActivityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalActivityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FoalActivityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalActivityPayload>
          }
          findFirst: {
            args: Prisma.FoalActivityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalActivityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FoalActivityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalActivityPayload>
          }
          findMany: {
            args: Prisma.FoalActivityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalActivityPayload>[]
          }
          create: {
            args: Prisma.FoalActivityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalActivityPayload>
          }
          createMany: {
            args: Prisma.FoalActivityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FoalActivityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalActivityPayload>[]
          }
          delete: {
            args: Prisma.FoalActivityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalActivityPayload>
          }
          update: {
            args: Prisma.FoalActivityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalActivityPayload>
          }
          deleteMany: {
            args: Prisma.FoalActivityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FoalActivityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FoalActivityUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalActivityPayload>[]
          }
          upsert: {
            args: Prisma.FoalActivityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalActivityPayload>
          }
          aggregate: {
            args: Prisma.FoalActivityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFoalActivity>
          }
          groupBy: {
            args: Prisma.FoalActivityGroupByArgs<ExtArgs>
            result: $Utils.Optional<FoalActivityGroupByOutputType>[]
          }
          count: {
            args: Prisma.FoalActivityCountArgs<ExtArgs>
            result: $Utils.Optional<FoalActivityCountAggregateOutputType> | number
          }
        }
      }
      FoalTrainingHistory: {
        payload: Prisma.$FoalTrainingHistoryPayload<ExtArgs>
        fields: Prisma.FoalTrainingHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FoalTrainingHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalTrainingHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FoalTrainingHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalTrainingHistoryPayload>
          }
          findFirst: {
            args: Prisma.FoalTrainingHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalTrainingHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FoalTrainingHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalTrainingHistoryPayload>
          }
          findMany: {
            args: Prisma.FoalTrainingHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalTrainingHistoryPayload>[]
          }
          create: {
            args: Prisma.FoalTrainingHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalTrainingHistoryPayload>
          }
          createMany: {
            args: Prisma.FoalTrainingHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FoalTrainingHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalTrainingHistoryPayload>[]
          }
          delete: {
            args: Prisma.FoalTrainingHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalTrainingHistoryPayload>
          }
          update: {
            args: Prisma.FoalTrainingHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalTrainingHistoryPayload>
          }
          deleteMany: {
            args: Prisma.FoalTrainingHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FoalTrainingHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FoalTrainingHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalTrainingHistoryPayload>[]
          }
          upsert: {
            args: Prisma.FoalTrainingHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FoalTrainingHistoryPayload>
          }
          aggregate: {
            args: Prisma.FoalTrainingHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFoalTrainingHistory>
          }
          groupBy: {
            args: Prisma.FoalTrainingHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<FoalTrainingHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.FoalTrainingHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<FoalTrainingHistoryCountAggregateOutputType> | number
          }
        }
      }
      XpEvent: {
        payload: Prisma.$XpEventPayload<ExtArgs>
        fields: Prisma.XpEventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.XpEventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$XpEventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.XpEventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$XpEventPayload>
          }
          findFirst: {
            args: Prisma.XpEventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$XpEventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.XpEventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$XpEventPayload>
          }
          findMany: {
            args: Prisma.XpEventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$XpEventPayload>[]
          }
          create: {
            args: Prisma.XpEventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$XpEventPayload>
          }
          createMany: {
            args: Prisma.XpEventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.XpEventCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$XpEventPayload>[]
          }
          delete: {
            args: Prisma.XpEventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$XpEventPayload>
          }
          update: {
            args: Prisma.XpEventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$XpEventPayload>
          }
          deleteMany: {
            args: Prisma.XpEventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.XpEventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.XpEventUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$XpEventPayload>[]
          }
          upsert: {
            args: Prisma.XpEventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$XpEventPayload>
          }
          aggregate: {
            args: Prisma.XpEventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateXpEvent>
          }
          groupBy: {
            args: Prisma.XpEventGroupByArgs<ExtArgs>
            result: $Utils.Optional<XpEventGroupByOutputType>[]
          }
          count: {
            args: Prisma.XpEventCountArgs<ExtArgs>
            result: $Utils.Optional<XpEventCountAggregateOutputType> | number
          }
        }
      }
      RefreshToken: {
        payload: Prisma.$RefreshTokenPayload<ExtArgs>
        fields: Prisma.RefreshTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RefreshTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RefreshTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          findFirst: {
            args: Prisma.RefreshTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RefreshTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          findMany: {
            args: Prisma.RefreshTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          create: {
            args: Prisma.RefreshTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          createMany: {
            args: Prisma.RefreshTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RefreshTokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          delete: {
            args: Prisma.RefreshTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          update: {
            args: Prisma.RefreshTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          deleteMany: {
            args: Prisma.RefreshTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RefreshTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RefreshTokenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          upsert: {
            args: Prisma.RefreshTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          aggregate: {
            args: Prisma.RefreshTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRefreshToken>
          }
          groupBy: {
            args: Prisma.RefreshTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<RefreshTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.RefreshTokenCountArgs<ExtArgs>
            result: $Utils.Optional<RefreshTokenCountAggregateOutputType> | number
          }
        }
      }
      HorseXpEvent: {
        payload: Prisma.$HorseXpEventPayload<ExtArgs>
        fields: Prisma.HorseXpEventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HorseXpEventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorseXpEventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HorseXpEventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorseXpEventPayload>
          }
          findFirst: {
            args: Prisma.HorseXpEventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorseXpEventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HorseXpEventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorseXpEventPayload>
          }
          findMany: {
            args: Prisma.HorseXpEventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorseXpEventPayload>[]
          }
          create: {
            args: Prisma.HorseXpEventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorseXpEventPayload>
          }
          createMany: {
            args: Prisma.HorseXpEventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HorseXpEventCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorseXpEventPayload>[]
          }
          delete: {
            args: Prisma.HorseXpEventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorseXpEventPayload>
          }
          update: {
            args: Prisma.HorseXpEventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorseXpEventPayload>
          }
          deleteMany: {
            args: Prisma.HorseXpEventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HorseXpEventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.HorseXpEventUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorseXpEventPayload>[]
          }
          upsert: {
            args: Prisma.HorseXpEventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorseXpEventPayload>
          }
          aggregate: {
            args: Prisma.HorseXpEventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHorseXpEvent>
          }
          groupBy: {
            args: Prisma.HorseXpEventGroupByArgs<ExtArgs>
            result: $Utils.Optional<HorseXpEventGroupByOutputType>[]
          }
          count: {
            args: Prisma.HorseXpEventCountArgs<ExtArgs>
            result: $Utils.Optional<HorseXpEventCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    breed?: BreedOmit
    stable?: StableOmit
    horse?: HorseOmit
    groom?: GroomOmit
    groomAssignment?: GroomAssignmentOmit
    groomInteraction?: GroomInteractionOmit
    show?: ShowOmit
    competitionResult?: CompetitionResultOmit
    trainingLog?: TrainingLogOmit
    foalDevelopment?: FoalDevelopmentOmit
    foalActivity?: FoalActivityOmit
    foalTrainingHistory?: FoalTrainingHistoryOmit
    xpEvent?: XpEventOmit
    refreshToken?: RefreshTokenOmit
    horseXpEvent?: HorseXpEventOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    groomAssignments: number
    grooms: number
    horses: number
    refreshTokens: number
    shows: number
    xpEvents: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groomAssignments?: boolean | UserCountOutputTypeCountGroomAssignmentsArgs
    grooms?: boolean | UserCountOutputTypeCountGroomsArgs
    horses?: boolean | UserCountOutputTypeCountHorsesArgs
    refreshTokens?: boolean | UserCountOutputTypeCountRefreshTokensArgs
    shows?: boolean | UserCountOutputTypeCountShowsArgs
    xpEvents?: boolean | UserCountOutputTypeCountXpEventsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountGroomAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GroomAssignmentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountGroomsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GroomWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountHorsesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HorseWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRefreshTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountShowsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShowWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountXpEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: XpEventWhereInput
  }


  /**
   * Count Type BreedCountOutputType
   */

  export type BreedCountOutputType = {
    horses: number
  }

  export type BreedCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horses?: boolean | BreedCountOutputTypeCountHorsesArgs
  }

  // Custom InputTypes
  /**
   * BreedCountOutputType without action
   */
  export type BreedCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BreedCountOutputType
     */
    select?: BreedCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BreedCountOutputType without action
   */
  export type BreedCountOutputTypeCountHorsesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HorseWhereInput
  }


  /**
   * Count Type StableCountOutputType
   */

  export type StableCountOutputType = {
    horses: number
  }

  export type StableCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horses?: boolean | StableCountOutputTypeCountHorsesArgs
  }

  // Custom InputTypes
  /**
   * StableCountOutputType without action
   */
  export type StableCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StableCountOutputType
     */
    select?: StableCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * StableCountOutputType without action
   */
  export type StableCountOutputTypeCountHorsesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HorseWhereInput
  }


  /**
   * Count Type HorseCountOutputType
   */

  export type HorseCountOutputType = {
    competitionResults: number
    foalActivities: number
    foalTrainingHistory: number
    groomAssignments: number
    groomInteractions: number
    horseXpEvents: number
    damOffspring: number
    sireOffspring: number
    trainingLogs: number
  }

  export type HorseCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    competitionResults?: boolean | HorseCountOutputTypeCountCompetitionResultsArgs
    foalActivities?: boolean | HorseCountOutputTypeCountFoalActivitiesArgs
    foalTrainingHistory?: boolean | HorseCountOutputTypeCountFoalTrainingHistoryArgs
    groomAssignments?: boolean | HorseCountOutputTypeCountGroomAssignmentsArgs
    groomInteractions?: boolean | HorseCountOutputTypeCountGroomInteractionsArgs
    horseXpEvents?: boolean | HorseCountOutputTypeCountHorseXpEventsArgs
    damOffspring?: boolean | HorseCountOutputTypeCountDamOffspringArgs
    sireOffspring?: boolean | HorseCountOutputTypeCountSireOffspringArgs
    trainingLogs?: boolean | HorseCountOutputTypeCountTrainingLogsArgs
  }

  // Custom InputTypes
  /**
   * HorseCountOutputType without action
   */
  export type HorseCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorseCountOutputType
     */
    select?: HorseCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * HorseCountOutputType without action
   */
  export type HorseCountOutputTypeCountCompetitionResultsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompetitionResultWhereInput
  }

  /**
   * HorseCountOutputType without action
   */
  export type HorseCountOutputTypeCountFoalActivitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FoalActivityWhereInput
  }

  /**
   * HorseCountOutputType without action
   */
  export type HorseCountOutputTypeCountFoalTrainingHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FoalTrainingHistoryWhereInput
  }

  /**
   * HorseCountOutputType without action
   */
  export type HorseCountOutputTypeCountGroomAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GroomAssignmentWhereInput
  }

  /**
   * HorseCountOutputType without action
   */
  export type HorseCountOutputTypeCountGroomInteractionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GroomInteractionWhereInput
  }

  /**
   * HorseCountOutputType without action
   */
  export type HorseCountOutputTypeCountHorseXpEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HorseXpEventWhereInput
  }

  /**
   * HorseCountOutputType without action
   */
  export type HorseCountOutputTypeCountDamOffspringArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HorseWhereInput
  }

  /**
   * HorseCountOutputType without action
   */
  export type HorseCountOutputTypeCountSireOffspringArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HorseWhereInput
  }

  /**
   * HorseCountOutputType without action
   */
  export type HorseCountOutputTypeCountTrainingLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TrainingLogWhereInput
  }


  /**
   * Count Type GroomCountOutputType
   */

  export type GroomCountOutputType = {
    groomAssignments: number
    groomInteractions: number
  }

  export type GroomCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groomAssignments?: boolean | GroomCountOutputTypeCountGroomAssignmentsArgs
    groomInteractions?: boolean | GroomCountOutputTypeCountGroomInteractionsArgs
  }

  // Custom InputTypes
  /**
   * GroomCountOutputType without action
   */
  export type GroomCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomCountOutputType
     */
    select?: GroomCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * GroomCountOutputType without action
   */
  export type GroomCountOutputTypeCountGroomAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GroomAssignmentWhereInput
  }

  /**
   * GroomCountOutputType without action
   */
  export type GroomCountOutputTypeCountGroomInteractionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GroomInteractionWhereInput
  }


  /**
   * Count Type GroomAssignmentCountOutputType
   */

  export type GroomAssignmentCountOutputType = {
    groomInteractions: number
  }

  export type GroomAssignmentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groomInteractions?: boolean | GroomAssignmentCountOutputTypeCountGroomInteractionsArgs
  }

  // Custom InputTypes
  /**
   * GroomAssignmentCountOutputType without action
   */
  export type GroomAssignmentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomAssignmentCountOutputType
     */
    select?: GroomAssignmentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * GroomAssignmentCountOutputType without action
   */
  export type GroomAssignmentCountOutputTypeCountGroomInteractionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GroomInteractionWhereInput
  }


  /**
   * Count Type ShowCountOutputType
   */

  export type ShowCountOutputType = {
    competitionResults: number
  }

  export type ShowCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    competitionResults?: boolean | ShowCountOutputTypeCountCompetitionResultsArgs
  }

  // Custom InputTypes
  /**
   * ShowCountOutputType without action
   */
  export type ShowCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShowCountOutputType
     */
    select?: ShowCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ShowCountOutputType without action
   */
  export type ShowCountOutputTypeCountCompetitionResultsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompetitionResultWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    money: number | null
    level: number | null
    xp: number | null
  }

  export type UserSumAggregateOutputType = {
    money: number | null
    level: number | null
    xp: number | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    username: string | null
    email: string | null
    password: string | null
    firstName: string | null
    lastName: string | null
    money: number | null
    level: number | null
    xp: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    username: string | null
    email: string | null
    password: string | null
    firstName: string | null
    lastName: string | null
    money: number | null
    level: number | null
    xp: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    username: number
    email: number
    password: number
    firstName: number
    lastName: number
    money: number
    level: number
    xp: number
    settings: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    money?: true
    level?: true
    xp?: true
  }

  export type UserSumAggregateInputType = {
    money?: true
    level?: true
    xp?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    firstName?: true
    lastName?: true
    money?: true
    level?: true
    xp?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    firstName?: true
    lastName?: true
    money?: true
    level?: true
    xp?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    firstName?: true
    lastName?: true
    money?: true
    level?: true
    xp?: true
    settings?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    username: string
    email: string
    password: string
    firstName: string
    lastName: string
    money: number
    level: number
    xp: number
    settings: JsonValue
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    money?: boolean
    level?: boolean
    xp?: boolean
    settings?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    groomAssignments?: boolean | User$groomAssignmentsArgs<ExtArgs>
    grooms?: boolean | User$groomsArgs<ExtArgs>
    horses?: boolean | User$horsesArgs<ExtArgs>
    refreshTokens?: boolean | User$refreshTokensArgs<ExtArgs>
    shows?: boolean | User$showsArgs<ExtArgs>
    xpEvents?: boolean | User$xpEventsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    money?: boolean
    level?: boolean
    xp?: boolean
    settings?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    money?: boolean
    level?: boolean
    xp?: boolean
    settings?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    money?: boolean
    level?: boolean
    xp?: boolean
    settings?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "email" | "password" | "firstName" | "lastName" | "money" | "level" | "xp" | "settings" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groomAssignments?: boolean | User$groomAssignmentsArgs<ExtArgs>
    grooms?: boolean | User$groomsArgs<ExtArgs>
    horses?: boolean | User$horsesArgs<ExtArgs>
    refreshTokens?: boolean | User$refreshTokensArgs<ExtArgs>
    shows?: boolean | User$showsArgs<ExtArgs>
    xpEvents?: boolean | User$xpEventsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      groomAssignments: Prisma.$GroomAssignmentPayload<ExtArgs>[]
      grooms: Prisma.$GroomPayload<ExtArgs>[]
      horses: Prisma.$HorsePayload<ExtArgs>[]
      refreshTokens: Prisma.$RefreshTokenPayload<ExtArgs>[]
      shows: Prisma.$ShowPayload<ExtArgs>[]
      xpEvents: Prisma.$XpEventPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * Unique identifier for each user
       */
      id: string
      /**
       * Username used for login or display
       */
      username: string
      /**
       * Email address (must be unique)
       */
      email: string
      /**
       * Hashed password
       */
      password: string
      /**
       * First and last name for display purposes
       */
      firstName: string
      lastName: string
      /**
       * In-game currency (or balance)
       */
      money: number
      /**
       * Current level of the user
       */
      level: number
      /**
       * Experience points toward next level
       */
      xp: number
      /**
       * JSON object for customizable settings (theme, preferences, etc.)
       */
      settings: Prisma.JsonValue
      /**
       * Timestamps
       */
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    groomAssignments<T extends User$groomAssignmentsArgs<ExtArgs> = {}>(args?: Subset<T, User$groomAssignmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroomAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    grooms<T extends User$groomsArgs<ExtArgs> = {}>(args?: Subset<T, User$groomsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroomPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    horses<T extends User$horsesArgs<ExtArgs> = {}>(args?: Subset<T, User$horsesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    refreshTokens<T extends User$refreshTokensArgs<ExtArgs> = {}>(args?: Subset<T, User$refreshTokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    shows<T extends User$showsArgs<ExtArgs> = {}>(args?: Subset<T, User$showsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShowPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    xpEvents<T extends User$xpEventsArgs<ExtArgs> = {}>(args?: Subset<T, User$xpEventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$XpEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly username: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly money: FieldRef<"User", 'Int'>
    readonly level: FieldRef<"User", 'Int'>
    readonly xp: FieldRef<"User", 'Int'>
    readonly settings: FieldRef<"User", 'Json'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.groomAssignments
   */
  export type User$groomAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomAssignment
     */
    select?: GroomAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomAssignment
     */
    omit?: GroomAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomAssignmentInclude<ExtArgs> | null
    where?: GroomAssignmentWhereInput
    orderBy?: GroomAssignmentOrderByWithRelationInput | GroomAssignmentOrderByWithRelationInput[]
    cursor?: GroomAssignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GroomAssignmentScalarFieldEnum | GroomAssignmentScalarFieldEnum[]
  }

  /**
   * User.grooms
   */
  export type User$groomsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Groom
     */
    select?: GroomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Groom
     */
    omit?: GroomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInclude<ExtArgs> | null
    where?: GroomWhereInput
    orderBy?: GroomOrderByWithRelationInput | GroomOrderByWithRelationInput[]
    cursor?: GroomWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GroomScalarFieldEnum | GroomScalarFieldEnum[]
  }

  /**
   * User.horses
   */
  export type User$horsesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horse
     */
    select?: HorseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horse
     */
    omit?: HorseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseInclude<ExtArgs> | null
    where?: HorseWhereInput
    orderBy?: HorseOrderByWithRelationInput | HorseOrderByWithRelationInput[]
    cursor?: HorseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HorseScalarFieldEnum | HorseScalarFieldEnum[]
  }

  /**
   * User.refreshTokens
   */
  export type User$refreshTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    cursor?: RefreshTokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * User.shows
   */
  export type User$showsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Show
     */
    select?: ShowSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Show
     */
    omit?: ShowOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShowInclude<ExtArgs> | null
    where?: ShowWhereInput
    orderBy?: ShowOrderByWithRelationInput | ShowOrderByWithRelationInput[]
    cursor?: ShowWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShowScalarFieldEnum | ShowScalarFieldEnum[]
  }

  /**
   * User.xpEvents
   */
  export type User$xpEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the XpEvent
     */
    select?: XpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the XpEvent
     */
    omit?: XpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: XpEventInclude<ExtArgs> | null
    where?: XpEventWhereInput
    orderBy?: XpEventOrderByWithRelationInput | XpEventOrderByWithRelationInput[]
    cursor?: XpEventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: XpEventScalarFieldEnum | XpEventScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Breed
   */

  export type AggregateBreed = {
    _count: BreedCountAggregateOutputType | null
    _avg: BreedAvgAggregateOutputType | null
    _sum: BreedSumAggregateOutputType | null
    _min: BreedMinAggregateOutputType | null
    _max: BreedMaxAggregateOutputType | null
  }

  export type BreedAvgAggregateOutputType = {
    id: number | null
  }

  export type BreedSumAggregateOutputType = {
    id: number | null
  }

  export type BreedMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
  }

  export type BreedMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
  }

  export type BreedCountAggregateOutputType = {
    id: number
    name: number
    description: number
    _all: number
  }


  export type BreedAvgAggregateInputType = {
    id?: true
  }

  export type BreedSumAggregateInputType = {
    id?: true
  }

  export type BreedMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
  }

  export type BreedMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
  }

  export type BreedCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    _all?: true
  }

  export type BreedAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Breed to aggregate.
     */
    where?: BreedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Breeds to fetch.
     */
    orderBy?: BreedOrderByWithRelationInput | BreedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BreedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Breeds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Breeds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Breeds
    **/
    _count?: true | BreedCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BreedAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BreedSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BreedMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BreedMaxAggregateInputType
  }

  export type GetBreedAggregateType<T extends BreedAggregateArgs> = {
        [P in keyof T & keyof AggregateBreed]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBreed[P]>
      : GetScalarType<T[P], AggregateBreed[P]>
  }




  export type BreedGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BreedWhereInput
    orderBy?: BreedOrderByWithAggregationInput | BreedOrderByWithAggregationInput[]
    by: BreedScalarFieldEnum[] | BreedScalarFieldEnum
    having?: BreedScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BreedCountAggregateInputType | true
    _avg?: BreedAvgAggregateInputType
    _sum?: BreedSumAggregateInputType
    _min?: BreedMinAggregateInputType
    _max?: BreedMaxAggregateInputType
  }

  export type BreedGroupByOutputType = {
    id: number
    name: string
    description: string | null
    _count: BreedCountAggregateOutputType | null
    _avg: BreedAvgAggregateOutputType | null
    _sum: BreedSumAggregateOutputType | null
    _min: BreedMinAggregateOutputType | null
    _max: BreedMaxAggregateOutputType | null
  }

  type GetBreedGroupByPayload<T extends BreedGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BreedGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BreedGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BreedGroupByOutputType[P]>
            : GetScalarType<T[P], BreedGroupByOutputType[P]>
        }
      >
    >


  export type BreedSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    horses?: boolean | Breed$horsesArgs<ExtArgs>
    _count?: boolean | BreedCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["breed"]>

  export type BreedSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
  }, ExtArgs["result"]["breed"]>

  export type BreedSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
  }, ExtArgs["result"]["breed"]>

  export type BreedSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
  }

  export type BreedOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description", ExtArgs["result"]["breed"]>
  export type BreedInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horses?: boolean | Breed$horsesArgs<ExtArgs>
    _count?: boolean | BreedCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BreedIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type BreedIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $BreedPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Breed"
    objects: {
      horses: Prisma.$HorsePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * Unique identifier for each breed
       */
      id: number
      /**
       * Name of the breed
       */
      name: string
      /**
       * Description of the breed
       */
      description: string | null
    }, ExtArgs["result"]["breed"]>
    composites: {}
  }

  type BreedGetPayload<S extends boolean | null | undefined | BreedDefaultArgs> = $Result.GetResult<Prisma.$BreedPayload, S>

  type BreedCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BreedFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BreedCountAggregateInputType | true
    }

  export interface BreedDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Breed'], meta: { name: 'Breed' } }
    /**
     * Find zero or one Breed that matches the filter.
     * @param {BreedFindUniqueArgs} args - Arguments to find a Breed
     * @example
     * // Get one Breed
     * const breed = await prisma.breed.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BreedFindUniqueArgs>(args: SelectSubset<T, BreedFindUniqueArgs<ExtArgs>>): Prisma__BreedClient<$Result.GetResult<Prisma.$BreedPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Breed that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BreedFindUniqueOrThrowArgs} args - Arguments to find a Breed
     * @example
     * // Get one Breed
     * const breed = await prisma.breed.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BreedFindUniqueOrThrowArgs>(args: SelectSubset<T, BreedFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BreedClient<$Result.GetResult<Prisma.$BreedPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Breed that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BreedFindFirstArgs} args - Arguments to find a Breed
     * @example
     * // Get one Breed
     * const breed = await prisma.breed.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BreedFindFirstArgs>(args?: SelectSubset<T, BreedFindFirstArgs<ExtArgs>>): Prisma__BreedClient<$Result.GetResult<Prisma.$BreedPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Breed that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BreedFindFirstOrThrowArgs} args - Arguments to find a Breed
     * @example
     * // Get one Breed
     * const breed = await prisma.breed.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BreedFindFirstOrThrowArgs>(args?: SelectSubset<T, BreedFindFirstOrThrowArgs<ExtArgs>>): Prisma__BreedClient<$Result.GetResult<Prisma.$BreedPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Breeds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BreedFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Breeds
     * const breeds = await prisma.breed.findMany()
     * 
     * // Get first 10 Breeds
     * const breeds = await prisma.breed.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const breedWithIdOnly = await prisma.breed.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BreedFindManyArgs>(args?: SelectSubset<T, BreedFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BreedPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Breed.
     * @param {BreedCreateArgs} args - Arguments to create a Breed.
     * @example
     * // Create one Breed
     * const Breed = await prisma.breed.create({
     *   data: {
     *     // ... data to create a Breed
     *   }
     * })
     * 
     */
    create<T extends BreedCreateArgs>(args: SelectSubset<T, BreedCreateArgs<ExtArgs>>): Prisma__BreedClient<$Result.GetResult<Prisma.$BreedPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Breeds.
     * @param {BreedCreateManyArgs} args - Arguments to create many Breeds.
     * @example
     * // Create many Breeds
     * const breed = await prisma.breed.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BreedCreateManyArgs>(args?: SelectSubset<T, BreedCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Breeds and returns the data saved in the database.
     * @param {BreedCreateManyAndReturnArgs} args - Arguments to create many Breeds.
     * @example
     * // Create many Breeds
     * const breed = await prisma.breed.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Breeds and only return the `id`
     * const breedWithIdOnly = await prisma.breed.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BreedCreateManyAndReturnArgs>(args?: SelectSubset<T, BreedCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BreedPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Breed.
     * @param {BreedDeleteArgs} args - Arguments to delete one Breed.
     * @example
     * // Delete one Breed
     * const Breed = await prisma.breed.delete({
     *   where: {
     *     // ... filter to delete one Breed
     *   }
     * })
     * 
     */
    delete<T extends BreedDeleteArgs>(args: SelectSubset<T, BreedDeleteArgs<ExtArgs>>): Prisma__BreedClient<$Result.GetResult<Prisma.$BreedPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Breed.
     * @param {BreedUpdateArgs} args - Arguments to update one Breed.
     * @example
     * // Update one Breed
     * const breed = await prisma.breed.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BreedUpdateArgs>(args: SelectSubset<T, BreedUpdateArgs<ExtArgs>>): Prisma__BreedClient<$Result.GetResult<Prisma.$BreedPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Breeds.
     * @param {BreedDeleteManyArgs} args - Arguments to filter Breeds to delete.
     * @example
     * // Delete a few Breeds
     * const { count } = await prisma.breed.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BreedDeleteManyArgs>(args?: SelectSubset<T, BreedDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Breeds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BreedUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Breeds
     * const breed = await prisma.breed.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BreedUpdateManyArgs>(args: SelectSubset<T, BreedUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Breeds and returns the data updated in the database.
     * @param {BreedUpdateManyAndReturnArgs} args - Arguments to update many Breeds.
     * @example
     * // Update many Breeds
     * const breed = await prisma.breed.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Breeds and only return the `id`
     * const breedWithIdOnly = await prisma.breed.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BreedUpdateManyAndReturnArgs>(args: SelectSubset<T, BreedUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BreedPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Breed.
     * @param {BreedUpsertArgs} args - Arguments to update or create a Breed.
     * @example
     * // Update or create a Breed
     * const breed = await prisma.breed.upsert({
     *   create: {
     *     // ... data to create a Breed
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Breed we want to update
     *   }
     * })
     */
    upsert<T extends BreedUpsertArgs>(args: SelectSubset<T, BreedUpsertArgs<ExtArgs>>): Prisma__BreedClient<$Result.GetResult<Prisma.$BreedPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Breeds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BreedCountArgs} args - Arguments to filter Breeds to count.
     * @example
     * // Count the number of Breeds
     * const count = await prisma.breed.count({
     *   where: {
     *     // ... the filter for the Breeds we want to count
     *   }
     * })
    **/
    count<T extends BreedCountArgs>(
      args?: Subset<T, BreedCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BreedCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Breed.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BreedAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BreedAggregateArgs>(args: Subset<T, BreedAggregateArgs>): Prisma.PrismaPromise<GetBreedAggregateType<T>>

    /**
     * Group by Breed.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BreedGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BreedGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BreedGroupByArgs['orderBy'] }
        : { orderBy?: BreedGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BreedGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBreedGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Breed model
   */
  readonly fields: BreedFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Breed.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BreedClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    horses<T extends Breed$horsesArgs<ExtArgs> = {}>(args?: Subset<T, Breed$horsesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Breed model
   */
  interface BreedFieldRefs {
    readonly id: FieldRef<"Breed", 'Int'>
    readonly name: FieldRef<"Breed", 'String'>
    readonly description: FieldRef<"Breed", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Breed findUnique
   */
  export type BreedFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Breed
     */
    select?: BreedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Breed
     */
    omit?: BreedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BreedInclude<ExtArgs> | null
    /**
     * Filter, which Breed to fetch.
     */
    where: BreedWhereUniqueInput
  }

  /**
   * Breed findUniqueOrThrow
   */
  export type BreedFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Breed
     */
    select?: BreedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Breed
     */
    omit?: BreedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BreedInclude<ExtArgs> | null
    /**
     * Filter, which Breed to fetch.
     */
    where: BreedWhereUniqueInput
  }

  /**
   * Breed findFirst
   */
  export type BreedFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Breed
     */
    select?: BreedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Breed
     */
    omit?: BreedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BreedInclude<ExtArgs> | null
    /**
     * Filter, which Breed to fetch.
     */
    where?: BreedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Breeds to fetch.
     */
    orderBy?: BreedOrderByWithRelationInput | BreedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Breeds.
     */
    cursor?: BreedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Breeds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Breeds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Breeds.
     */
    distinct?: BreedScalarFieldEnum | BreedScalarFieldEnum[]
  }

  /**
   * Breed findFirstOrThrow
   */
  export type BreedFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Breed
     */
    select?: BreedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Breed
     */
    omit?: BreedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BreedInclude<ExtArgs> | null
    /**
     * Filter, which Breed to fetch.
     */
    where?: BreedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Breeds to fetch.
     */
    orderBy?: BreedOrderByWithRelationInput | BreedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Breeds.
     */
    cursor?: BreedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Breeds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Breeds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Breeds.
     */
    distinct?: BreedScalarFieldEnum | BreedScalarFieldEnum[]
  }

  /**
   * Breed findMany
   */
  export type BreedFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Breed
     */
    select?: BreedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Breed
     */
    omit?: BreedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BreedInclude<ExtArgs> | null
    /**
     * Filter, which Breeds to fetch.
     */
    where?: BreedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Breeds to fetch.
     */
    orderBy?: BreedOrderByWithRelationInput | BreedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Breeds.
     */
    cursor?: BreedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Breeds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Breeds.
     */
    skip?: number
    distinct?: BreedScalarFieldEnum | BreedScalarFieldEnum[]
  }

  /**
   * Breed create
   */
  export type BreedCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Breed
     */
    select?: BreedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Breed
     */
    omit?: BreedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BreedInclude<ExtArgs> | null
    /**
     * The data needed to create a Breed.
     */
    data: XOR<BreedCreateInput, BreedUncheckedCreateInput>
  }

  /**
   * Breed createMany
   */
  export type BreedCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Breeds.
     */
    data: BreedCreateManyInput | BreedCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Breed createManyAndReturn
   */
  export type BreedCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Breed
     */
    select?: BreedSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Breed
     */
    omit?: BreedOmit<ExtArgs> | null
    /**
     * The data used to create many Breeds.
     */
    data: BreedCreateManyInput | BreedCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Breed update
   */
  export type BreedUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Breed
     */
    select?: BreedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Breed
     */
    omit?: BreedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BreedInclude<ExtArgs> | null
    /**
     * The data needed to update a Breed.
     */
    data: XOR<BreedUpdateInput, BreedUncheckedUpdateInput>
    /**
     * Choose, which Breed to update.
     */
    where: BreedWhereUniqueInput
  }

  /**
   * Breed updateMany
   */
  export type BreedUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Breeds.
     */
    data: XOR<BreedUpdateManyMutationInput, BreedUncheckedUpdateManyInput>
    /**
     * Filter which Breeds to update
     */
    where?: BreedWhereInput
    /**
     * Limit how many Breeds to update.
     */
    limit?: number
  }

  /**
   * Breed updateManyAndReturn
   */
  export type BreedUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Breed
     */
    select?: BreedSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Breed
     */
    omit?: BreedOmit<ExtArgs> | null
    /**
     * The data used to update Breeds.
     */
    data: XOR<BreedUpdateManyMutationInput, BreedUncheckedUpdateManyInput>
    /**
     * Filter which Breeds to update
     */
    where?: BreedWhereInput
    /**
     * Limit how many Breeds to update.
     */
    limit?: number
  }

  /**
   * Breed upsert
   */
  export type BreedUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Breed
     */
    select?: BreedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Breed
     */
    omit?: BreedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BreedInclude<ExtArgs> | null
    /**
     * The filter to search for the Breed to update in case it exists.
     */
    where: BreedWhereUniqueInput
    /**
     * In case the Breed found by the `where` argument doesn't exist, create a new Breed with this data.
     */
    create: XOR<BreedCreateInput, BreedUncheckedCreateInput>
    /**
     * In case the Breed was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BreedUpdateInput, BreedUncheckedUpdateInput>
  }

  /**
   * Breed delete
   */
  export type BreedDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Breed
     */
    select?: BreedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Breed
     */
    omit?: BreedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BreedInclude<ExtArgs> | null
    /**
     * Filter which Breed to delete.
     */
    where: BreedWhereUniqueInput
  }

  /**
   * Breed deleteMany
   */
  export type BreedDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Breeds to delete
     */
    where?: BreedWhereInput
    /**
     * Limit how many Breeds to delete.
     */
    limit?: number
  }

  /**
   * Breed.horses
   */
  export type Breed$horsesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horse
     */
    select?: HorseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horse
     */
    omit?: HorseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseInclude<ExtArgs> | null
    where?: HorseWhereInput
    orderBy?: HorseOrderByWithRelationInput | HorseOrderByWithRelationInput[]
    cursor?: HorseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HorseScalarFieldEnum | HorseScalarFieldEnum[]
  }

  /**
   * Breed without action
   */
  export type BreedDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Breed
     */
    select?: BreedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Breed
     */
    omit?: BreedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BreedInclude<ExtArgs> | null
  }


  /**
   * Model Stable
   */

  export type AggregateStable = {
    _count: StableCountAggregateOutputType | null
    _avg: StableAvgAggregateOutputType | null
    _sum: StableSumAggregateOutputType | null
    _min: StableMinAggregateOutputType | null
    _max: StableMaxAggregateOutputType | null
  }

  export type StableAvgAggregateOutputType = {
    id: number | null
  }

  export type StableSumAggregateOutputType = {
    id: number | null
  }

  export type StableMinAggregateOutputType = {
    id: number | null
    name: string | null
    location: string | null
  }

  export type StableMaxAggregateOutputType = {
    id: number | null
    name: string | null
    location: string | null
  }

  export type StableCountAggregateOutputType = {
    id: number
    name: number
    location: number
    _all: number
  }


  export type StableAvgAggregateInputType = {
    id?: true
  }

  export type StableSumAggregateInputType = {
    id?: true
  }

  export type StableMinAggregateInputType = {
    id?: true
    name?: true
    location?: true
  }

  export type StableMaxAggregateInputType = {
    id?: true
    name?: true
    location?: true
  }

  export type StableCountAggregateInputType = {
    id?: true
    name?: true
    location?: true
    _all?: true
  }

  export type StableAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Stable to aggregate.
     */
    where?: StableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stables to fetch.
     */
    orderBy?: StableOrderByWithRelationInput | StableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Stables
    **/
    _count?: true | StableCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StableAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StableSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StableMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StableMaxAggregateInputType
  }

  export type GetStableAggregateType<T extends StableAggregateArgs> = {
        [P in keyof T & keyof AggregateStable]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStable[P]>
      : GetScalarType<T[P], AggregateStable[P]>
  }




  export type StableGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StableWhereInput
    orderBy?: StableOrderByWithAggregationInput | StableOrderByWithAggregationInput[]
    by: StableScalarFieldEnum[] | StableScalarFieldEnum
    having?: StableScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StableCountAggregateInputType | true
    _avg?: StableAvgAggregateInputType
    _sum?: StableSumAggregateInputType
    _min?: StableMinAggregateInputType
    _max?: StableMaxAggregateInputType
  }

  export type StableGroupByOutputType = {
    id: number
    name: string
    location: string | null
    _count: StableCountAggregateOutputType | null
    _avg: StableAvgAggregateOutputType | null
    _sum: StableSumAggregateOutputType | null
    _min: StableMinAggregateOutputType | null
    _max: StableMaxAggregateOutputType | null
  }

  type GetStableGroupByPayload<T extends StableGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StableGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StableGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StableGroupByOutputType[P]>
            : GetScalarType<T[P], StableGroupByOutputType[P]>
        }
      >
    >


  export type StableSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    location?: boolean
    horses?: boolean | Stable$horsesArgs<ExtArgs>
    _count?: boolean | StableCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stable"]>

  export type StableSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    location?: boolean
  }, ExtArgs["result"]["stable"]>

  export type StableSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    location?: boolean
  }, ExtArgs["result"]["stable"]>

  export type StableSelectScalar = {
    id?: boolean
    name?: boolean
    location?: boolean
  }

  export type StableOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "location", ExtArgs["result"]["stable"]>
  export type StableInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horses?: boolean | Stable$horsesArgs<ExtArgs>
    _count?: boolean | StableCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type StableIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type StableIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $StablePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Stable"
    objects: {
      horses: Prisma.$HorsePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * Unique identifier for each stable
       */
      id: number
      /**
       * Name of the stable
       */
      name: string
      /**
       * Location of the stable
       */
      location: string | null
    }, ExtArgs["result"]["stable"]>
    composites: {}
  }

  type StableGetPayload<S extends boolean | null | undefined | StableDefaultArgs> = $Result.GetResult<Prisma.$StablePayload, S>

  type StableCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StableFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StableCountAggregateInputType | true
    }

  export interface StableDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Stable'], meta: { name: 'Stable' } }
    /**
     * Find zero or one Stable that matches the filter.
     * @param {StableFindUniqueArgs} args - Arguments to find a Stable
     * @example
     * // Get one Stable
     * const stable = await prisma.stable.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StableFindUniqueArgs>(args: SelectSubset<T, StableFindUniqueArgs<ExtArgs>>): Prisma__StableClient<$Result.GetResult<Prisma.$StablePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Stable that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StableFindUniqueOrThrowArgs} args - Arguments to find a Stable
     * @example
     * // Get one Stable
     * const stable = await prisma.stable.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StableFindUniqueOrThrowArgs>(args: SelectSubset<T, StableFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StableClient<$Result.GetResult<Prisma.$StablePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stable that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StableFindFirstArgs} args - Arguments to find a Stable
     * @example
     * // Get one Stable
     * const stable = await prisma.stable.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StableFindFirstArgs>(args?: SelectSubset<T, StableFindFirstArgs<ExtArgs>>): Prisma__StableClient<$Result.GetResult<Prisma.$StablePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stable that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StableFindFirstOrThrowArgs} args - Arguments to find a Stable
     * @example
     * // Get one Stable
     * const stable = await prisma.stable.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StableFindFirstOrThrowArgs>(args?: SelectSubset<T, StableFindFirstOrThrowArgs<ExtArgs>>): Prisma__StableClient<$Result.GetResult<Prisma.$StablePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Stables that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StableFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Stables
     * const stables = await prisma.stable.findMany()
     * 
     * // Get first 10 Stables
     * const stables = await prisma.stable.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stableWithIdOnly = await prisma.stable.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StableFindManyArgs>(args?: SelectSubset<T, StableFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StablePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Stable.
     * @param {StableCreateArgs} args - Arguments to create a Stable.
     * @example
     * // Create one Stable
     * const Stable = await prisma.stable.create({
     *   data: {
     *     // ... data to create a Stable
     *   }
     * })
     * 
     */
    create<T extends StableCreateArgs>(args: SelectSubset<T, StableCreateArgs<ExtArgs>>): Prisma__StableClient<$Result.GetResult<Prisma.$StablePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Stables.
     * @param {StableCreateManyArgs} args - Arguments to create many Stables.
     * @example
     * // Create many Stables
     * const stable = await prisma.stable.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StableCreateManyArgs>(args?: SelectSubset<T, StableCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Stables and returns the data saved in the database.
     * @param {StableCreateManyAndReturnArgs} args - Arguments to create many Stables.
     * @example
     * // Create many Stables
     * const stable = await prisma.stable.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Stables and only return the `id`
     * const stableWithIdOnly = await prisma.stable.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StableCreateManyAndReturnArgs>(args?: SelectSubset<T, StableCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StablePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Stable.
     * @param {StableDeleteArgs} args - Arguments to delete one Stable.
     * @example
     * // Delete one Stable
     * const Stable = await prisma.stable.delete({
     *   where: {
     *     // ... filter to delete one Stable
     *   }
     * })
     * 
     */
    delete<T extends StableDeleteArgs>(args: SelectSubset<T, StableDeleteArgs<ExtArgs>>): Prisma__StableClient<$Result.GetResult<Prisma.$StablePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Stable.
     * @param {StableUpdateArgs} args - Arguments to update one Stable.
     * @example
     * // Update one Stable
     * const stable = await prisma.stable.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StableUpdateArgs>(args: SelectSubset<T, StableUpdateArgs<ExtArgs>>): Prisma__StableClient<$Result.GetResult<Prisma.$StablePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Stables.
     * @param {StableDeleteManyArgs} args - Arguments to filter Stables to delete.
     * @example
     * // Delete a few Stables
     * const { count } = await prisma.stable.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StableDeleteManyArgs>(args?: SelectSubset<T, StableDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StableUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Stables
     * const stable = await prisma.stable.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StableUpdateManyArgs>(args: SelectSubset<T, StableUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stables and returns the data updated in the database.
     * @param {StableUpdateManyAndReturnArgs} args - Arguments to update many Stables.
     * @example
     * // Update many Stables
     * const stable = await prisma.stable.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Stables and only return the `id`
     * const stableWithIdOnly = await prisma.stable.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends StableUpdateManyAndReturnArgs>(args: SelectSubset<T, StableUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StablePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Stable.
     * @param {StableUpsertArgs} args - Arguments to update or create a Stable.
     * @example
     * // Update or create a Stable
     * const stable = await prisma.stable.upsert({
     *   create: {
     *     // ... data to create a Stable
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Stable we want to update
     *   }
     * })
     */
    upsert<T extends StableUpsertArgs>(args: SelectSubset<T, StableUpsertArgs<ExtArgs>>): Prisma__StableClient<$Result.GetResult<Prisma.$StablePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Stables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StableCountArgs} args - Arguments to filter Stables to count.
     * @example
     * // Count the number of Stables
     * const count = await prisma.stable.count({
     *   where: {
     *     // ... the filter for the Stables we want to count
     *   }
     * })
    **/
    count<T extends StableCountArgs>(
      args?: Subset<T, StableCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StableCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Stable.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StableAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StableAggregateArgs>(args: Subset<T, StableAggregateArgs>): Prisma.PrismaPromise<GetStableAggregateType<T>>

    /**
     * Group by Stable.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StableGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StableGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StableGroupByArgs['orderBy'] }
        : { orderBy?: StableGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StableGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStableGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Stable model
   */
  readonly fields: StableFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Stable.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StableClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    horses<T extends Stable$horsesArgs<ExtArgs> = {}>(args?: Subset<T, Stable$horsesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Stable model
   */
  interface StableFieldRefs {
    readonly id: FieldRef<"Stable", 'Int'>
    readonly name: FieldRef<"Stable", 'String'>
    readonly location: FieldRef<"Stable", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Stable findUnique
   */
  export type StableFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stable
     */
    select?: StableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stable
     */
    omit?: StableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StableInclude<ExtArgs> | null
    /**
     * Filter, which Stable to fetch.
     */
    where: StableWhereUniqueInput
  }

  /**
   * Stable findUniqueOrThrow
   */
  export type StableFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stable
     */
    select?: StableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stable
     */
    omit?: StableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StableInclude<ExtArgs> | null
    /**
     * Filter, which Stable to fetch.
     */
    where: StableWhereUniqueInput
  }

  /**
   * Stable findFirst
   */
  export type StableFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stable
     */
    select?: StableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stable
     */
    omit?: StableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StableInclude<ExtArgs> | null
    /**
     * Filter, which Stable to fetch.
     */
    where?: StableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stables to fetch.
     */
    orderBy?: StableOrderByWithRelationInput | StableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Stables.
     */
    cursor?: StableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Stables.
     */
    distinct?: StableScalarFieldEnum | StableScalarFieldEnum[]
  }

  /**
   * Stable findFirstOrThrow
   */
  export type StableFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stable
     */
    select?: StableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stable
     */
    omit?: StableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StableInclude<ExtArgs> | null
    /**
     * Filter, which Stable to fetch.
     */
    where?: StableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stables to fetch.
     */
    orderBy?: StableOrderByWithRelationInput | StableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Stables.
     */
    cursor?: StableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Stables.
     */
    distinct?: StableScalarFieldEnum | StableScalarFieldEnum[]
  }

  /**
   * Stable findMany
   */
  export type StableFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stable
     */
    select?: StableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stable
     */
    omit?: StableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StableInclude<ExtArgs> | null
    /**
     * Filter, which Stables to fetch.
     */
    where?: StableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stables to fetch.
     */
    orderBy?: StableOrderByWithRelationInput | StableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Stables.
     */
    cursor?: StableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stables.
     */
    skip?: number
    distinct?: StableScalarFieldEnum | StableScalarFieldEnum[]
  }

  /**
   * Stable create
   */
  export type StableCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stable
     */
    select?: StableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stable
     */
    omit?: StableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StableInclude<ExtArgs> | null
    /**
     * The data needed to create a Stable.
     */
    data: XOR<StableCreateInput, StableUncheckedCreateInput>
  }

  /**
   * Stable createMany
   */
  export type StableCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Stables.
     */
    data: StableCreateManyInput | StableCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Stable createManyAndReturn
   */
  export type StableCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stable
     */
    select?: StableSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Stable
     */
    omit?: StableOmit<ExtArgs> | null
    /**
     * The data used to create many Stables.
     */
    data: StableCreateManyInput | StableCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Stable update
   */
  export type StableUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stable
     */
    select?: StableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stable
     */
    omit?: StableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StableInclude<ExtArgs> | null
    /**
     * The data needed to update a Stable.
     */
    data: XOR<StableUpdateInput, StableUncheckedUpdateInput>
    /**
     * Choose, which Stable to update.
     */
    where: StableWhereUniqueInput
  }

  /**
   * Stable updateMany
   */
  export type StableUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Stables.
     */
    data: XOR<StableUpdateManyMutationInput, StableUncheckedUpdateManyInput>
    /**
     * Filter which Stables to update
     */
    where?: StableWhereInput
    /**
     * Limit how many Stables to update.
     */
    limit?: number
  }

  /**
   * Stable updateManyAndReturn
   */
  export type StableUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stable
     */
    select?: StableSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Stable
     */
    omit?: StableOmit<ExtArgs> | null
    /**
     * The data used to update Stables.
     */
    data: XOR<StableUpdateManyMutationInput, StableUncheckedUpdateManyInput>
    /**
     * Filter which Stables to update
     */
    where?: StableWhereInput
    /**
     * Limit how many Stables to update.
     */
    limit?: number
  }

  /**
   * Stable upsert
   */
  export type StableUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stable
     */
    select?: StableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stable
     */
    omit?: StableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StableInclude<ExtArgs> | null
    /**
     * The filter to search for the Stable to update in case it exists.
     */
    where: StableWhereUniqueInput
    /**
     * In case the Stable found by the `where` argument doesn't exist, create a new Stable with this data.
     */
    create: XOR<StableCreateInput, StableUncheckedCreateInput>
    /**
     * In case the Stable was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StableUpdateInput, StableUncheckedUpdateInput>
  }

  /**
   * Stable delete
   */
  export type StableDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stable
     */
    select?: StableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stable
     */
    omit?: StableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StableInclude<ExtArgs> | null
    /**
     * Filter which Stable to delete.
     */
    where: StableWhereUniqueInput
  }

  /**
   * Stable deleteMany
   */
  export type StableDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Stables to delete
     */
    where?: StableWhereInput
    /**
     * Limit how many Stables to delete.
     */
    limit?: number
  }

  /**
   * Stable.horses
   */
  export type Stable$horsesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horse
     */
    select?: HorseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horse
     */
    omit?: HorseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseInclude<ExtArgs> | null
    where?: HorseWhereInput
    orderBy?: HorseOrderByWithRelationInput | HorseOrderByWithRelationInput[]
    cursor?: HorseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HorseScalarFieldEnum | HorseScalarFieldEnum[]
  }

  /**
   * Stable without action
   */
  export type StableDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stable
     */
    select?: StableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stable
     */
    omit?: StableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StableInclude<ExtArgs> | null
  }


  /**
   * Model Horse
   */

  export type AggregateHorse = {
    _count: HorseCountAggregateOutputType | null
    _avg: HorseAvgAggregateOutputType | null
    _sum: HorseSumAggregateOutputType | null
    _min: HorseMinAggregateOutputType | null
    _max: HorseMaxAggregateOutputType | null
  }

  export type HorseAvgAggregateOutputType = {
    id: number | null
    breedId: number | null
    stableId: number | null
    precision: number | null
    strength: number | null
    speed: number | null
    agility: number | null
    endurance: number | null
    intelligence: number | null
    stamina: number | null
    balance: number | null
    boldness: number | null
    flexibility: number | null
    obedience: number | null
    focus: number | null
    totalEarnings: number | null
    sireId: number | null
    damId: number | null
    studFee: number | null
    salePrice: number | null
    bondScore: number | null
    stressLevel: number | null
    daysGroomedInARow: number | null
    consecutiveDaysFoalCare: number | null
    age: number | null
    earnings: Decimal | null
    horseXp: number | null
    availableStatPoints: number | null
  }

  export type HorseSumAggregateOutputType = {
    id: number | null
    breedId: number | null
    stableId: number | null
    precision: number | null
    strength: number | null
    speed: number | null
    agility: number | null
    endurance: number | null
    intelligence: number | null
    stamina: number | null
    balance: number | null
    boldness: number | null
    flexibility: number | null
    obedience: number | null
    focus: number | null
    totalEarnings: number | null
    sireId: number | null
    damId: number | null
    studFee: number | null
    salePrice: number | null
    bondScore: number | null
    stressLevel: number | null
    daysGroomedInARow: number | null
    consecutiveDaysFoalCare: number | null
    age: number | null
    earnings: Decimal | null
    horseXp: number | null
    availableStatPoints: number | null
  }

  export type HorseMinAggregateOutputType = {
    id: number | null
    name: string | null
    sex: string | null
    dateOfBirth: Date | null
    breedId: number | null
    ownerId: string | null
    stableId: number | null
    finalDisplayColor: string | null
    shade: string | null
    imageUrl: string | null
    trait: string | null
    temperament: string | null
    personality: string | null
    precision: number | null
    strength: number | null
    speed: number | null
    agility: number | null
    endurance: number | null
    intelligence: number | null
    stamina: number | null
    balance: number | null
    boldness: number | null
    flexibility: number | null
    obedience: number | null
    focus: number | null
    totalEarnings: number | null
    sireId: number | null
    damId: number | null
    studStatus: string | null
    studFee: number | null
    lastBredDate: Date | null
    forSale: boolean | null
    salePrice: number | null
    healthStatus: string | null
    lastVettedDate: Date | null
    bondScore: number | null
    stressLevel: number | null
    daysGroomedInARow: number | null
    burnoutStatus: string | null
    consecutiveDaysFoalCare: number | null
    lastGroomed: Date | null
    age: number | null
    userId: string | null
    trainingCooldown: Date | null
    earnings: Decimal | null
    horseXp: number | null
    availableStatPoints: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type HorseMaxAggregateOutputType = {
    id: number | null
    name: string | null
    sex: string | null
    dateOfBirth: Date | null
    breedId: number | null
    ownerId: string | null
    stableId: number | null
    finalDisplayColor: string | null
    shade: string | null
    imageUrl: string | null
    trait: string | null
    temperament: string | null
    personality: string | null
    precision: number | null
    strength: number | null
    speed: number | null
    agility: number | null
    endurance: number | null
    intelligence: number | null
    stamina: number | null
    balance: number | null
    boldness: number | null
    flexibility: number | null
    obedience: number | null
    focus: number | null
    totalEarnings: number | null
    sireId: number | null
    damId: number | null
    studStatus: string | null
    studFee: number | null
    lastBredDate: Date | null
    forSale: boolean | null
    salePrice: number | null
    healthStatus: string | null
    lastVettedDate: Date | null
    bondScore: number | null
    stressLevel: number | null
    daysGroomedInARow: number | null
    burnoutStatus: string | null
    consecutiveDaysFoalCare: number | null
    lastGroomed: Date | null
    age: number | null
    userId: string | null
    trainingCooldown: Date | null
    earnings: Decimal | null
    horseXp: number | null
    availableStatPoints: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type HorseCountAggregateOutputType = {
    id: number
    name: number
    sex: number
    dateOfBirth: number
    breedId: number
    ownerId: number
    stableId: number
    genotype: number
    phenotypicMarkings: number
    finalDisplayColor: number
    shade: number
    imageUrl: number
    trait: number
    temperament: number
    personality: number
    precision: number
    strength: number
    speed: number
    agility: number
    endurance: number
    intelligence: number
    stamina: number
    balance: number
    boldness: number
    flexibility: number
    obedience: number
    focus: number
    totalEarnings: number
    sireId: number
    damId: number
    studStatus: number
    studFee: number
    lastBredDate: number
    forSale: number
    salePrice: number
    healthStatus: number
    lastVettedDate: number
    bondScore: number
    stressLevel: number
    daysGroomedInARow: number
    burnoutStatus: number
    taskLog: number
    consecutiveDaysFoalCare: number
    lastGroomed: number
    tack: number
    age: number
    userId: number
    trainingCooldown: number
    earnings: number
    rider: number
    disciplineScores: number
    epigeneticModifiers: number
    horseXp: number
    availableStatPoints: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type HorseAvgAggregateInputType = {
    id?: true
    breedId?: true
    stableId?: true
    precision?: true
    strength?: true
    speed?: true
    agility?: true
    endurance?: true
    intelligence?: true
    stamina?: true
    balance?: true
    boldness?: true
    flexibility?: true
    obedience?: true
    focus?: true
    totalEarnings?: true
    sireId?: true
    damId?: true
    studFee?: true
    salePrice?: true
    bondScore?: true
    stressLevel?: true
    daysGroomedInARow?: true
    consecutiveDaysFoalCare?: true
    age?: true
    earnings?: true
    horseXp?: true
    availableStatPoints?: true
  }

  export type HorseSumAggregateInputType = {
    id?: true
    breedId?: true
    stableId?: true
    precision?: true
    strength?: true
    speed?: true
    agility?: true
    endurance?: true
    intelligence?: true
    stamina?: true
    balance?: true
    boldness?: true
    flexibility?: true
    obedience?: true
    focus?: true
    totalEarnings?: true
    sireId?: true
    damId?: true
    studFee?: true
    salePrice?: true
    bondScore?: true
    stressLevel?: true
    daysGroomedInARow?: true
    consecutiveDaysFoalCare?: true
    age?: true
    earnings?: true
    horseXp?: true
    availableStatPoints?: true
  }

  export type HorseMinAggregateInputType = {
    id?: true
    name?: true
    sex?: true
    dateOfBirth?: true
    breedId?: true
    ownerId?: true
    stableId?: true
    finalDisplayColor?: true
    shade?: true
    imageUrl?: true
    trait?: true
    temperament?: true
    personality?: true
    precision?: true
    strength?: true
    speed?: true
    agility?: true
    endurance?: true
    intelligence?: true
    stamina?: true
    balance?: true
    boldness?: true
    flexibility?: true
    obedience?: true
    focus?: true
    totalEarnings?: true
    sireId?: true
    damId?: true
    studStatus?: true
    studFee?: true
    lastBredDate?: true
    forSale?: true
    salePrice?: true
    healthStatus?: true
    lastVettedDate?: true
    bondScore?: true
    stressLevel?: true
    daysGroomedInARow?: true
    burnoutStatus?: true
    consecutiveDaysFoalCare?: true
    lastGroomed?: true
    age?: true
    userId?: true
    trainingCooldown?: true
    earnings?: true
    horseXp?: true
    availableStatPoints?: true
    createdAt?: true
    updatedAt?: true
  }

  export type HorseMaxAggregateInputType = {
    id?: true
    name?: true
    sex?: true
    dateOfBirth?: true
    breedId?: true
    ownerId?: true
    stableId?: true
    finalDisplayColor?: true
    shade?: true
    imageUrl?: true
    trait?: true
    temperament?: true
    personality?: true
    precision?: true
    strength?: true
    speed?: true
    agility?: true
    endurance?: true
    intelligence?: true
    stamina?: true
    balance?: true
    boldness?: true
    flexibility?: true
    obedience?: true
    focus?: true
    totalEarnings?: true
    sireId?: true
    damId?: true
    studStatus?: true
    studFee?: true
    lastBredDate?: true
    forSale?: true
    salePrice?: true
    healthStatus?: true
    lastVettedDate?: true
    bondScore?: true
    stressLevel?: true
    daysGroomedInARow?: true
    burnoutStatus?: true
    consecutiveDaysFoalCare?: true
    lastGroomed?: true
    age?: true
    userId?: true
    trainingCooldown?: true
    earnings?: true
    horseXp?: true
    availableStatPoints?: true
    createdAt?: true
    updatedAt?: true
  }

  export type HorseCountAggregateInputType = {
    id?: true
    name?: true
    sex?: true
    dateOfBirth?: true
    breedId?: true
    ownerId?: true
    stableId?: true
    genotype?: true
    phenotypicMarkings?: true
    finalDisplayColor?: true
    shade?: true
    imageUrl?: true
    trait?: true
    temperament?: true
    personality?: true
    precision?: true
    strength?: true
    speed?: true
    agility?: true
    endurance?: true
    intelligence?: true
    stamina?: true
    balance?: true
    boldness?: true
    flexibility?: true
    obedience?: true
    focus?: true
    totalEarnings?: true
    sireId?: true
    damId?: true
    studStatus?: true
    studFee?: true
    lastBredDate?: true
    forSale?: true
    salePrice?: true
    healthStatus?: true
    lastVettedDate?: true
    bondScore?: true
    stressLevel?: true
    daysGroomedInARow?: true
    burnoutStatus?: true
    taskLog?: true
    consecutiveDaysFoalCare?: true
    lastGroomed?: true
    tack?: true
    age?: true
    userId?: true
    trainingCooldown?: true
    earnings?: true
    rider?: true
    disciplineScores?: true
    epigeneticModifiers?: true
    horseXp?: true
    availableStatPoints?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type HorseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Horse to aggregate.
     */
    where?: HorseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Horses to fetch.
     */
    orderBy?: HorseOrderByWithRelationInput | HorseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HorseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Horses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Horses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Horses
    **/
    _count?: true | HorseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HorseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HorseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HorseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HorseMaxAggregateInputType
  }

  export type GetHorseAggregateType<T extends HorseAggregateArgs> = {
        [P in keyof T & keyof AggregateHorse]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHorse[P]>
      : GetScalarType<T[P], AggregateHorse[P]>
  }




  export type HorseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HorseWhereInput
    orderBy?: HorseOrderByWithAggregationInput | HorseOrderByWithAggregationInput[]
    by: HorseScalarFieldEnum[] | HorseScalarFieldEnum
    having?: HorseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HorseCountAggregateInputType | true
    _avg?: HorseAvgAggregateInputType
    _sum?: HorseSumAggregateInputType
    _min?: HorseMinAggregateInputType
    _max?: HorseMaxAggregateInputType
  }

  export type HorseGroupByOutputType = {
    id: number
    name: string
    sex: string
    dateOfBirth: Date
    breedId: number | null
    ownerId: string | null
    stableId: number | null
    genotype: JsonValue | null
    phenotypicMarkings: JsonValue | null
    finalDisplayColor: string | null
    shade: string | null
    imageUrl: string | null
    trait: string | null
    temperament: string | null
    personality: string | null
    precision: number | null
    strength: number | null
    speed: number | null
    agility: number | null
    endurance: number | null
    intelligence: number | null
    stamina: number | null
    balance: number | null
    boldness: number | null
    flexibility: number | null
    obedience: number | null
    focus: number | null
    totalEarnings: number | null
    sireId: number | null
    damId: number | null
    studStatus: string | null
    studFee: number | null
    lastBredDate: Date | null
    forSale: boolean | null
    salePrice: number | null
    healthStatus: string | null
    lastVettedDate: Date | null
    bondScore: number | null
    stressLevel: number | null
    daysGroomedInARow: number | null
    burnoutStatus: string | null
    taskLog: JsonValue | null
    consecutiveDaysFoalCare: number | null
    lastGroomed: Date | null
    tack: JsonValue | null
    age: number | null
    userId: string | null
    trainingCooldown: Date | null
    earnings: Decimal | null
    rider: JsonValue | null
    disciplineScores: JsonValue | null
    epigeneticModifiers: JsonValue | null
    horseXp: number | null
    availableStatPoints: number | null
    createdAt: Date | null
    updatedAt: Date | null
    _count: HorseCountAggregateOutputType | null
    _avg: HorseAvgAggregateOutputType | null
    _sum: HorseSumAggregateOutputType | null
    _min: HorseMinAggregateOutputType | null
    _max: HorseMaxAggregateOutputType | null
  }

  type GetHorseGroupByPayload<T extends HorseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HorseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HorseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HorseGroupByOutputType[P]>
            : GetScalarType<T[P], HorseGroupByOutputType[P]>
        }
      >
    >


  export type HorseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    sex?: boolean
    dateOfBirth?: boolean
    breedId?: boolean
    ownerId?: boolean
    stableId?: boolean
    genotype?: boolean
    phenotypicMarkings?: boolean
    finalDisplayColor?: boolean
    shade?: boolean
    imageUrl?: boolean
    trait?: boolean
    temperament?: boolean
    personality?: boolean
    precision?: boolean
    strength?: boolean
    speed?: boolean
    agility?: boolean
    endurance?: boolean
    intelligence?: boolean
    stamina?: boolean
    balance?: boolean
    boldness?: boolean
    flexibility?: boolean
    obedience?: boolean
    focus?: boolean
    totalEarnings?: boolean
    sireId?: boolean
    damId?: boolean
    studStatus?: boolean
    studFee?: boolean
    lastBredDate?: boolean
    forSale?: boolean
    salePrice?: boolean
    healthStatus?: boolean
    lastVettedDate?: boolean
    bondScore?: boolean
    stressLevel?: boolean
    daysGroomedInARow?: boolean
    burnoutStatus?: boolean
    taskLog?: boolean
    consecutiveDaysFoalCare?: boolean
    lastGroomed?: boolean
    tack?: boolean
    age?: boolean
    userId?: boolean
    trainingCooldown?: boolean
    earnings?: boolean
    rider?: boolean
    disciplineScores?: boolean
    epigeneticModifiers?: boolean
    horseXp?: boolean
    availableStatPoints?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    competitionResults?: boolean | Horse$competitionResultsArgs<ExtArgs>
    foalActivities?: boolean | Horse$foalActivitiesArgs<ExtArgs>
    foalDevelopment?: boolean | Horse$foalDevelopmentArgs<ExtArgs>
    foalTrainingHistory?: boolean | Horse$foalTrainingHistoryArgs<ExtArgs>
    groomAssignments?: boolean | Horse$groomAssignmentsArgs<ExtArgs>
    groomInteractions?: boolean | Horse$groomInteractionsArgs<ExtArgs>
    horseXpEvents?: boolean | Horse$horseXpEventsArgs<ExtArgs>
    breed?: boolean | Horse$breedArgs<ExtArgs>
    dam?: boolean | Horse$damArgs<ExtArgs>
    damOffspring?: boolean | Horse$damOffspringArgs<ExtArgs>
    sire?: boolean | Horse$sireArgs<ExtArgs>
    sireOffspring?: boolean | Horse$sireOffspringArgs<ExtArgs>
    stable?: boolean | Horse$stableArgs<ExtArgs>
    user?: boolean | Horse$userArgs<ExtArgs>
    trainingLogs?: boolean | Horse$trainingLogsArgs<ExtArgs>
    _count?: boolean | HorseCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["horse"]>

  export type HorseSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    sex?: boolean
    dateOfBirth?: boolean
    breedId?: boolean
    ownerId?: boolean
    stableId?: boolean
    genotype?: boolean
    phenotypicMarkings?: boolean
    finalDisplayColor?: boolean
    shade?: boolean
    imageUrl?: boolean
    trait?: boolean
    temperament?: boolean
    personality?: boolean
    precision?: boolean
    strength?: boolean
    speed?: boolean
    agility?: boolean
    endurance?: boolean
    intelligence?: boolean
    stamina?: boolean
    balance?: boolean
    boldness?: boolean
    flexibility?: boolean
    obedience?: boolean
    focus?: boolean
    totalEarnings?: boolean
    sireId?: boolean
    damId?: boolean
    studStatus?: boolean
    studFee?: boolean
    lastBredDate?: boolean
    forSale?: boolean
    salePrice?: boolean
    healthStatus?: boolean
    lastVettedDate?: boolean
    bondScore?: boolean
    stressLevel?: boolean
    daysGroomedInARow?: boolean
    burnoutStatus?: boolean
    taskLog?: boolean
    consecutiveDaysFoalCare?: boolean
    lastGroomed?: boolean
    tack?: boolean
    age?: boolean
    userId?: boolean
    trainingCooldown?: boolean
    earnings?: boolean
    rider?: boolean
    disciplineScores?: boolean
    epigeneticModifiers?: boolean
    horseXp?: boolean
    availableStatPoints?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    breed?: boolean | Horse$breedArgs<ExtArgs>
    dam?: boolean | Horse$damArgs<ExtArgs>
    sire?: boolean | Horse$sireArgs<ExtArgs>
    stable?: boolean | Horse$stableArgs<ExtArgs>
    user?: boolean | Horse$userArgs<ExtArgs>
  }, ExtArgs["result"]["horse"]>

  export type HorseSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    sex?: boolean
    dateOfBirth?: boolean
    breedId?: boolean
    ownerId?: boolean
    stableId?: boolean
    genotype?: boolean
    phenotypicMarkings?: boolean
    finalDisplayColor?: boolean
    shade?: boolean
    imageUrl?: boolean
    trait?: boolean
    temperament?: boolean
    personality?: boolean
    precision?: boolean
    strength?: boolean
    speed?: boolean
    agility?: boolean
    endurance?: boolean
    intelligence?: boolean
    stamina?: boolean
    balance?: boolean
    boldness?: boolean
    flexibility?: boolean
    obedience?: boolean
    focus?: boolean
    totalEarnings?: boolean
    sireId?: boolean
    damId?: boolean
    studStatus?: boolean
    studFee?: boolean
    lastBredDate?: boolean
    forSale?: boolean
    salePrice?: boolean
    healthStatus?: boolean
    lastVettedDate?: boolean
    bondScore?: boolean
    stressLevel?: boolean
    daysGroomedInARow?: boolean
    burnoutStatus?: boolean
    taskLog?: boolean
    consecutiveDaysFoalCare?: boolean
    lastGroomed?: boolean
    tack?: boolean
    age?: boolean
    userId?: boolean
    trainingCooldown?: boolean
    earnings?: boolean
    rider?: boolean
    disciplineScores?: boolean
    epigeneticModifiers?: boolean
    horseXp?: boolean
    availableStatPoints?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    breed?: boolean | Horse$breedArgs<ExtArgs>
    dam?: boolean | Horse$damArgs<ExtArgs>
    sire?: boolean | Horse$sireArgs<ExtArgs>
    stable?: boolean | Horse$stableArgs<ExtArgs>
    user?: boolean | Horse$userArgs<ExtArgs>
  }, ExtArgs["result"]["horse"]>

  export type HorseSelectScalar = {
    id?: boolean
    name?: boolean
    sex?: boolean
    dateOfBirth?: boolean
    breedId?: boolean
    ownerId?: boolean
    stableId?: boolean
    genotype?: boolean
    phenotypicMarkings?: boolean
    finalDisplayColor?: boolean
    shade?: boolean
    imageUrl?: boolean
    trait?: boolean
    temperament?: boolean
    personality?: boolean
    precision?: boolean
    strength?: boolean
    speed?: boolean
    agility?: boolean
    endurance?: boolean
    intelligence?: boolean
    stamina?: boolean
    balance?: boolean
    boldness?: boolean
    flexibility?: boolean
    obedience?: boolean
    focus?: boolean
    totalEarnings?: boolean
    sireId?: boolean
    damId?: boolean
    studStatus?: boolean
    studFee?: boolean
    lastBredDate?: boolean
    forSale?: boolean
    salePrice?: boolean
    healthStatus?: boolean
    lastVettedDate?: boolean
    bondScore?: boolean
    stressLevel?: boolean
    daysGroomedInARow?: boolean
    burnoutStatus?: boolean
    taskLog?: boolean
    consecutiveDaysFoalCare?: boolean
    lastGroomed?: boolean
    tack?: boolean
    age?: boolean
    userId?: boolean
    trainingCooldown?: boolean
    earnings?: boolean
    rider?: boolean
    disciplineScores?: boolean
    epigeneticModifiers?: boolean
    horseXp?: boolean
    availableStatPoints?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type HorseOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "sex" | "dateOfBirth" | "breedId" | "ownerId" | "stableId" | "genotype" | "phenotypicMarkings" | "finalDisplayColor" | "shade" | "imageUrl" | "trait" | "temperament" | "personality" | "precision" | "strength" | "speed" | "agility" | "endurance" | "intelligence" | "stamina" | "balance" | "boldness" | "flexibility" | "obedience" | "focus" | "totalEarnings" | "sireId" | "damId" | "studStatus" | "studFee" | "lastBredDate" | "forSale" | "salePrice" | "healthStatus" | "lastVettedDate" | "bondScore" | "stressLevel" | "daysGroomedInARow" | "burnoutStatus" | "taskLog" | "consecutiveDaysFoalCare" | "lastGroomed" | "tack" | "age" | "userId" | "trainingCooldown" | "earnings" | "rider" | "disciplineScores" | "epigeneticModifiers" | "horseXp" | "availableStatPoints" | "createdAt" | "updatedAt", ExtArgs["result"]["horse"]>
  export type HorseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    competitionResults?: boolean | Horse$competitionResultsArgs<ExtArgs>
    foalActivities?: boolean | Horse$foalActivitiesArgs<ExtArgs>
    foalDevelopment?: boolean | Horse$foalDevelopmentArgs<ExtArgs>
    foalTrainingHistory?: boolean | Horse$foalTrainingHistoryArgs<ExtArgs>
    groomAssignments?: boolean | Horse$groomAssignmentsArgs<ExtArgs>
    groomInteractions?: boolean | Horse$groomInteractionsArgs<ExtArgs>
    horseXpEvents?: boolean | Horse$horseXpEventsArgs<ExtArgs>
    breed?: boolean | Horse$breedArgs<ExtArgs>
    dam?: boolean | Horse$damArgs<ExtArgs>
    damOffspring?: boolean | Horse$damOffspringArgs<ExtArgs>
    sire?: boolean | Horse$sireArgs<ExtArgs>
    sireOffspring?: boolean | Horse$sireOffspringArgs<ExtArgs>
    stable?: boolean | Horse$stableArgs<ExtArgs>
    user?: boolean | Horse$userArgs<ExtArgs>
    trainingLogs?: boolean | Horse$trainingLogsArgs<ExtArgs>
    _count?: boolean | HorseCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type HorseIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    breed?: boolean | Horse$breedArgs<ExtArgs>
    dam?: boolean | Horse$damArgs<ExtArgs>
    sire?: boolean | Horse$sireArgs<ExtArgs>
    stable?: boolean | Horse$stableArgs<ExtArgs>
    user?: boolean | Horse$userArgs<ExtArgs>
  }
  export type HorseIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    breed?: boolean | Horse$breedArgs<ExtArgs>
    dam?: boolean | Horse$damArgs<ExtArgs>
    sire?: boolean | Horse$sireArgs<ExtArgs>
    stable?: boolean | Horse$stableArgs<ExtArgs>
    user?: boolean | Horse$userArgs<ExtArgs>
  }

  export type $HorsePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Horse"
    objects: {
      competitionResults: Prisma.$CompetitionResultPayload<ExtArgs>[]
      foalActivities: Prisma.$FoalActivityPayload<ExtArgs>[]
      foalDevelopment: Prisma.$FoalDevelopmentPayload<ExtArgs> | null
      foalTrainingHistory: Prisma.$FoalTrainingHistoryPayload<ExtArgs>[]
      groomAssignments: Prisma.$GroomAssignmentPayload<ExtArgs>[]
      groomInteractions: Prisma.$GroomInteractionPayload<ExtArgs>[]
      horseXpEvents: Prisma.$HorseXpEventPayload<ExtArgs>[]
      breed: Prisma.$BreedPayload<ExtArgs> | null
      dam: Prisma.$HorsePayload<ExtArgs> | null
      damOffspring: Prisma.$HorsePayload<ExtArgs>[]
      sire: Prisma.$HorsePayload<ExtArgs> | null
      sireOffspring: Prisma.$HorsePayload<ExtArgs>[]
      stable: Prisma.$StablePayload<ExtArgs> | null
      user: Prisma.$UserPayload<ExtArgs> | null
      trainingLogs: Prisma.$TrainingLogPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * Unique identifier for each horse
       */
      id: number
      /**
       * Name of the horse
       */
      name: string
      /**
       * Sex of the horse
       */
      sex: string
      /**
       * Date of birth
       */
      dateOfBirth: Date
      /**
       * Foreign keys
       */
      breedId: number | null
      ownerId: string | null
      stableId: number | null
      /**
       * Genetics and appearance
       */
      genotype: Prisma.JsonValue | null
      phenotypicMarkings: Prisma.JsonValue | null
      finalDisplayColor: string | null
      shade: string | null
      imageUrl: string | null
      /**
       * Traits and characteristics
       */
      trait: string | null
      temperament: string | null
      personality: string | null
      /**
       * Base stats
       */
      precision: number | null
      strength: number | null
      speed: number | null
      agility: number | null
      endurance: number | null
      intelligence: number | null
      /**
       * Additional competition stats
       */
      stamina: number | null
      balance: number | null
      boldness: number | null
      flexibility: number | null
      obedience: number | null
      focus: number | null
      /**
       * Financial and breeding
       */
      totalEarnings: number | null
      sireId: number | null
      damId: number | null
      studStatus: string | null
      studFee: number | null
      lastBredDate: Date | null
      forSale: boolean | null
      salePrice: number | null
      /**
       * Health and care
       */
      healthStatus: string | null
      lastVettedDate: Date | null
      bondScore: number | null
      stressLevel: number | null
      /**
       * Groom bonding and burnout prevention
       */
      daysGroomedInARow: number | null
      burnoutStatus: string | null
      /**
       * Foal task logging and streak tracking
       */
      taskLog: Prisma.JsonValue | null
      consecutiveDaysFoalCare: number | null
      lastGroomed: Date | null
      /**
       * Game mechanics
       */
      tack: Prisma.JsonValue | null
      age: number | null
      userId: string | null
      trainingCooldown: Date | null
      earnings: Prisma.Decimal | null
      rider: Prisma.JsonValue | null
      disciplineScores: Prisma.JsonValue | null
      epigeneticModifiers: Prisma.JsonValue | null
      /**
       * Horse XP System
       */
      horseXp: number | null
      availableStatPoints: number | null
      /**
       * Timestamps
       */
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["horse"]>
    composites: {}
  }

  type HorseGetPayload<S extends boolean | null | undefined | HorseDefaultArgs> = $Result.GetResult<Prisma.$HorsePayload, S>

  type HorseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<HorseFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HorseCountAggregateInputType | true
    }

  export interface HorseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Horse'], meta: { name: 'Horse' } }
    /**
     * Find zero or one Horse that matches the filter.
     * @param {HorseFindUniqueArgs} args - Arguments to find a Horse
     * @example
     * // Get one Horse
     * const horse = await prisma.horse.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HorseFindUniqueArgs>(args: SelectSubset<T, HorseFindUniqueArgs<ExtArgs>>): Prisma__HorseClient<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Horse that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {HorseFindUniqueOrThrowArgs} args - Arguments to find a Horse
     * @example
     * // Get one Horse
     * const horse = await prisma.horse.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HorseFindUniqueOrThrowArgs>(args: SelectSubset<T, HorseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HorseClient<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Horse that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorseFindFirstArgs} args - Arguments to find a Horse
     * @example
     * // Get one Horse
     * const horse = await prisma.horse.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HorseFindFirstArgs>(args?: SelectSubset<T, HorseFindFirstArgs<ExtArgs>>): Prisma__HorseClient<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Horse that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorseFindFirstOrThrowArgs} args - Arguments to find a Horse
     * @example
     * // Get one Horse
     * const horse = await prisma.horse.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HorseFindFirstOrThrowArgs>(args?: SelectSubset<T, HorseFindFirstOrThrowArgs<ExtArgs>>): Prisma__HorseClient<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Horses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Horses
     * const horses = await prisma.horse.findMany()
     * 
     * // Get first 10 Horses
     * const horses = await prisma.horse.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const horseWithIdOnly = await prisma.horse.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HorseFindManyArgs>(args?: SelectSubset<T, HorseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Horse.
     * @param {HorseCreateArgs} args - Arguments to create a Horse.
     * @example
     * // Create one Horse
     * const Horse = await prisma.horse.create({
     *   data: {
     *     // ... data to create a Horse
     *   }
     * })
     * 
     */
    create<T extends HorseCreateArgs>(args: SelectSubset<T, HorseCreateArgs<ExtArgs>>): Prisma__HorseClient<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Horses.
     * @param {HorseCreateManyArgs} args - Arguments to create many Horses.
     * @example
     * // Create many Horses
     * const horse = await prisma.horse.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HorseCreateManyArgs>(args?: SelectSubset<T, HorseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Horses and returns the data saved in the database.
     * @param {HorseCreateManyAndReturnArgs} args - Arguments to create many Horses.
     * @example
     * // Create many Horses
     * const horse = await prisma.horse.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Horses and only return the `id`
     * const horseWithIdOnly = await prisma.horse.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HorseCreateManyAndReturnArgs>(args?: SelectSubset<T, HorseCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Horse.
     * @param {HorseDeleteArgs} args - Arguments to delete one Horse.
     * @example
     * // Delete one Horse
     * const Horse = await prisma.horse.delete({
     *   where: {
     *     // ... filter to delete one Horse
     *   }
     * })
     * 
     */
    delete<T extends HorseDeleteArgs>(args: SelectSubset<T, HorseDeleteArgs<ExtArgs>>): Prisma__HorseClient<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Horse.
     * @param {HorseUpdateArgs} args - Arguments to update one Horse.
     * @example
     * // Update one Horse
     * const horse = await prisma.horse.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HorseUpdateArgs>(args: SelectSubset<T, HorseUpdateArgs<ExtArgs>>): Prisma__HorseClient<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Horses.
     * @param {HorseDeleteManyArgs} args - Arguments to filter Horses to delete.
     * @example
     * // Delete a few Horses
     * const { count } = await prisma.horse.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HorseDeleteManyArgs>(args?: SelectSubset<T, HorseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Horses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Horses
     * const horse = await prisma.horse.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HorseUpdateManyArgs>(args: SelectSubset<T, HorseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Horses and returns the data updated in the database.
     * @param {HorseUpdateManyAndReturnArgs} args - Arguments to update many Horses.
     * @example
     * // Update many Horses
     * const horse = await prisma.horse.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Horses and only return the `id`
     * const horseWithIdOnly = await prisma.horse.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends HorseUpdateManyAndReturnArgs>(args: SelectSubset<T, HorseUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Horse.
     * @param {HorseUpsertArgs} args - Arguments to update or create a Horse.
     * @example
     * // Update or create a Horse
     * const horse = await prisma.horse.upsert({
     *   create: {
     *     // ... data to create a Horse
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Horse we want to update
     *   }
     * })
     */
    upsert<T extends HorseUpsertArgs>(args: SelectSubset<T, HorseUpsertArgs<ExtArgs>>): Prisma__HorseClient<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Horses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorseCountArgs} args - Arguments to filter Horses to count.
     * @example
     * // Count the number of Horses
     * const count = await prisma.horse.count({
     *   where: {
     *     // ... the filter for the Horses we want to count
     *   }
     * })
    **/
    count<T extends HorseCountArgs>(
      args?: Subset<T, HorseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HorseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Horse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HorseAggregateArgs>(args: Subset<T, HorseAggregateArgs>): Prisma.PrismaPromise<GetHorseAggregateType<T>>

    /**
     * Group by Horse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HorseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HorseGroupByArgs['orderBy'] }
        : { orderBy?: HorseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HorseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHorseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Horse model
   */
  readonly fields: HorseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Horse.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HorseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    competitionResults<T extends Horse$competitionResultsArgs<ExtArgs> = {}>(args?: Subset<T, Horse$competitionResultsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompetitionResultPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    foalActivities<T extends Horse$foalActivitiesArgs<ExtArgs> = {}>(args?: Subset<T, Horse$foalActivitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FoalActivityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    foalDevelopment<T extends Horse$foalDevelopmentArgs<ExtArgs> = {}>(args?: Subset<T, Horse$foalDevelopmentArgs<ExtArgs>>): Prisma__FoalDevelopmentClient<$Result.GetResult<Prisma.$FoalDevelopmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    foalTrainingHistory<T extends Horse$foalTrainingHistoryArgs<ExtArgs> = {}>(args?: Subset<T, Horse$foalTrainingHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FoalTrainingHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    groomAssignments<T extends Horse$groomAssignmentsArgs<ExtArgs> = {}>(args?: Subset<T, Horse$groomAssignmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroomAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    groomInteractions<T extends Horse$groomInteractionsArgs<ExtArgs> = {}>(args?: Subset<T, Horse$groomInteractionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroomInteractionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    horseXpEvents<T extends Horse$horseXpEventsArgs<ExtArgs> = {}>(args?: Subset<T, Horse$horseXpEventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HorseXpEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    breed<T extends Horse$breedArgs<ExtArgs> = {}>(args?: Subset<T, Horse$breedArgs<ExtArgs>>): Prisma__BreedClient<$Result.GetResult<Prisma.$BreedPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    dam<T extends Horse$damArgs<ExtArgs> = {}>(args?: Subset<T, Horse$damArgs<ExtArgs>>): Prisma__HorseClient<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    damOffspring<T extends Horse$damOffspringArgs<ExtArgs> = {}>(args?: Subset<T, Horse$damOffspringArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sire<T extends Horse$sireArgs<ExtArgs> = {}>(args?: Subset<T, Horse$sireArgs<ExtArgs>>): Prisma__HorseClient<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sireOffspring<T extends Horse$sireOffspringArgs<ExtArgs> = {}>(args?: Subset<T, Horse$sireOffspringArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stable<T extends Horse$stableArgs<ExtArgs> = {}>(args?: Subset<T, Horse$stableArgs<ExtArgs>>): Prisma__StableClient<$Result.GetResult<Prisma.$StablePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user<T extends Horse$userArgs<ExtArgs> = {}>(args?: Subset<T, Horse$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    trainingLogs<T extends Horse$trainingLogsArgs<ExtArgs> = {}>(args?: Subset<T, Horse$trainingLogsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrainingLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Horse model
   */
  interface HorseFieldRefs {
    readonly id: FieldRef<"Horse", 'Int'>
    readonly name: FieldRef<"Horse", 'String'>
    readonly sex: FieldRef<"Horse", 'String'>
    readonly dateOfBirth: FieldRef<"Horse", 'DateTime'>
    readonly breedId: FieldRef<"Horse", 'Int'>
    readonly ownerId: FieldRef<"Horse", 'String'>
    readonly stableId: FieldRef<"Horse", 'Int'>
    readonly genotype: FieldRef<"Horse", 'Json'>
    readonly phenotypicMarkings: FieldRef<"Horse", 'Json'>
    readonly finalDisplayColor: FieldRef<"Horse", 'String'>
    readonly shade: FieldRef<"Horse", 'String'>
    readonly imageUrl: FieldRef<"Horse", 'String'>
    readonly trait: FieldRef<"Horse", 'String'>
    readonly temperament: FieldRef<"Horse", 'String'>
    readonly personality: FieldRef<"Horse", 'String'>
    readonly precision: FieldRef<"Horse", 'Int'>
    readonly strength: FieldRef<"Horse", 'Int'>
    readonly speed: FieldRef<"Horse", 'Int'>
    readonly agility: FieldRef<"Horse", 'Int'>
    readonly endurance: FieldRef<"Horse", 'Int'>
    readonly intelligence: FieldRef<"Horse", 'Int'>
    readonly stamina: FieldRef<"Horse", 'Int'>
    readonly balance: FieldRef<"Horse", 'Int'>
    readonly boldness: FieldRef<"Horse", 'Int'>
    readonly flexibility: FieldRef<"Horse", 'Int'>
    readonly obedience: FieldRef<"Horse", 'Int'>
    readonly focus: FieldRef<"Horse", 'Int'>
    readonly totalEarnings: FieldRef<"Horse", 'Int'>
    readonly sireId: FieldRef<"Horse", 'Int'>
    readonly damId: FieldRef<"Horse", 'Int'>
    readonly studStatus: FieldRef<"Horse", 'String'>
    readonly studFee: FieldRef<"Horse", 'Int'>
    readonly lastBredDate: FieldRef<"Horse", 'DateTime'>
    readonly forSale: FieldRef<"Horse", 'Boolean'>
    readonly salePrice: FieldRef<"Horse", 'Int'>
    readonly healthStatus: FieldRef<"Horse", 'String'>
    readonly lastVettedDate: FieldRef<"Horse", 'DateTime'>
    readonly bondScore: FieldRef<"Horse", 'Int'>
    readonly stressLevel: FieldRef<"Horse", 'Int'>
    readonly daysGroomedInARow: FieldRef<"Horse", 'Int'>
    readonly burnoutStatus: FieldRef<"Horse", 'String'>
    readonly taskLog: FieldRef<"Horse", 'Json'>
    readonly consecutiveDaysFoalCare: FieldRef<"Horse", 'Int'>
    readonly lastGroomed: FieldRef<"Horse", 'DateTime'>
    readonly tack: FieldRef<"Horse", 'Json'>
    readonly age: FieldRef<"Horse", 'Int'>
    readonly userId: FieldRef<"Horse", 'String'>
    readonly trainingCooldown: FieldRef<"Horse", 'DateTime'>
    readonly earnings: FieldRef<"Horse", 'Decimal'>
    readonly rider: FieldRef<"Horse", 'Json'>
    readonly disciplineScores: FieldRef<"Horse", 'Json'>
    readonly epigeneticModifiers: FieldRef<"Horse", 'Json'>
    readonly horseXp: FieldRef<"Horse", 'Int'>
    readonly availableStatPoints: FieldRef<"Horse", 'Int'>
    readonly createdAt: FieldRef<"Horse", 'DateTime'>
    readonly updatedAt: FieldRef<"Horse", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Horse findUnique
   */
  export type HorseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horse
     */
    select?: HorseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horse
     */
    omit?: HorseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseInclude<ExtArgs> | null
    /**
     * Filter, which Horse to fetch.
     */
    where: HorseWhereUniqueInput
  }

  /**
   * Horse findUniqueOrThrow
   */
  export type HorseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horse
     */
    select?: HorseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horse
     */
    omit?: HorseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseInclude<ExtArgs> | null
    /**
     * Filter, which Horse to fetch.
     */
    where: HorseWhereUniqueInput
  }

  /**
   * Horse findFirst
   */
  export type HorseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horse
     */
    select?: HorseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horse
     */
    omit?: HorseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseInclude<ExtArgs> | null
    /**
     * Filter, which Horse to fetch.
     */
    where?: HorseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Horses to fetch.
     */
    orderBy?: HorseOrderByWithRelationInput | HorseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Horses.
     */
    cursor?: HorseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Horses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Horses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Horses.
     */
    distinct?: HorseScalarFieldEnum | HorseScalarFieldEnum[]
  }

  /**
   * Horse findFirstOrThrow
   */
  export type HorseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horse
     */
    select?: HorseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horse
     */
    omit?: HorseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseInclude<ExtArgs> | null
    /**
     * Filter, which Horse to fetch.
     */
    where?: HorseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Horses to fetch.
     */
    orderBy?: HorseOrderByWithRelationInput | HorseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Horses.
     */
    cursor?: HorseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Horses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Horses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Horses.
     */
    distinct?: HorseScalarFieldEnum | HorseScalarFieldEnum[]
  }

  /**
   * Horse findMany
   */
  export type HorseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horse
     */
    select?: HorseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horse
     */
    omit?: HorseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseInclude<ExtArgs> | null
    /**
     * Filter, which Horses to fetch.
     */
    where?: HorseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Horses to fetch.
     */
    orderBy?: HorseOrderByWithRelationInput | HorseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Horses.
     */
    cursor?: HorseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Horses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Horses.
     */
    skip?: number
    distinct?: HorseScalarFieldEnum | HorseScalarFieldEnum[]
  }

  /**
   * Horse create
   */
  export type HorseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horse
     */
    select?: HorseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horse
     */
    omit?: HorseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseInclude<ExtArgs> | null
    /**
     * The data needed to create a Horse.
     */
    data: XOR<HorseCreateInput, HorseUncheckedCreateInput>
  }

  /**
   * Horse createMany
   */
  export type HorseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Horses.
     */
    data: HorseCreateManyInput | HorseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Horse createManyAndReturn
   */
  export type HorseCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horse
     */
    select?: HorseSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Horse
     */
    omit?: HorseOmit<ExtArgs> | null
    /**
     * The data used to create many Horses.
     */
    data: HorseCreateManyInput | HorseCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Horse update
   */
  export type HorseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horse
     */
    select?: HorseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horse
     */
    omit?: HorseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseInclude<ExtArgs> | null
    /**
     * The data needed to update a Horse.
     */
    data: XOR<HorseUpdateInput, HorseUncheckedUpdateInput>
    /**
     * Choose, which Horse to update.
     */
    where: HorseWhereUniqueInput
  }

  /**
   * Horse updateMany
   */
  export type HorseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Horses.
     */
    data: XOR<HorseUpdateManyMutationInput, HorseUncheckedUpdateManyInput>
    /**
     * Filter which Horses to update
     */
    where?: HorseWhereInput
    /**
     * Limit how many Horses to update.
     */
    limit?: number
  }

  /**
   * Horse updateManyAndReturn
   */
  export type HorseUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horse
     */
    select?: HorseSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Horse
     */
    omit?: HorseOmit<ExtArgs> | null
    /**
     * The data used to update Horses.
     */
    data: XOR<HorseUpdateManyMutationInput, HorseUncheckedUpdateManyInput>
    /**
     * Filter which Horses to update
     */
    where?: HorseWhereInput
    /**
     * Limit how many Horses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Horse upsert
   */
  export type HorseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horse
     */
    select?: HorseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horse
     */
    omit?: HorseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseInclude<ExtArgs> | null
    /**
     * The filter to search for the Horse to update in case it exists.
     */
    where: HorseWhereUniqueInput
    /**
     * In case the Horse found by the `where` argument doesn't exist, create a new Horse with this data.
     */
    create: XOR<HorseCreateInput, HorseUncheckedCreateInput>
    /**
     * In case the Horse was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HorseUpdateInput, HorseUncheckedUpdateInput>
  }

  /**
   * Horse delete
   */
  export type HorseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horse
     */
    select?: HorseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horse
     */
    omit?: HorseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseInclude<ExtArgs> | null
    /**
     * Filter which Horse to delete.
     */
    where: HorseWhereUniqueInput
  }

  /**
   * Horse deleteMany
   */
  export type HorseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Horses to delete
     */
    where?: HorseWhereInput
    /**
     * Limit how many Horses to delete.
     */
    limit?: number
  }

  /**
   * Horse.competitionResults
   */
  export type Horse$competitionResultsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompetitionResult
     */
    select?: CompetitionResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompetitionResult
     */
    omit?: CompetitionResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetitionResultInclude<ExtArgs> | null
    where?: CompetitionResultWhereInput
    orderBy?: CompetitionResultOrderByWithRelationInput | CompetitionResultOrderByWithRelationInput[]
    cursor?: CompetitionResultWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CompetitionResultScalarFieldEnum | CompetitionResultScalarFieldEnum[]
  }

  /**
   * Horse.foalActivities
   */
  export type Horse$foalActivitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalActivity
     */
    select?: FoalActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalActivity
     */
    omit?: FoalActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalActivityInclude<ExtArgs> | null
    where?: FoalActivityWhereInput
    orderBy?: FoalActivityOrderByWithRelationInput | FoalActivityOrderByWithRelationInput[]
    cursor?: FoalActivityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FoalActivityScalarFieldEnum | FoalActivityScalarFieldEnum[]
  }

  /**
   * Horse.foalDevelopment
   */
  export type Horse$foalDevelopmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalDevelopment
     */
    select?: FoalDevelopmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalDevelopment
     */
    omit?: FoalDevelopmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalDevelopmentInclude<ExtArgs> | null
    where?: FoalDevelopmentWhereInput
  }

  /**
   * Horse.foalTrainingHistory
   */
  export type Horse$foalTrainingHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalTrainingHistory
     */
    select?: FoalTrainingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalTrainingHistory
     */
    omit?: FoalTrainingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalTrainingHistoryInclude<ExtArgs> | null
    where?: FoalTrainingHistoryWhereInput
    orderBy?: FoalTrainingHistoryOrderByWithRelationInput | FoalTrainingHistoryOrderByWithRelationInput[]
    cursor?: FoalTrainingHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FoalTrainingHistoryScalarFieldEnum | FoalTrainingHistoryScalarFieldEnum[]
  }

  /**
   * Horse.groomAssignments
   */
  export type Horse$groomAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomAssignment
     */
    select?: GroomAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomAssignment
     */
    omit?: GroomAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomAssignmentInclude<ExtArgs> | null
    where?: GroomAssignmentWhereInput
    orderBy?: GroomAssignmentOrderByWithRelationInput | GroomAssignmentOrderByWithRelationInput[]
    cursor?: GroomAssignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GroomAssignmentScalarFieldEnum | GroomAssignmentScalarFieldEnum[]
  }

  /**
   * Horse.groomInteractions
   */
  export type Horse$groomInteractionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomInteraction
     */
    select?: GroomInteractionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomInteraction
     */
    omit?: GroomInteractionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInteractionInclude<ExtArgs> | null
    where?: GroomInteractionWhereInput
    orderBy?: GroomInteractionOrderByWithRelationInput | GroomInteractionOrderByWithRelationInput[]
    cursor?: GroomInteractionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GroomInteractionScalarFieldEnum | GroomInteractionScalarFieldEnum[]
  }

  /**
   * Horse.horseXpEvents
   */
  export type Horse$horseXpEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorseXpEvent
     */
    select?: HorseXpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorseXpEvent
     */
    omit?: HorseXpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseXpEventInclude<ExtArgs> | null
    where?: HorseXpEventWhereInput
    orderBy?: HorseXpEventOrderByWithRelationInput | HorseXpEventOrderByWithRelationInput[]
    cursor?: HorseXpEventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HorseXpEventScalarFieldEnum | HorseXpEventScalarFieldEnum[]
  }

  /**
   * Horse.breed
   */
  export type Horse$breedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Breed
     */
    select?: BreedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Breed
     */
    omit?: BreedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BreedInclude<ExtArgs> | null
    where?: BreedWhereInput
  }

  /**
   * Horse.dam
   */
  export type Horse$damArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horse
     */
    select?: HorseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horse
     */
    omit?: HorseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseInclude<ExtArgs> | null
    where?: HorseWhereInput
  }

  /**
   * Horse.damOffspring
   */
  export type Horse$damOffspringArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horse
     */
    select?: HorseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horse
     */
    omit?: HorseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseInclude<ExtArgs> | null
    where?: HorseWhereInput
    orderBy?: HorseOrderByWithRelationInput | HorseOrderByWithRelationInput[]
    cursor?: HorseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HorseScalarFieldEnum | HorseScalarFieldEnum[]
  }

  /**
   * Horse.sire
   */
  export type Horse$sireArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horse
     */
    select?: HorseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horse
     */
    omit?: HorseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseInclude<ExtArgs> | null
    where?: HorseWhereInput
  }

  /**
   * Horse.sireOffspring
   */
  export type Horse$sireOffspringArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horse
     */
    select?: HorseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horse
     */
    omit?: HorseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseInclude<ExtArgs> | null
    where?: HorseWhereInput
    orderBy?: HorseOrderByWithRelationInput | HorseOrderByWithRelationInput[]
    cursor?: HorseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HorseScalarFieldEnum | HorseScalarFieldEnum[]
  }

  /**
   * Horse.stable
   */
  export type Horse$stableArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stable
     */
    select?: StableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stable
     */
    omit?: StableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StableInclude<ExtArgs> | null
    where?: StableWhereInput
  }

  /**
   * Horse.user
   */
  export type Horse$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Horse.trainingLogs
   */
  export type Horse$trainingLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrainingLog
     */
    select?: TrainingLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrainingLog
     */
    omit?: TrainingLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrainingLogInclude<ExtArgs> | null
    where?: TrainingLogWhereInput
    orderBy?: TrainingLogOrderByWithRelationInput | TrainingLogOrderByWithRelationInput[]
    cursor?: TrainingLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TrainingLogScalarFieldEnum | TrainingLogScalarFieldEnum[]
  }

  /**
   * Horse without action
   */
  export type HorseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horse
     */
    select?: HorseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horse
     */
    omit?: HorseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseInclude<ExtArgs> | null
  }


  /**
   * Model Groom
   */

  export type AggregateGroom = {
    _count: GroomCountAggregateOutputType | null
    _avg: GroomAvgAggregateOutputType | null
    _sum: GroomSumAggregateOutputType | null
    _min: GroomMinAggregateOutputType | null
    _max: GroomMaxAggregateOutputType | null
  }

  export type GroomAvgAggregateOutputType = {
    id: number | null
    experience: number | null
    sessionRate: Decimal | null
  }

  export type GroomSumAggregateOutputType = {
    id: number | null
    experience: number | null
    sessionRate: Decimal | null
  }

  export type GroomMinAggregateOutputType = {
    id: number | null
    name: string | null
    speciality: string | null
    experience: number | null
    skillLevel: string | null
    personality: string | null
    sessionRate: Decimal | null
    bio: string | null
    imageUrl: string | null
    isActive: boolean | null
    hiredDate: Date | null
    userId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type GroomMaxAggregateOutputType = {
    id: number | null
    name: string | null
    speciality: string | null
    experience: number | null
    skillLevel: string | null
    personality: string | null
    sessionRate: Decimal | null
    bio: string | null
    imageUrl: string | null
    isActive: boolean | null
    hiredDate: Date | null
    userId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type GroomCountAggregateOutputType = {
    id: number
    name: number
    speciality: number
    experience: number
    skillLevel: number
    personality: number
    sessionRate: number
    availability: number
    bio: number
    imageUrl: number
    isActive: number
    hiredDate: number
    userId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type GroomAvgAggregateInputType = {
    id?: true
    experience?: true
    sessionRate?: true
  }

  export type GroomSumAggregateInputType = {
    id?: true
    experience?: true
    sessionRate?: true
  }

  export type GroomMinAggregateInputType = {
    id?: true
    name?: true
    speciality?: true
    experience?: true
    skillLevel?: true
    personality?: true
    sessionRate?: true
    bio?: true
    imageUrl?: true
    isActive?: true
    hiredDate?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type GroomMaxAggregateInputType = {
    id?: true
    name?: true
    speciality?: true
    experience?: true
    skillLevel?: true
    personality?: true
    sessionRate?: true
    bio?: true
    imageUrl?: true
    isActive?: true
    hiredDate?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type GroomCountAggregateInputType = {
    id?: true
    name?: true
    speciality?: true
    experience?: true
    skillLevel?: true
    personality?: true
    sessionRate?: true
    availability?: true
    bio?: true
    imageUrl?: true
    isActive?: true
    hiredDate?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type GroomAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Groom to aggregate.
     */
    where?: GroomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Grooms to fetch.
     */
    orderBy?: GroomOrderByWithRelationInput | GroomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: GroomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Grooms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Grooms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Grooms
    **/
    _count?: true | GroomCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GroomAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GroomSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GroomMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GroomMaxAggregateInputType
  }

  export type GetGroomAggregateType<T extends GroomAggregateArgs> = {
        [P in keyof T & keyof AggregateGroom]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGroom[P]>
      : GetScalarType<T[P], AggregateGroom[P]>
  }




  export type GroomGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GroomWhereInput
    orderBy?: GroomOrderByWithAggregationInput | GroomOrderByWithAggregationInput[]
    by: GroomScalarFieldEnum[] | GroomScalarFieldEnum
    having?: GroomScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GroomCountAggregateInputType | true
    _avg?: GroomAvgAggregateInputType
    _sum?: GroomSumAggregateInputType
    _min?: GroomMinAggregateInputType
    _max?: GroomMaxAggregateInputType
  }

  export type GroomGroupByOutputType = {
    id: number
    name: string
    speciality: string
    experience: number
    skillLevel: string
    personality: string
    sessionRate: Decimal
    availability: JsonValue
    bio: string | null
    imageUrl: string | null
    isActive: boolean
    hiredDate: Date
    userId: string | null
    createdAt: Date
    updatedAt: Date
    _count: GroomCountAggregateOutputType | null
    _avg: GroomAvgAggregateOutputType | null
    _sum: GroomSumAggregateOutputType | null
    _min: GroomMinAggregateOutputType | null
    _max: GroomMaxAggregateOutputType | null
  }

  type GetGroomGroupByPayload<T extends GroomGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GroomGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GroomGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GroomGroupByOutputType[P]>
            : GetScalarType<T[P], GroomGroupByOutputType[P]>
        }
      >
    >


  export type GroomSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    speciality?: boolean
    experience?: boolean
    skillLevel?: boolean
    personality?: boolean
    sessionRate?: boolean
    availability?: boolean
    bio?: boolean
    imageUrl?: boolean
    isActive?: boolean
    hiredDate?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    groomAssignments?: boolean | Groom$groomAssignmentsArgs<ExtArgs>
    groomInteractions?: boolean | Groom$groomInteractionsArgs<ExtArgs>
    user?: boolean | Groom$userArgs<ExtArgs>
    _count?: boolean | GroomCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["groom"]>

  export type GroomSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    speciality?: boolean
    experience?: boolean
    skillLevel?: boolean
    personality?: boolean
    sessionRate?: boolean
    availability?: boolean
    bio?: boolean
    imageUrl?: boolean
    isActive?: boolean
    hiredDate?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | Groom$userArgs<ExtArgs>
  }, ExtArgs["result"]["groom"]>

  export type GroomSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    speciality?: boolean
    experience?: boolean
    skillLevel?: boolean
    personality?: boolean
    sessionRate?: boolean
    availability?: boolean
    bio?: boolean
    imageUrl?: boolean
    isActive?: boolean
    hiredDate?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | Groom$userArgs<ExtArgs>
  }, ExtArgs["result"]["groom"]>

  export type GroomSelectScalar = {
    id?: boolean
    name?: boolean
    speciality?: boolean
    experience?: boolean
    skillLevel?: boolean
    personality?: boolean
    sessionRate?: boolean
    availability?: boolean
    bio?: boolean
    imageUrl?: boolean
    isActive?: boolean
    hiredDate?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type GroomOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "speciality" | "experience" | "skillLevel" | "personality" | "sessionRate" | "availability" | "bio" | "imageUrl" | "isActive" | "hiredDate" | "userId" | "createdAt" | "updatedAt", ExtArgs["result"]["groom"]>
  export type GroomInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groomAssignments?: boolean | Groom$groomAssignmentsArgs<ExtArgs>
    groomInteractions?: boolean | Groom$groomInteractionsArgs<ExtArgs>
    user?: boolean | Groom$userArgs<ExtArgs>
    _count?: boolean | GroomCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type GroomIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Groom$userArgs<ExtArgs>
  }
  export type GroomIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Groom$userArgs<ExtArgs>
  }

  export type $GroomPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Groom"
    objects: {
      groomAssignments: Prisma.$GroomAssignmentPayload<ExtArgs>[]
      groomInteractions: Prisma.$GroomInteractionPayload<ExtArgs>[]
      user: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * Unique identifier for each groom
       */
      id: number
      /**
       * Name of the groom
       */
      name: string
      /**
       * Speciality area
       */
      speciality: string
      /**
       * Experience level (1-20)
       */
      experience: number
      /**
       * Skill level
       */
      skillLevel: string
      /**
       * Personality type
       */
      personality: string
      /**
       * Session rate (per session, not hourly)
       */
      sessionRate: Prisma.Decimal
      /**
       * Availability schedule
       */
      availability: Prisma.JsonValue
      /**
       * Biography
       */
      bio: string | null
      /**
       * Image URL
       */
      imageUrl: string | null
      /**
       * Active status
       */
      isActive: boolean
      /**
       * Hire date
       */
      hiredDate: Date
      /**
       * User association
       */
      userId: string | null
      /**
       * Timestamps
       */
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["groom"]>
    composites: {}
  }

  type GroomGetPayload<S extends boolean | null | undefined | GroomDefaultArgs> = $Result.GetResult<Prisma.$GroomPayload, S>

  type GroomCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<GroomFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: GroomCountAggregateInputType | true
    }

  export interface GroomDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Groom'], meta: { name: 'Groom' } }
    /**
     * Find zero or one Groom that matches the filter.
     * @param {GroomFindUniqueArgs} args - Arguments to find a Groom
     * @example
     * // Get one Groom
     * const groom = await prisma.groom.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends GroomFindUniqueArgs>(args: SelectSubset<T, GroomFindUniqueArgs<ExtArgs>>): Prisma__GroomClient<$Result.GetResult<Prisma.$GroomPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Groom that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {GroomFindUniqueOrThrowArgs} args - Arguments to find a Groom
     * @example
     * // Get one Groom
     * const groom = await prisma.groom.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends GroomFindUniqueOrThrowArgs>(args: SelectSubset<T, GroomFindUniqueOrThrowArgs<ExtArgs>>): Prisma__GroomClient<$Result.GetResult<Prisma.$GroomPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Groom that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomFindFirstArgs} args - Arguments to find a Groom
     * @example
     * // Get one Groom
     * const groom = await prisma.groom.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends GroomFindFirstArgs>(args?: SelectSubset<T, GroomFindFirstArgs<ExtArgs>>): Prisma__GroomClient<$Result.GetResult<Prisma.$GroomPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Groom that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomFindFirstOrThrowArgs} args - Arguments to find a Groom
     * @example
     * // Get one Groom
     * const groom = await prisma.groom.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends GroomFindFirstOrThrowArgs>(args?: SelectSubset<T, GroomFindFirstOrThrowArgs<ExtArgs>>): Prisma__GroomClient<$Result.GetResult<Prisma.$GroomPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Grooms that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Grooms
     * const grooms = await prisma.groom.findMany()
     * 
     * // Get first 10 Grooms
     * const grooms = await prisma.groom.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const groomWithIdOnly = await prisma.groom.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends GroomFindManyArgs>(args?: SelectSubset<T, GroomFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroomPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Groom.
     * @param {GroomCreateArgs} args - Arguments to create a Groom.
     * @example
     * // Create one Groom
     * const Groom = await prisma.groom.create({
     *   data: {
     *     // ... data to create a Groom
     *   }
     * })
     * 
     */
    create<T extends GroomCreateArgs>(args: SelectSubset<T, GroomCreateArgs<ExtArgs>>): Prisma__GroomClient<$Result.GetResult<Prisma.$GroomPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Grooms.
     * @param {GroomCreateManyArgs} args - Arguments to create many Grooms.
     * @example
     * // Create many Grooms
     * const groom = await prisma.groom.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends GroomCreateManyArgs>(args?: SelectSubset<T, GroomCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Grooms and returns the data saved in the database.
     * @param {GroomCreateManyAndReturnArgs} args - Arguments to create many Grooms.
     * @example
     * // Create many Grooms
     * const groom = await prisma.groom.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Grooms and only return the `id`
     * const groomWithIdOnly = await prisma.groom.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends GroomCreateManyAndReturnArgs>(args?: SelectSubset<T, GroomCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroomPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Groom.
     * @param {GroomDeleteArgs} args - Arguments to delete one Groom.
     * @example
     * // Delete one Groom
     * const Groom = await prisma.groom.delete({
     *   where: {
     *     // ... filter to delete one Groom
     *   }
     * })
     * 
     */
    delete<T extends GroomDeleteArgs>(args: SelectSubset<T, GroomDeleteArgs<ExtArgs>>): Prisma__GroomClient<$Result.GetResult<Prisma.$GroomPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Groom.
     * @param {GroomUpdateArgs} args - Arguments to update one Groom.
     * @example
     * // Update one Groom
     * const groom = await prisma.groom.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends GroomUpdateArgs>(args: SelectSubset<T, GroomUpdateArgs<ExtArgs>>): Prisma__GroomClient<$Result.GetResult<Prisma.$GroomPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Grooms.
     * @param {GroomDeleteManyArgs} args - Arguments to filter Grooms to delete.
     * @example
     * // Delete a few Grooms
     * const { count } = await prisma.groom.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends GroomDeleteManyArgs>(args?: SelectSubset<T, GroomDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Grooms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Grooms
     * const groom = await prisma.groom.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends GroomUpdateManyArgs>(args: SelectSubset<T, GroomUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Grooms and returns the data updated in the database.
     * @param {GroomUpdateManyAndReturnArgs} args - Arguments to update many Grooms.
     * @example
     * // Update many Grooms
     * const groom = await prisma.groom.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Grooms and only return the `id`
     * const groomWithIdOnly = await prisma.groom.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends GroomUpdateManyAndReturnArgs>(args: SelectSubset<T, GroomUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroomPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Groom.
     * @param {GroomUpsertArgs} args - Arguments to update or create a Groom.
     * @example
     * // Update or create a Groom
     * const groom = await prisma.groom.upsert({
     *   create: {
     *     // ... data to create a Groom
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Groom we want to update
     *   }
     * })
     */
    upsert<T extends GroomUpsertArgs>(args: SelectSubset<T, GroomUpsertArgs<ExtArgs>>): Prisma__GroomClient<$Result.GetResult<Prisma.$GroomPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Grooms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomCountArgs} args - Arguments to filter Grooms to count.
     * @example
     * // Count the number of Grooms
     * const count = await prisma.groom.count({
     *   where: {
     *     // ... the filter for the Grooms we want to count
     *   }
     * })
    **/
    count<T extends GroomCountArgs>(
      args?: Subset<T, GroomCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GroomCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Groom.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GroomAggregateArgs>(args: Subset<T, GroomAggregateArgs>): Prisma.PrismaPromise<GetGroomAggregateType<T>>

    /**
     * Group by Groom.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends GroomGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: GroomGroupByArgs['orderBy'] }
        : { orderBy?: GroomGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, GroomGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGroomGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Groom model
   */
  readonly fields: GroomFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Groom.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__GroomClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    groomAssignments<T extends Groom$groomAssignmentsArgs<ExtArgs> = {}>(args?: Subset<T, Groom$groomAssignmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroomAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    groomInteractions<T extends Groom$groomInteractionsArgs<ExtArgs> = {}>(args?: Subset<T, Groom$groomInteractionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroomInteractionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user<T extends Groom$userArgs<ExtArgs> = {}>(args?: Subset<T, Groom$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Groom model
   */
  interface GroomFieldRefs {
    readonly id: FieldRef<"Groom", 'Int'>
    readonly name: FieldRef<"Groom", 'String'>
    readonly speciality: FieldRef<"Groom", 'String'>
    readonly experience: FieldRef<"Groom", 'Int'>
    readonly skillLevel: FieldRef<"Groom", 'String'>
    readonly personality: FieldRef<"Groom", 'String'>
    readonly sessionRate: FieldRef<"Groom", 'Decimal'>
    readonly availability: FieldRef<"Groom", 'Json'>
    readonly bio: FieldRef<"Groom", 'String'>
    readonly imageUrl: FieldRef<"Groom", 'String'>
    readonly isActive: FieldRef<"Groom", 'Boolean'>
    readonly hiredDate: FieldRef<"Groom", 'DateTime'>
    readonly userId: FieldRef<"Groom", 'String'>
    readonly createdAt: FieldRef<"Groom", 'DateTime'>
    readonly updatedAt: FieldRef<"Groom", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Groom findUnique
   */
  export type GroomFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Groom
     */
    select?: GroomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Groom
     */
    omit?: GroomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInclude<ExtArgs> | null
    /**
     * Filter, which Groom to fetch.
     */
    where: GroomWhereUniqueInput
  }

  /**
   * Groom findUniqueOrThrow
   */
  export type GroomFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Groom
     */
    select?: GroomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Groom
     */
    omit?: GroomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInclude<ExtArgs> | null
    /**
     * Filter, which Groom to fetch.
     */
    where: GroomWhereUniqueInput
  }

  /**
   * Groom findFirst
   */
  export type GroomFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Groom
     */
    select?: GroomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Groom
     */
    omit?: GroomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInclude<ExtArgs> | null
    /**
     * Filter, which Groom to fetch.
     */
    where?: GroomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Grooms to fetch.
     */
    orderBy?: GroomOrderByWithRelationInput | GroomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Grooms.
     */
    cursor?: GroomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Grooms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Grooms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Grooms.
     */
    distinct?: GroomScalarFieldEnum | GroomScalarFieldEnum[]
  }

  /**
   * Groom findFirstOrThrow
   */
  export type GroomFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Groom
     */
    select?: GroomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Groom
     */
    omit?: GroomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInclude<ExtArgs> | null
    /**
     * Filter, which Groom to fetch.
     */
    where?: GroomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Grooms to fetch.
     */
    orderBy?: GroomOrderByWithRelationInput | GroomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Grooms.
     */
    cursor?: GroomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Grooms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Grooms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Grooms.
     */
    distinct?: GroomScalarFieldEnum | GroomScalarFieldEnum[]
  }

  /**
   * Groom findMany
   */
  export type GroomFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Groom
     */
    select?: GroomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Groom
     */
    omit?: GroomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInclude<ExtArgs> | null
    /**
     * Filter, which Grooms to fetch.
     */
    where?: GroomWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Grooms to fetch.
     */
    orderBy?: GroomOrderByWithRelationInput | GroomOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Grooms.
     */
    cursor?: GroomWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Grooms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Grooms.
     */
    skip?: number
    distinct?: GroomScalarFieldEnum | GroomScalarFieldEnum[]
  }

  /**
   * Groom create
   */
  export type GroomCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Groom
     */
    select?: GroomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Groom
     */
    omit?: GroomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInclude<ExtArgs> | null
    /**
     * The data needed to create a Groom.
     */
    data: XOR<GroomCreateInput, GroomUncheckedCreateInput>
  }

  /**
   * Groom createMany
   */
  export type GroomCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Grooms.
     */
    data: GroomCreateManyInput | GroomCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Groom createManyAndReturn
   */
  export type GroomCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Groom
     */
    select?: GroomSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Groom
     */
    omit?: GroomOmit<ExtArgs> | null
    /**
     * The data used to create many Grooms.
     */
    data: GroomCreateManyInput | GroomCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Groom update
   */
  export type GroomUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Groom
     */
    select?: GroomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Groom
     */
    omit?: GroomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInclude<ExtArgs> | null
    /**
     * The data needed to update a Groom.
     */
    data: XOR<GroomUpdateInput, GroomUncheckedUpdateInput>
    /**
     * Choose, which Groom to update.
     */
    where: GroomWhereUniqueInput
  }

  /**
   * Groom updateMany
   */
  export type GroomUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Grooms.
     */
    data: XOR<GroomUpdateManyMutationInput, GroomUncheckedUpdateManyInput>
    /**
     * Filter which Grooms to update
     */
    where?: GroomWhereInput
    /**
     * Limit how many Grooms to update.
     */
    limit?: number
  }

  /**
   * Groom updateManyAndReturn
   */
  export type GroomUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Groom
     */
    select?: GroomSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Groom
     */
    omit?: GroomOmit<ExtArgs> | null
    /**
     * The data used to update Grooms.
     */
    data: XOR<GroomUpdateManyMutationInput, GroomUncheckedUpdateManyInput>
    /**
     * Filter which Grooms to update
     */
    where?: GroomWhereInput
    /**
     * Limit how many Grooms to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Groom upsert
   */
  export type GroomUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Groom
     */
    select?: GroomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Groom
     */
    omit?: GroomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInclude<ExtArgs> | null
    /**
     * The filter to search for the Groom to update in case it exists.
     */
    where: GroomWhereUniqueInput
    /**
     * In case the Groom found by the `where` argument doesn't exist, create a new Groom with this data.
     */
    create: XOR<GroomCreateInput, GroomUncheckedCreateInput>
    /**
     * In case the Groom was found with the provided `where` argument, update it with this data.
     */
    update: XOR<GroomUpdateInput, GroomUncheckedUpdateInput>
  }

  /**
   * Groom delete
   */
  export type GroomDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Groom
     */
    select?: GroomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Groom
     */
    omit?: GroomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInclude<ExtArgs> | null
    /**
     * Filter which Groom to delete.
     */
    where: GroomWhereUniqueInput
  }

  /**
   * Groom deleteMany
   */
  export type GroomDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Grooms to delete
     */
    where?: GroomWhereInput
    /**
     * Limit how many Grooms to delete.
     */
    limit?: number
  }

  /**
   * Groom.groomAssignments
   */
  export type Groom$groomAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomAssignment
     */
    select?: GroomAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomAssignment
     */
    omit?: GroomAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomAssignmentInclude<ExtArgs> | null
    where?: GroomAssignmentWhereInput
    orderBy?: GroomAssignmentOrderByWithRelationInput | GroomAssignmentOrderByWithRelationInput[]
    cursor?: GroomAssignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GroomAssignmentScalarFieldEnum | GroomAssignmentScalarFieldEnum[]
  }

  /**
   * Groom.groomInteractions
   */
  export type Groom$groomInteractionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomInteraction
     */
    select?: GroomInteractionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomInteraction
     */
    omit?: GroomInteractionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInteractionInclude<ExtArgs> | null
    where?: GroomInteractionWhereInput
    orderBy?: GroomInteractionOrderByWithRelationInput | GroomInteractionOrderByWithRelationInput[]
    cursor?: GroomInteractionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GroomInteractionScalarFieldEnum | GroomInteractionScalarFieldEnum[]
  }

  /**
   * Groom.user
   */
  export type Groom$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Groom without action
   */
  export type GroomDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Groom
     */
    select?: GroomSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Groom
     */
    omit?: GroomOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInclude<ExtArgs> | null
  }


  /**
   * Model GroomAssignment
   */

  export type AggregateGroomAssignment = {
    _count: GroomAssignmentCountAggregateOutputType | null
    _avg: GroomAssignmentAvgAggregateOutputType | null
    _sum: GroomAssignmentSumAggregateOutputType | null
    _min: GroomAssignmentMinAggregateOutputType | null
    _max: GroomAssignmentMaxAggregateOutputType | null
  }

  export type GroomAssignmentAvgAggregateOutputType = {
    id: number | null
    priority: number | null
    foalId: number | null
    groomId: number | null
  }

  export type GroomAssignmentSumAggregateOutputType = {
    id: number | null
    priority: number | null
    foalId: number | null
    groomId: number | null
  }

  export type GroomAssignmentMinAggregateOutputType = {
    id: number | null
    startDate: Date | null
    endDate: Date | null
    isActive: boolean | null
    isDefault: boolean | null
    priority: number | null
    notes: string | null
    foalId: number | null
    groomId: number | null
    userId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type GroomAssignmentMaxAggregateOutputType = {
    id: number | null
    startDate: Date | null
    endDate: Date | null
    isActive: boolean | null
    isDefault: boolean | null
    priority: number | null
    notes: string | null
    foalId: number | null
    groomId: number | null
    userId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type GroomAssignmentCountAggregateOutputType = {
    id: number
    startDate: number
    endDate: number
    isActive: number
    isDefault: number
    priority: number
    notes: number
    foalId: number
    groomId: number
    userId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type GroomAssignmentAvgAggregateInputType = {
    id?: true
    priority?: true
    foalId?: true
    groomId?: true
  }

  export type GroomAssignmentSumAggregateInputType = {
    id?: true
    priority?: true
    foalId?: true
    groomId?: true
  }

  export type GroomAssignmentMinAggregateInputType = {
    id?: true
    startDate?: true
    endDate?: true
    isActive?: true
    isDefault?: true
    priority?: true
    notes?: true
    foalId?: true
    groomId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type GroomAssignmentMaxAggregateInputType = {
    id?: true
    startDate?: true
    endDate?: true
    isActive?: true
    isDefault?: true
    priority?: true
    notes?: true
    foalId?: true
    groomId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type GroomAssignmentCountAggregateInputType = {
    id?: true
    startDate?: true
    endDate?: true
    isActive?: true
    isDefault?: true
    priority?: true
    notes?: true
    foalId?: true
    groomId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type GroomAssignmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which GroomAssignment to aggregate.
     */
    where?: GroomAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GroomAssignments to fetch.
     */
    orderBy?: GroomAssignmentOrderByWithRelationInput | GroomAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: GroomAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GroomAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GroomAssignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned GroomAssignments
    **/
    _count?: true | GroomAssignmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GroomAssignmentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GroomAssignmentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GroomAssignmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GroomAssignmentMaxAggregateInputType
  }

  export type GetGroomAssignmentAggregateType<T extends GroomAssignmentAggregateArgs> = {
        [P in keyof T & keyof AggregateGroomAssignment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGroomAssignment[P]>
      : GetScalarType<T[P], AggregateGroomAssignment[P]>
  }




  export type GroomAssignmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GroomAssignmentWhereInput
    orderBy?: GroomAssignmentOrderByWithAggregationInput | GroomAssignmentOrderByWithAggregationInput[]
    by: GroomAssignmentScalarFieldEnum[] | GroomAssignmentScalarFieldEnum
    having?: GroomAssignmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GroomAssignmentCountAggregateInputType | true
    _avg?: GroomAssignmentAvgAggregateInputType
    _sum?: GroomAssignmentSumAggregateInputType
    _min?: GroomAssignmentMinAggregateInputType
    _max?: GroomAssignmentMaxAggregateInputType
  }

  export type GroomAssignmentGroupByOutputType = {
    id: number
    startDate: Date
    endDate: Date | null
    isActive: boolean
    isDefault: boolean
    priority: number
    notes: string | null
    foalId: number
    groomId: number
    userId: string | null
    createdAt: Date
    updatedAt: Date
    _count: GroomAssignmentCountAggregateOutputType | null
    _avg: GroomAssignmentAvgAggregateOutputType | null
    _sum: GroomAssignmentSumAggregateOutputType | null
    _min: GroomAssignmentMinAggregateOutputType | null
    _max: GroomAssignmentMaxAggregateOutputType | null
  }

  type GetGroomAssignmentGroupByPayload<T extends GroomAssignmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GroomAssignmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GroomAssignmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GroomAssignmentGroupByOutputType[P]>
            : GetScalarType<T[P], GroomAssignmentGroupByOutputType[P]>
        }
      >
    >


  export type GroomAssignmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    startDate?: boolean
    endDate?: boolean
    isActive?: boolean
    isDefault?: boolean
    priority?: boolean
    notes?: boolean
    foalId?: boolean
    groomId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    foal?: boolean | HorseDefaultArgs<ExtArgs>
    groom?: boolean | GroomDefaultArgs<ExtArgs>
    user?: boolean | GroomAssignment$userArgs<ExtArgs>
    groomInteractions?: boolean | GroomAssignment$groomInteractionsArgs<ExtArgs>
    _count?: boolean | GroomAssignmentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["groomAssignment"]>

  export type GroomAssignmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    startDate?: boolean
    endDate?: boolean
    isActive?: boolean
    isDefault?: boolean
    priority?: boolean
    notes?: boolean
    foalId?: boolean
    groomId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    foal?: boolean | HorseDefaultArgs<ExtArgs>
    groom?: boolean | GroomDefaultArgs<ExtArgs>
    user?: boolean | GroomAssignment$userArgs<ExtArgs>
  }, ExtArgs["result"]["groomAssignment"]>

  export type GroomAssignmentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    startDate?: boolean
    endDate?: boolean
    isActive?: boolean
    isDefault?: boolean
    priority?: boolean
    notes?: boolean
    foalId?: boolean
    groomId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    foal?: boolean | HorseDefaultArgs<ExtArgs>
    groom?: boolean | GroomDefaultArgs<ExtArgs>
    user?: boolean | GroomAssignment$userArgs<ExtArgs>
  }, ExtArgs["result"]["groomAssignment"]>

  export type GroomAssignmentSelectScalar = {
    id?: boolean
    startDate?: boolean
    endDate?: boolean
    isActive?: boolean
    isDefault?: boolean
    priority?: boolean
    notes?: boolean
    foalId?: boolean
    groomId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type GroomAssignmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "startDate" | "endDate" | "isActive" | "isDefault" | "priority" | "notes" | "foalId" | "groomId" | "userId" | "createdAt" | "updatedAt", ExtArgs["result"]["groomAssignment"]>
  export type GroomAssignmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    foal?: boolean | HorseDefaultArgs<ExtArgs>
    groom?: boolean | GroomDefaultArgs<ExtArgs>
    user?: boolean | GroomAssignment$userArgs<ExtArgs>
    groomInteractions?: boolean | GroomAssignment$groomInteractionsArgs<ExtArgs>
    _count?: boolean | GroomAssignmentCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type GroomAssignmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    foal?: boolean | HorseDefaultArgs<ExtArgs>
    groom?: boolean | GroomDefaultArgs<ExtArgs>
    user?: boolean | GroomAssignment$userArgs<ExtArgs>
  }
  export type GroomAssignmentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    foal?: boolean | HorseDefaultArgs<ExtArgs>
    groom?: boolean | GroomDefaultArgs<ExtArgs>
    user?: boolean | GroomAssignment$userArgs<ExtArgs>
  }

  export type $GroomAssignmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "GroomAssignment"
    objects: {
      foal: Prisma.$HorsePayload<ExtArgs>
      groom: Prisma.$GroomPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs> | null
      groomInteractions: Prisma.$GroomInteractionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * Unique identifier for each assignment
       */
      id: number
      /**
       * Assignment period
       */
      startDate: Date
      endDate: Date | null
      /**
       * Status flags
       */
      isActive: boolean
      isDefault: boolean
      /**
       * Priority level (1-5)
       */
      priority: number
      /**
       * Notes
       */
      notes: string | null
      /**
       * Foreign keys
       */
      foalId: number
      groomId: number
      userId: string | null
      /**
       * Timestamps
       */
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["groomAssignment"]>
    composites: {}
  }

  type GroomAssignmentGetPayload<S extends boolean | null | undefined | GroomAssignmentDefaultArgs> = $Result.GetResult<Prisma.$GroomAssignmentPayload, S>

  type GroomAssignmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<GroomAssignmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: GroomAssignmentCountAggregateInputType | true
    }

  export interface GroomAssignmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['GroomAssignment'], meta: { name: 'GroomAssignment' } }
    /**
     * Find zero or one GroomAssignment that matches the filter.
     * @param {GroomAssignmentFindUniqueArgs} args - Arguments to find a GroomAssignment
     * @example
     * // Get one GroomAssignment
     * const groomAssignment = await prisma.groomAssignment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends GroomAssignmentFindUniqueArgs>(args: SelectSubset<T, GroomAssignmentFindUniqueArgs<ExtArgs>>): Prisma__GroomAssignmentClient<$Result.GetResult<Prisma.$GroomAssignmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one GroomAssignment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {GroomAssignmentFindUniqueOrThrowArgs} args - Arguments to find a GroomAssignment
     * @example
     * // Get one GroomAssignment
     * const groomAssignment = await prisma.groomAssignment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends GroomAssignmentFindUniqueOrThrowArgs>(args: SelectSubset<T, GroomAssignmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__GroomAssignmentClient<$Result.GetResult<Prisma.$GroomAssignmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first GroomAssignment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomAssignmentFindFirstArgs} args - Arguments to find a GroomAssignment
     * @example
     * // Get one GroomAssignment
     * const groomAssignment = await prisma.groomAssignment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends GroomAssignmentFindFirstArgs>(args?: SelectSubset<T, GroomAssignmentFindFirstArgs<ExtArgs>>): Prisma__GroomAssignmentClient<$Result.GetResult<Prisma.$GroomAssignmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first GroomAssignment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomAssignmentFindFirstOrThrowArgs} args - Arguments to find a GroomAssignment
     * @example
     * // Get one GroomAssignment
     * const groomAssignment = await prisma.groomAssignment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends GroomAssignmentFindFirstOrThrowArgs>(args?: SelectSubset<T, GroomAssignmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__GroomAssignmentClient<$Result.GetResult<Prisma.$GroomAssignmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more GroomAssignments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomAssignmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all GroomAssignments
     * const groomAssignments = await prisma.groomAssignment.findMany()
     * 
     * // Get first 10 GroomAssignments
     * const groomAssignments = await prisma.groomAssignment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const groomAssignmentWithIdOnly = await prisma.groomAssignment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends GroomAssignmentFindManyArgs>(args?: SelectSubset<T, GroomAssignmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroomAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a GroomAssignment.
     * @param {GroomAssignmentCreateArgs} args - Arguments to create a GroomAssignment.
     * @example
     * // Create one GroomAssignment
     * const GroomAssignment = await prisma.groomAssignment.create({
     *   data: {
     *     // ... data to create a GroomAssignment
     *   }
     * })
     * 
     */
    create<T extends GroomAssignmentCreateArgs>(args: SelectSubset<T, GroomAssignmentCreateArgs<ExtArgs>>): Prisma__GroomAssignmentClient<$Result.GetResult<Prisma.$GroomAssignmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many GroomAssignments.
     * @param {GroomAssignmentCreateManyArgs} args - Arguments to create many GroomAssignments.
     * @example
     * // Create many GroomAssignments
     * const groomAssignment = await prisma.groomAssignment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends GroomAssignmentCreateManyArgs>(args?: SelectSubset<T, GroomAssignmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many GroomAssignments and returns the data saved in the database.
     * @param {GroomAssignmentCreateManyAndReturnArgs} args - Arguments to create many GroomAssignments.
     * @example
     * // Create many GroomAssignments
     * const groomAssignment = await prisma.groomAssignment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many GroomAssignments and only return the `id`
     * const groomAssignmentWithIdOnly = await prisma.groomAssignment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends GroomAssignmentCreateManyAndReturnArgs>(args?: SelectSubset<T, GroomAssignmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroomAssignmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a GroomAssignment.
     * @param {GroomAssignmentDeleteArgs} args - Arguments to delete one GroomAssignment.
     * @example
     * // Delete one GroomAssignment
     * const GroomAssignment = await prisma.groomAssignment.delete({
     *   where: {
     *     // ... filter to delete one GroomAssignment
     *   }
     * })
     * 
     */
    delete<T extends GroomAssignmentDeleteArgs>(args: SelectSubset<T, GroomAssignmentDeleteArgs<ExtArgs>>): Prisma__GroomAssignmentClient<$Result.GetResult<Prisma.$GroomAssignmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one GroomAssignment.
     * @param {GroomAssignmentUpdateArgs} args - Arguments to update one GroomAssignment.
     * @example
     * // Update one GroomAssignment
     * const groomAssignment = await prisma.groomAssignment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends GroomAssignmentUpdateArgs>(args: SelectSubset<T, GroomAssignmentUpdateArgs<ExtArgs>>): Prisma__GroomAssignmentClient<$Result.GetResult<Prisma.$GroomAssignmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more GroomAssignments.
     * @param {GroomAssignmentDeleteManyArgs} args - Arguments to filter GroomAssignments to delete.
     * @example
     * // Delete a few GroomAssignments
     * const { count } = await prisma.groomAssignment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends GroomAssignmentDeleteManyArgs>(args?: SelectSubset<T, GroomAssignmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more GroomAssignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomAssignmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many GroomAssignments
     * const groomAssignment = await prisma.groomAssignment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends GroomAssignmentUpdateManyArgs>(args: SelectSubset<T, GroomAssignmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more GroomAssignments and returns the data updated in the database.
     * @param {GroomAssignmentUpdateManyAndReturnArgs} args - Arguments to update many GroomAssignments.
     * @example
     * // Update many GroomAssignments
     * const groomAssignment = await prisma.groomAssignment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more GroomAssignments and only return the `id`
     * const groomAssignmentWithIdOnly = await prisma.groomAssignment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends GroomAssignmentUpdateManyAndReturnArgs>(args: SelectSubset<T, GroomAssignmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroomAssignmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one GroomAssignment.
     * @param {GroomAssignmentUpsertArgs} args - Arguments to update or create a GroomAssignment.
     * @example
     * // Update or create a GroomAssignment
     * const groomAssignment = await prisma.groomAssignment.upsert({
     *   create: {
     *     // ... data to create a GroomAssignment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the GroomAssignment we want to update
     *   }
     * })
     */
    upsert<T extends GroomAssignmentUpsertArgs>(args: SelectSubset<T, GroomAssignmentUpsertArgs<ExtArgs>>): Prisma__GroomAssignmentClient<$Result.GetResult<Prisma.$GroomAssignmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of GroomAssignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomAssignmentCountArgs} args - Arguments to filter GroomAssignments to count.
     * @example
     * // Count the number of GroomAssignments
     * const count = await prisma.groomAssignment.count({
     *   where: {
     *     // ... the filter for the GroomAssignments we want to count
     *   }
     * })
    **/
    count<T extends GroomAssignmentCountArgs>(
      args?: Subset<T, GroomAssignmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GroomAssignmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a GroomAssignment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomAssignmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GroomAssignmentAggregateArgs>(args: Subset<T, GroomAssignmentAggregateArgs>): Prisma.PrismaPromise<GetGroomAssignmentAggregateType<T>>

    /**
     * Group by GroomAssignment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomAssignmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends GroomAssignmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: GroomAssignmentGroupByArgs['orderBy'] }
        : { orderBy?: GroomAssignmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, GroomAssignmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGroomAssignmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the GroomAssignment model
   */
  readonly fields: GroomAssignmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for GroomAssignment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__GroomAssignmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    foal<T extends HorseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, HorseDefaultArgs<ExtArgs>>): Prisma__HorseClient<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    groom<T extends GroomDefaultArgs<ExtArgs> = {}>(args?: Subset<T, GroomDefaultArgs<ExtArgs>>): Prisma__GroomClient<$Result.GetResult<Prisma.$GroomPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends GroomAssignment$userArgs<ExtArgs> = {}>(args?: Subset<T, GroomAssignment$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    groomInteractions<T extends GroomAssignment$groomInteractionsArgs<ExtArgs> = {}>(args?: Subset<T, GroomAssignment$groomInteractionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroomInteractionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the GroomAssignment model
   */
  interface GroomAssignmentFieldRefs {
    readonly id: FieldRef<"GroomAssignment", 'Int'>
    readonly startDate: FieldRef<"GroomAssignment", 'DateTime'>
    readonly endDate: FieldRef<"GroomAssignment", 'DateTime'>
    readonly isActive: FieldRef<"GroomAssignment", 'Boolean'>
    readonly isDefault: FieldRef<"GroomAssignment", 'Boolean'>
    readonly priority: FieldRef<"GroomAssignment", 'Int'>
    readonly notes: FieldRef<"GroomAssignment", 'String'>
    readonly foalId: FieldRef<"GroomAssignment", 'Int'>
    readonly groomId: FieldRef<"GroomAssignment", 'Int'>
    readonly userId: FieldRef<"GroomAssignment", 'String'>
    readonly createdAt: FieldRef<"GroomAssignment", 'DateTime'>
    readonly updatedAt: FieldRef<"GroomAssignment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * GroomAssignment findUnique
   */
  export type GroomAssignmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomAssignment
     */
    select?: GroomAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomAssignment
     */
    omit?: GroomAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which GroomAssignment to fetch.
     */
    where: GroomAssignmentWhereUniqueInput
  }

  /**
   * GroomAssignment findUniqueOrThrow
   */
  export type GroomAssignmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomAssignment
     */
    select?: GroomAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomAssignment
     */
    omit?: GroomAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which GroomAssignment to fetch.
     */
    where: GroomAssignmentWhereUniqueInput
  }

  /**
   * GroomAssignment findFirst
   */
  export type GroomAssignmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomAssignment
     */
    select?: GroomAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomAssignment
     */
    omit?: GroomAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which GroomAssignment to fetch.
     */
    where?: GroomAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GroomAssignments to fetch.
     */
    orderBy?: GroomAssignmentOrderByWithRelationInput | GroomAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GroomAssignments.
     */
    cursor?: GroomAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GroomAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GroomAssignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GroomAssignments.
     */
    distinct?: GroomAssignmentScalarFieldEnum | GroomAssignmentScalarFieldEnum[]
  }

  /**
   * GroomAssignment findFirstOrThrow
   */
  export type GroomAssignmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomAssignment
     */
    select?: GroomAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomAssignment
     */
    omit?: GroomAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which GroomAssignment to fetch.
     */
    where?: GroomAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GroomAssignments to fetch.
     */
    orderBy?: GroomAssignmentOrderByWithRelationInput | GroomAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GroomAssignments.
     */
    cursor?: GroomAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GroomAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GroomAssignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GroomAssignments.
     */
    distinct?: GroomAssignmentScalarFieldEnum | GroomAssignmentScalarFieldEnum[]
  }

  /**
   * GroomAssignment findMany
   */
  export type GroomAssignmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomAssignment
     */
    select?: GroomAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomAssignment
     */
    omit?: GroomAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which GroomAssignments to fetch.
     */
    where?: GroomAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GroomAssignments to fetch.
     */
    orderBy?: GroomAssignmentOrderByWithRelationInput | GroomAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing GroomAssignments.
     */
    cursor?: GroomAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GroomAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GroomAssignments.
     */
    skip?: number
    distinct?: GroomAssignmentScalarFieldEnum | GroomAssignmentScalarFieldEnum[]
  }

  /**
   * GroomAssignment create
   */
  export type GroomAssignmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomAssignment
     */
    select?: GroomAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomAssignment
     */
    omit?: GroomAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomAssignmentInclude<ExtArgs> | null
    /**
     * The data needed to create a GroomAssignment.
     */
    data: XOR<GroomAssignmentCreateInput, GroomAssignmentUncheckedCreateInput>
  }

  /**
   * GroomAssignment createMany
   */
  export type GroomAssignmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many GroomAssignments.
     */
    data: GroomAssignmentCreateManyInput | GroomAssignmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * GroomAssignment createManyAndReturn
   */
  export type GroomAssignmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomAssignment
     */
    select?: GroomAssignmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the GroomAssignment
     */
    omit?: GroomAssignmentOmit<ExtArgs> | null
    /**
     * The data used to create many GroomAssignments.
     */
    data: GroomAssignmentCreateManyInput | GroomAssignmentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomAssignmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * GroomAssignment update
   */
  export type GroomAssignmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomAssignment
     */
    select?: GroomAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomAssignment
     */
    omit?: GroomAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomAssignmentInclude<ExtArgs> | null
    /**
     * The data needed to update a GroomAssignment.
     */
    data: XOR<GroomAssignmentUpdateInput, GroomAssignmentUncheckedUpdateInput>
    /**
     * Choose, which GroomAssignment to update.
     */
    where: GroomAssignmentWhereUniqueInput
  }

  /**
   * GroomAssignment updateMany
   */
  export type GroomAssignmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update GroomAssignments.
     */
    data: XOR<GroomAssignmentUpdateManyMutationInput, GroomAssignmentUncheckedUpdateManyInput>
    /**
     * Filter which GroomAssignments to update
     */
    where?: GroomAssignmentWhereInput
    /**
     * Limit how many GroomAssignments to update.
     */
    limit?: number
  }

  /**
   * GroomAssignment updateManyAndReturn
   */
  export type GroomAssignmentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomAssignment
     */
    select?: GroomAssignmentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the GroomAssignment
     */
    omit?: GroomAssignmentOmit<ExtArgs> | null
    /**
     * The data used to update GroomAssignments.
     */
    data: XOR<GroomAssignmentUpdateManyMutationInput, GroomAssignmentUncheckedUpdateManyInput>
    /**
     * Filter which GroomAssignments to update
     */
    where?: GroomAssignmentWhereInput
    /**
     * Limit how many GroomAssignments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomAssignmentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * GroomAssignment upsert
   */
  export type GroomAssignmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomAssignment
     */
    select?: GroomAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomAssignment
     */
    omit?: GroomAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomAssignmentInclude<ExtArgs> | null
    /**
     * The filter to search for the GroomAssignment to update in case it exists.
     */
    where: GroomAssignmentWhereUniqueInput
    /**
     * In case the GroomAssignment found by the `where` argument doesn't exist, create a new GroomAssignment with this data.
     */
    create: XOR<GroomAssignmentCreateInput, GroomAssignmentUncheckedCreateInput>
    /**
     * In case the GroomAssignment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<GroomAssignmentUpdateInput, GroomAssignmentUncheckedUpdateInput>
  }

  /**
   * GroomAssignment delete
   */
  export type GroomAssignmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomAssignment
     */
    select?: GroomAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomAssignment
     */
    omit?: GroomAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomAssignmentInclude<ExtArgs> | null
    /**
     * Filter which GroomAssignment to delete.
     */
    where: GroomAssignmentWhereUniqueInput
  }

  /**
   * GroomAssignment deleteMany
   */
  export type GroomAssignmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which GroomAssignments to delete
     */
    where?: GroomAssignmentWhereInput
    /**
     * Limit how many GroomAssignments to delete.
     */
    limit?: number
  }

  /**
   * GroomAssignment.user
   */
  export type GroomAssignment$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * GroomAssignment.groomInteractions
   */
  export type GroomAssignment$groomInteractionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomInteraction
     */
    select?: GroomInteractionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomInteraction
     */
    omit?: GroomInteractionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInteractionInclude<ExtArgs> | null
    where?: GroomInteractionWhereInput
    orderBy?: GroomInteractionOrderByWithRelationInput | GroomInteractionOrderByWithRelationInput[]
    cursor?: GroomInteractionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GroomInteractionScalarFieldEnum | GroomInteractionScalarFieldEnum[]
  }

  /**
   * GroomAssignment without action
   */
  export type GroomAssignmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomAssignment
     */
    select?: GroomAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomAssignment
     */
    omit?: GroomAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomAssignmentInclude<ExtArgs> | null
  }


  /**
   * Model GroomInteraction
   */

  export type AggregateGroomInteraction = {
    _count: GroomInteractionCountAggregateOutputType | null
    _avg: GroomInteractionAvgAggregateOutputType | null
    _sum: GroomInteractionSumAggregateOutputType | null
    _min: GroomInteractionMinAggregateOutputType | null
    _max: GroomInteractionMaxAggregateOutputType | null
  }

  export type GroomInteractionAvgAggregateOutputType = {
    id: number | null
    duration: number | null
    bondingChange: number | null
    stressChange: number | null
    cost: Decimal | null
    foalId: number | null
    groomId: number | null
    assignmentId: number | null
  }

  export type GroomInteractionSumAggregateOutputType = {
    id: number | null
    duration: number | null
    bondingChange: number | null
    stressChange: number | null
    cost: Decimal | null
    foalId: number | null
    groomId: number | null
    assignmentId: number | null
  }

  export type GroomInteractionMinAggregateOutputType = {
    id: number | null
    interactionType: string | null
    duration: number | null
    bondingChange: number | null
    stressChange: number | null
    quality: string | null
    notes: string | null
    cost: Decimal | null
    foalId: number | null
    groomId: number | null
    assignmentId: number | null
    timestamp: Date | null
    createdAt: Date | null
  }

  export type GroomInteractionMaxAggregateOutputType = {
    id: number | null
    interactionType: string | null
    duration: number | null
    bondingChange: number | null
    stressChange: number | null
    quality: string | null
    notes: string | null
    cost: Decimal | null
    foalId: number | null
    groomId: number | null
    assignmentId: number | null
    timestamp: Date | null
    createdAt: Date | null
  }

  export type GroomInteractionCountAggregateOutputType = {
    id: number
    interactionType: number
    duration: number
    bondingChange: number
    stressChange: number
    quality: number
    notes: number
    cost: number
    foalId: number
    groomId: number
    assignmentId: number
    timestamp: number
    createdAt: number
    _all: number
  }


  export type GroomInteractionAvgAggregateInputType = {
    id?: true
    duration?: true
    bondingChange?: true
    stressChange?: true
    cost?: true
    foalId?: true
    groomId?: true
    assignmentId?: true
  }

  export type GroomInteractionSumAggregateInputType = {
    id?: true
    duration?: true
    bondingChange?: true
    stressChange?: true
    cost?: true
    foalId?: true
    groomId?: true
    assignmentId?: true
  }

  export type GroomInteractionMinAggregateInputType = {
    id?: true
    interactionType?: true
    duration?: true
    bondingChange?: true
    stressChange?: true
    quality?: true
    notes?: true
    cost?: true
    foalId?: true
    groomId?: true
    assignmentId?: true
    timestamp?: true
    createdAt?: true
  }

  export type GroomInteractionMaxAggregateInputType = {
    id?: true
    interactionType?: true
    duration?: true
    bondingChange?: true
    stressChange?: true
    quality?: true
    notes?: true
    cost?: true
    foalId?: true
    groomId?: true
    assignmentId?: true
    timestamp?: true
    createdAt?: true
  }

  export type GroomInteractionCountAggregateInputType = {
    id?: true
    interactionType?: true
    duration?: true
    bondingChange?: true
    stressChange?: true
    quality?: true
    notes?: true
    cost?: true
    foalId?: true
    groomId?: true
    assignmentId?: true
    timestamp?: true
    createdAt?: true
    _all?: true
  }

  export type GroomInteractionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which GroomInteraction to aggregate.
     */
    where?: GroomInteractionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GroomInteractions to fetch.
     */
    orderBy?: GroomInteractionOrderByWithRelationInput | GroomInteractionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: GroomInteractionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GroomInteractions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GroomInteractions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned GroomInteractions
    **/
    _count?: true | GroomInteractionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GroomInteractionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GroomInteractionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GroomInteractionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GroomInteractionMaxAggregateInputType
  }

  export type GetGroomInteractionAggregateType<T extends GroomInteractionAggregateArgs> = {
        [P in keyof T & keyof AggregateGroomInteraction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGroomInteraction[P]>
      : GetScalarType<T[P], AggregateGroomInteraction[P]>
  }




  export type GroomInteractionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GroomInteractionWhereInput
    orderBy?: GroomInteractionOrderByWithAggregationInput | GroomInteractionOrderByWithAggregationInput[]
    by: GroomInteractionScalarFieldEnum[] | GroomInteractionScalarFieldEnum
    having?: GroomInteractionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GroomInteractionCountAggregateInputType | true
    _avg?: GroomInteractionAvgAggregateInputType
    _sum?: GroomInteractionSumAggregateInputType
    _min?: GroomInteractionMinAggregateInputType
    _max?: GroomInteractionMaxAggregateInputType
  }

  export type GroomInteractionGroupByOutputType = {
    id: number
    interactionType: string
    duration: number
    bondingChange: number
    stressChange: number
    quality: string
    notes: string | null
    cost: Decimal
    foalId: number
    groomId: number
    assignmentId: number | null
    timestamp: Date
    createdAt: Date
    _count: GroomInteractionCountAggregateOutputType | null
    _avg: GroomInteractionAvgAggregateOutputType | null
    _sum: GroomInteractionSumAggregateOutputType | null
    _min: GroomInteractionMinAggregateOutputType | null
    _max: GroomInteractionMaxAggregateOutputType | null
  }

  type GetGroomInteractionGroupByPayload<T extends GroomInteractionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GroomInteractionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GroomInteractionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GroomInteractionGroupByOutputType[P]>
            : GetScalarType<T[P], GroomInteractionGroupByOutputType[P]>
        }
      >
    >


  export type GroomInteractionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    interactionType?: boolean
    duration?: boolean
    bondingChange?: boolean
    stressChange?: boolean
    quality?: boolean
    notes?: boolean
    cost?: boolean
    foalId?: boolean
    groomId?: boolean
    assignmentId?: boolean
    timestamp?: boolean
    createdAt?: boolean
    assignment?: boolean | GroomInteraction$assignmentArgs<ExtArgs>
    foal?: boolean | HorseDefaultArgs<ExtArgs>
    groom?: boolean | GroomDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["groomInteraction"]>

  export type GroomInteractionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    interactionType?: boolean
    duration?: boolean
    bondingChange?: boolean
    stressChange?: boolean
    quality?: boolean
    notes?: boolean
    cost?: boolean
    foalId?: boolean
    groomId?: boolean
    assignmentId?: boolean
    timestamp?: boolean
    createdAt?: boolean
    assignment?: boolean | GroomInteraction$assignmentArgs<ExtArgs>
    foal?: boolean | HorseDefaultArgs<ExtArgs>
    groom?: boolean | GroomDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["groomInteraction"]>

  export type GroomInteractionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    interactionType?: boolean
    duration?: boolean
    bondingChange?: boolean
    stressChange?: boolean
    quality?: boolean
    notes?: boolean
    cost?: boolean
    foalId?: boolean
    groomId?: boolean
    assignmentId?: boolean
    timestamp?: boolean
    createdAt?: boolean
    assignment?: boolean | GroomInteraction$assignmentArgs<ExtArgs>
    foal?: boolean | HorseDefaultArgs<ExtArgs>
    groom?: boolean | GroomDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["groomInteraction"]>

  export type GroomInteractionSelectScalar = {
    id?: boolean
    interactionType?: boolean
    duration?: boolean
    bondingChange?: boolean
    stressChange?: boolean
    quality?: boolean
    notes?: boolean
    cost?: boolean
    foalId?: boolean
    groomId?: boolean
    assignmentId?: boolean
    timestamp?: boolean
    createdAt?: boolean
  }

  export type GroomInteractionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "interactionType" | "duration" | "bondingChange" | "stressChange" | "quality" | "notes" | "cost" | "foalId" | "groomId" | "assignmentId" | "timestamp" | "createdAt", ExtArgs["result"]["groomInteraction"]>
  export type GroomInteractionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignment?: boolean | GroomInteraction$assignmentArgs<ExtArgs>
    foal?: boolean | HorseDefaultArgs<ExtArgs>
    groom?: boolean | GroomDefaultArgs<ExtArgs>
  }
  export type GroomInteractionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignment?: boolean | GroomInteraction$assignmentArgs<ExtArgs>
    foal?: boolean | HorseDefaultArgs<ExtArgs>
    groom?: boolean | GroomDefaultArgs<ExtArgs>
  }
  export type GroomInteractionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignment?: boolean | GroomInteraction$assignmentArgs<ExtArgs>
    foal?: boolean | HorseDefaultArgs<ExtArgs>
    groom?: boolean | GroomDefaultArgs<ExtArgs>
  }

  export type $GroomInteractionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "GroomInteraction"
    objects: {
      assignment: Prisma.$GroomAssignmentPayload<ExtArgs> | null
      foal: Prisma.$HorsePayload<ExtArgs>
      groom: Prisma.$GroomPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * Unique identifier for each interaction
       */
      id: number
      /**
       * Type of interaction
       */
      interactionType: string
      /**
       * Duration in minutes
       */
      duration: number
      /**
       * Bonding change (-10 to +10)
       */
      bondingChange: number
      /**
       * Stress change (-10 to +10)
       */
      stressChange: number
      /**
       * Quality of interaction
       */
      quality: string
      /**
       * Notes
       */
      notes: string | null
      /**
       * Cost
       */
      cost: Prisma.Decimal
      /**
       * Foreign keys
       */
      foalId: number
      groomId: number
      assignmentId: number | null
      /**
       * Timestamps
       */
      timestamp: Date
      createdAt: Date
    }, ExtArgs["result"]["groomInteraction"]>
    composites: {}
  }

  type GroomInteractionGetPayload<S extends boolean | null | undefined | GroomInteractionDefaultArgs> = $Result.GetResult<Prisma.$GroomInteractionPayload, S>

  type GroomInteractionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<GroomInteractionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: GroomInteractionCountAggregateInputType | true
    }

  export interface GroomInteractionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['GroomInteraction'], meta: { name: 'GroomInteraction' } }
    /**
     * Find zero or one GroomInteraction that matches the filter.
     * @param {GroomInteractionFindUniqueArgs} args - Arguments to find a GroomInteraction
     * @example
     * // Get one GroomInteraction
     * const groomInteraction = await prisma.groomInteraction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends GroomInteractionFindUniqueArgs>(args: SelectSubset<T, GroomInteractionFindUniqueArgs<ExtArgs>>): Prisma__GroomInteractionClient<$Result.GetResult<Prisma.$GroomInteractionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one GroomInteraction that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {GroomInteractionFindUniqueOrThrowArgs} args - Arguments to find a GroomInteraction
     * @example
     * // Get one GroomInteraction
     * const groomInteraction = await prisma.groomInteraction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends GroomInteractionFindUniqueOrThrowArgs>(args: SelectSubset<T, GroomInteractionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__GroomInteractionClient<$Result.GetResult<Prisma.$GroomInteractionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first GroomInteraction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomInteractionFindFirstArgs} args - Arguments to find a GroomInteraction
     * @example
     * // Get one GroomInteraction
     * const groomInteraction = await prisma.groomInteraction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends GroomInteractionFindFirstArgs>(args?: SelectSubset<T, GroomInteractionFindFirstArgs<ExtArgs>>): Prisma__GroomInteractionClient<$Result.GetResult<Prisma.$GroomInteractionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first GroomInteraction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomInteractionFindFirstOrThrowArgs} args - Arguments to find a GroomInteraction
     * @example
     * // Get one GroomInteraction
     * const groomInteraction = await prisma.groomInteraction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends GroomInteractionFindFirstOrThrowArgs>(args?: SelectSubset<T, GroomInteractionFindFirstOrThrowArgs<ExtArgs>>): Prisma__GroomInteractionClient<$Result.GetResult<Prisma.$GroomInteractionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more GroomInteractions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomInteractionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all GroomInteractions
     * const groomInteractions = await prisma.groomInteraction.findMany()
     * 
     * // Get first 10 GroomInteractions
     * const groomInteractions = await prisma.groomInteraction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const groomInteractionWithIdOnly = await prisma.groomInteraction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends GroomInteractionFindManyArgs>(args?: SelectSubset<T, GroomInteractionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroomInteractionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a GroomInteraction.
     * @param {GroomInteractionCreateArgs} args - Arguments to create a GroomInteraction.
     * @example
     * // Create one GroomInteraction
     * const GroomInteraction = await prisma.groomInteraction.create({
     *   data: {
     *     // ... data to create a GroomInteraction
     *   }
     * })
     * 
     */
    create<T extends GroomInteractionCreateArgs>(args: SelectSubset<T, GroomInteractionCreateArgs<ExtArgs>>): Prisma__GroomInteractionClient<$Result.GetResult<Prisma.$GroomInteractionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many GroomInteractions.
     * @param {GroomInteractionCreateManyArgs} args - Arguments to create many GroomInteractions.
     * @example
     * // Create many GroomInteractions
     * const groomInteraction = await prisma.groomInteraction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends GroomInteractionCreateManyArgs>(args?: SelectSubset<T, GroomInteractionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many GroomInteractions and returns the data saved in the database.
     * @param {GroomInteractionCreateManyAndReturnArgs} args - Arguments to create many GroomInteractions.
     * @example
     * // Create many GroomInteractions
     * const groomInteraction = await prisma.groomInteraction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many GroomInteractions and only return the `id`
     * const groomInteractionWithIdOnly = await prisma.groomInteraction.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends GroomInteractionCreateManyAndReturnArgs>(args?: SelectSubset<T, GroomInteractionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroomInteractionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a GroomInteraction.
     * @param {GroomInteractionDeleteArgs} args - Arguments to delete one GroomInteraction.
     * @example
     * // Delete one GroomInteraction
     * const GroomInteraction = await prisma.groomInteraction.delete({
     *   where: {
     *     // ... filter to delete one GroomInteraction
     *   }
     * })
     * 
     */
    delete<T extends GroomInteractionDeleteArgs>(args: SelectSubset<T, GroomInteractionDeleteArgs<ExtArgs>>): Prisma__GroomInteractionClient<$Result.GetResult<Prisma.$GroomInteractionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one GroomInteraction.
     * @param {GroomInteractionUpdateArgs} args - Arguments to update one GroomInteraction.
     * @example
     * // Update one GroomInteraction
     * const groomInteraction = await prisma.groomInteraction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends GroomInteractionUpdateArgs>(args: SelectSubset<T, GroomInteractionUpdateArgs<ExtArgs>>): Prisma__GroomInteractionClient<$Result.GetResult<Prisma.$GroomInteractionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more GroomInteractions.
     * @param {GroomInteractionDeleteManyArgs} args - Arguments to filter GroomInteractions to delete.
     * @example
     * // Delete a few GroomInteractions
     * const { count } = await prisma.groomInteraction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends GroomInteractionDeleteManyArgs>(args?: SelectSubset<T, GroomInteractionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more GroomInteractions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomInteractionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many GroomInteractions
     * const groomInteraction = await prisma.groomInteraction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends GroomInteractionUpdateManyArgs>(args: SelectSubset<T, GroomInteractionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more GroomInteractions and returns the data updated in the database.
     * @param {GroomInteractionUpdateManyAndReturnArgs} args - Arguments to update many GroomInteractions.
     * @example
     * // Update many GroomInteractions
     * const groomInteraction = await prisma.groomInteraction.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more GroomInteractions and only return the `id`
     * const groomInteractionWithIdOnly = await prisma.groomInteraction.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends GroomInteractionUpdateManyAndReturnArgs>(args: SelectSubset<T, GroomInteractionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GroomInteractionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one GroomInteraction.
     * @param {GroomInteractionUpsertArgs} args - Arguments to update or create a GroomInteraction.
     * @example
     * // Update or create a GroomInteraction
     * const groomInteraction = await prisma.groomInteraction.upsert({
     *   create: {
     *     // ... data to create a GroomInteraction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the GroomInteraction we want to update
     *   }
     * })
     */
    upsert<T extends GroomInteractionUpsertArgs>(args: SelectSubset<T, GroomInteractionUpsertArgs<ExtArgs>>): Prisma__GroomInteractionClient<$Result.GetResult<Prisma.$GroomInteractionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of GroomInteractions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomInteractionCountArgs} args - Arguments to filter GroomInteractions to count.
     * @example
     * // Count the number of GroomInteractions
     * const count = await prisma.groomInteraction.count({
     *   where: {
     *     // ... the filter for the GroomInteractions we want to count
     *   }
     * })
    **/
    count<T extends GroomInteractionCountArgs>(
      args?: Subset<T, GroomInteractionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GroomInteractionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a GroomInteraction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomInteractionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GroomInteractionAggregateArgs>(args: Subset<T, GroomInteractionAggregateArgs>): Prisma.PrismaPromise<GetGroomInteractionAggregateType<T>>

    /**
     * Group by GroomInteraction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroomInteractionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends GroomInteractionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: GroomInteractionGroupByArgs['orderBy'] }
        : { orderBy?: GroomInteractionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, GroomInteractionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGroomInteractionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the GroomInteraction model
   */
  readonly fields: GroomInteractionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for GroomInteraction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__GroomInteractionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    assignment<T extends GroomInteraction$assignmentArgs<ExtArgs> = {}>(args?: Subset<T, GroomInteraction$assignmentArgs<ExtArgs>>): Prisma__GroomAssignmentClient<$Result.GetResult<Prisma.$GroomAssignmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    foal<T extends HorseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, HorseDefaultArgs<ExtArgs>>): Prisma__HorseClient<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    groom<T extends GroomDefaultArgs<ExtArgs> = {}>(args?: Subset<T, GroomDefaultArgs<ExtArgs>>): Prisma__GroomClient<$Result.GetResult<Prisma.$GroomPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the GroomInteraction model
   */
  interface GroomInteractionFieldRefs {
    readonly id: FieldRef<"GroomInteraction", 'Int'>
    readonly interactionType: FieldRef<"GroomInteraction", 'String'>
    readonly duration: FieldRef<"GroomInteraction", 'Int'>
    readonly bondingChange: FieldRef<"GroomInteraction", 'Int'>
    readonly stressChange: FieldRef<"GroomInteraction", 'Int'>
    readonly quality: FieldRef<"GroomInteraction", 'String'>
    readonly notes: FieldRef<"GroomInteraction", 'String'>
    readonly cost: FieldRef<"GroomInteraction", 'Decimal'>
    readonly foalId: FieldRef<"GroomInteraction", 'Int'>
    readonly groomId: FieldRef<"GroomInteraction", 'Int'>
    readonly assignmentId: FieldRef<"GroomInteraction", 'Int'>
    readonly timestamp: FieldRef<"GroomInteraction", 'DateTime'>
    readonly createdAt: FieldRef<"GroomInteraction", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * GroomInteraction findUnique
   */
  export type GroomInteractionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomInteraction
     */
    select?: GroomInteractionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomInteraction
     */
    omit?: GroomInteractionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInteractionInclude<ExtArgs> | null
    /**
     * Filter, which GroomInteraction to fetch.
     */
    where: GroomInteractionWhereUniqueInput
  }

  /**
   * GroomInteraction findUniqueOrThrow
   */
  export type GroomInteractionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomInteraction
     */
    select?: GroomInteractionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomInteraction
     */
    omit?: GroomInteractionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInteractionInclude<ExtArgs> | null
    /**
     * Filter, which GroomInteraction to fetch.
     */
    where: GroomInteractionWhereUniqueInput
  }

  /**
   * GroomInteraction findFirst
   */
  export type GroomInteractionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomInteraction
     */
    select?: GroomInteractionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomInteraction
     */
    omit?: GroomInteractionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInteractionInclude<ExtArgs> | null
    /**
     * Filter, which GroomInteraction to fetch.
     */
    where?: GroomInteractionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GroomInteractions to fetch.
     */
    orderBy?: GroomInteractionOrderByWithRelationInput | GroomInteractionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GroomInteractions.
     */
    cursor?: GroomInteractionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GroomInteractions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GroomInteractions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GroomInteractions.
     */
    distinct?: GroomInteractionScalarFieldEnum | GroomInteractionScalarFieldEnum[]
  }

  /**
   * GroomInteraction findFirstOrThrow
   */
  export type GroomInteractionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomInteraction
     */
    select?: GroomInteractionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomInteraction
     */
    omit?: GroomInteractionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInteractionInclude<ExtArgs> | null
    /**
     * Filter, which GroomInteraction to fetch.
     */
    where?: GroomInteractionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GroomInteractions to fetch.
     */
    orderBy?: GroomInteractionOrderByWithRelationInput | GroomInteractionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GroomInteractions.
     */
    cursor?: GroomInteractionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GroomInteractions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GroomInteractions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GroomInteractions.
     */
    distinct?: GroomInteractionScalarFieldEnum | GroomInteractionScalarFieldEnum[]
  }

  /**
   * GroomInteraction findMany
   */
  export type GroomInteractionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomInteraction
     */
    select?: GroomInteractionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomInteraction
     */
    omit?: GroomInteractionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInteractionInclude<ExtArgs> | null
    /**
     * Filter, which GroomInteractions to fetch.
     */
    where?: GroomInteractionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GroomInteractions to fetch.
     */
    orderBy?: GroomInteractionOrderByWithRelationInput | GroomInteractionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing GroomInteractions.
     */
    cursor?: GroomInteractionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GroomInteractions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GroomInteractions.
     */
    skip?: number
    distinct?: GroomInteractionScalarFieldEnum | GroomInteractionScalarFieldEnum[]
  }

  /**
   * GroomInteraction create
   */
  export type GroomInteractionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomInteraction
     */
    select?: GroomInteractionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomInteraction
     */
    omit?: GroomInteractionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInteractionInclude<ExtArgs> | null
    /**
     * The data needed to create a GroomInteraction.
     */
    data: XOR<GroomInteractionCreateInput, GroomInteractionUncheckedCreateInput>
  }

  /**
   * GroomInteraction createMany
   */
  export type GroomInteractionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many GroomInteractions.
     */
    data: GroomInteractionCreateManyInput | GroomInteractionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * GroomInteraction createManyAndReturn
   */
  export type GroomInteractionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomInteraction
     */
    select?: GroomInteractionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the GroomInteraction
     */
    omit?: GroomInteractionOmit<ExtArgs> | null
    /**
     * The data used to create many GroomInteractions.
     */
    data: GroomInteractionCreateManyInput | GroomInteractionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInteractionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * GroomInteraction update
   */
  export type GroomInteractionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomInteraction
     */
    select?: GroomInteractionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomInteraction
     */
    omit?: GroomInteractionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInteractionInclude<ExtArgs> | null
    /**
     * The data needed to update a GroomInteraction.
     */
    data: XOR<GroomInteractionUpdateInput, GroomInteractionUncheckedUpdateInput>
    /**
     * Choose, which GroomInteraction to update.
     */
    where: GroomInteractionWhereUniqueInput
  }

  /**
   * GroomInteraction updateMany
   */
  export type GroomInteractionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update GroomInteractions.
     */
    data: XOR<GroomInteractionUpdateManyMutationInput, GroomInteractionUncheckedUpdateManyInput>
    /**
     * Filter which GroomInteractions to update
     */
    where?: GroomInteractionWhereInput
    /**
     * Limit how many GroomInteractions to update.
     */
    limit?: number
  }

  /**
   * GroomInteraction updateManyAndReturn
   */
  export type GroomInteractionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomInteraction
     */
    select?: GroomInteractionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the GroomInteraction
     */
    omit?: GroomInteractionOmit<ExtArgs> | null
    /**
     * The data used to update GroomInteractions.
     */
    data: XOR<GroomInteractionUpdateManyMutationInput, GroomInteractionUncheckedUpdateManyInput>
    /**
     * Filter which GroomInteractions to update
     */
    where?: GroomInteractionWhereInput
    /**
     * Limit how many GroomInteractions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInteractionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * GroomInteraction upsert
   */
  export type GroomInteractionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomInteraction
     */
    select?: GroomInteractionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomInteraction
     */
    omit?: GroomInteractionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInteractionInclude<ExtArgs> | null
    /**
     * The filter to search for the GroomInteraction to update in case it exists.
     */
    where: GroomInteractionWhereUniqueInput
    /**
     * In case the GroomInteraction found by the `where` argument doesn't exist, create a new GroomInteraction with this data.
     */
    create: XOR<GroomInteractionCreateInput, GroomInteractionUncheckedCreateInput>
    /**
     * In case the GroomInteraction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<GroomInteractionUpdateInput, GroomInteractionUncheckedUpdateInput>
  }

  /**
   * GroomInteraction delete
   */
  export type GroomInteractionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomInteraction
     */
    select?: GroomInteractionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomInteraction
     */
    omit?: GroomInteractionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInteractionInclude<ExtArgs> | null
    /**
     * Filter which GroomInteraction to delete.
     */
    where: GroomInteractionWhereUniqueInput
  }

  /**
   * GroomInteraction deleteMany
   */
  export type GroomInteractionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which GroomInteractions to delete
     */
    where?: GroomInteractionWhereInput
    /**
     * Limit how many GroomInteractions to delete.
     */
    limit?: number
  }

  /**
   * GroomInteraction.assignment
   */
  export type GroomInteraction$assignmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomAssignment
     */
    select?: GroomAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomAssignment
     */
    omit?: GroomAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomAssignmentInclude<ExtArgs> | null
    where?: GroomAssignmentWhereInput
  }

  /**
   * GroomInteraction without action
   */
  export type GroomInteractionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroomInteraction
     */
    select?: GroomInteractionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GroomInteraction
     */
    omit?: GroomInteractionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GroomInteractionInclude<ExtArgs> | null
  }


  /**
   * Model Show
   */

  export type AggregateShow = {
    _count: ShowCountAggregateOutputType | null
    _avg: ShowAvgAggregateOutputType | null
    _sum: ShowSumAggregateOutputType | null
    _min: ShowMinAggregateOutputType | null
    _max: ShowMaxAggregateOutputType | null
  }

  export type ShowAvgAggregateOutputType = {
    id: number | null
    levelMin: number | null
    levelMax: number | null
    entryFee: number | null
    prize: number | null
  }

  export type ShowSumAggregateOutputType = {
    id: number | null
    levelMin: number | null
    levelMax: number | null
    entryFee: number | null
    prize: number | null
  }

  export type ShowMinAggregateOutputType = {
    id: number | null
    name: string | null
    discipline: string | null
    levelMin: number | null
    levelMax: number | null
    entryFee: number | null
    prize: number | null
    runDate: Date | null
    hostUserId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ShowMaxAggregateOutputType = {
    id: number | null
    name: string | null
    discipline: string | null
    levelMin: number | null
    levelMax: number | null
    entryFee: number | null
    prize: number | null
    runDate: Date | null
    hostUserId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ShowCountAggregateOutputType = {
    id: number
    name: number
    discipline: number
    levelMin: number
    levelMax: number
    entryFee: number
    prize: number
    runDate: number
    hostUserId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ShowAvgAggregateInputType = {
    id?: true
    levelMin?: true
    levelMax?: true
    entryFee?: true
    prize?: true
  }

  export type ShowSumAggregateInputType = {
    id?: true
    levelMin?: true
    levelMax?: true
    entryFee?: true
    prize?: true
  }

  export type ShowMinAggregateInputType = {
    id?: true
    name?: true
    discipline?: true
    levelMin?: true
    levelMax?: true
    entryFee?: true
    prize?: true
    runDate?: true
    hostUserId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ShowMaxAggregateInputType = {
    id?: true
    name?: true
    discipline?: true
    levelMin?: true
    levelMax?: true
    entryFee?: true
    prize?: true
    runDate?: true
    hostUserId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ShowCountAggregateInputType = {
    id?: true
    name?: true
    discipline?: true
    levelMin?: true
    levelMax?: true
    entryFee?: true
    prize?: true
    runDate?: true
    hostUserId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ShowAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Show to aggregate.
     */
    where?: ShowWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Shows to fetch.
     */
    orderBy?: ShowOrderByWithRelationInput | ShowOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ShowWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Shows from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Shows.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Shows
    **/
    _count?: true | ShowCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ShowAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ShowSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShowMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShowMaxAggregateInputType
  }

  export type GetShowAggregateType<T extends ShowAggregateArgs> = {
        [P in keyof T & keyof AggregateShow]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShow[P]>
      : GetScalarType<T[P], AggregateShow[P]>
  }




  export type ShowGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShowWhereInput
    orderBy?: ShowOrderByWithAggregationInput | ShowOrderByWithAggregationInput[]
    by: ShowScalarFieldEnum[] | ShowScalarFieldEnum
    having?: ShowScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShowCountAggregateInputType | true
    _avg?: ShowAvgAggregateInputType
    _sum?: ShowSumAggregateInputType
    _min?: ShowMinAggregateInputType
    _max?: ShowMaxAggregateInputType
  }

  export type ShowGroupByOutputType = {
    id: number
    name: string
    discipline: string
    levelMin: number
    levelMax: number
    entryFee: number
    prize: number
    runDate: Date
    hostUserId: string | null
    createdAt: Date
    updatedAt: Date
    _count: ShowCountAggregateOutputType | null
    _avg: ShowAvgAggregateOutputType | null
    _sum: ShowSumAggregateOutputType | null
    _min: ShowMinAggregateOutputType | null
    _max: ShowMaxAggregateOutputType | null
  }

  type GetShowGroupByPayload<T extends ShowGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ShowGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShowGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShowGroupByOutputType[P]>
            : GetScalarType<T[P], ShowGroupByOutputType[P]>
        }
      >
    >


  export type ShowSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    discipline?: boolean
    levelMin?: boolean
    levelMax?: boolean
    entryFee?: boolean
    prize?: boolean
    runDate?: boolean
    hostUserId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    competitionResults?: boolean | Show$competitionResultsArgs<ExtArgs>
    hostUser?: boolean | Show$hostUserArgs<ExtArgs>
    _count?: boolean | ShowCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["show"]>

  export type ShowSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    discipline?: boolean
    levelMin?: boolean
    levelMax?: boolean
    entryFee?: boolean
    prize?: boolean
    runDate?: boolean
    hostUserId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    hostUser?: boolean | Show$hostUserArgs<ExtArgs>
  }, ExtArgs["result"]["show"]>

  export type ShowSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    discipline?: boolean
    levelMin?: boolean
    levelMax?: boolean
    entryFee?: boolean
    prize?: boolean
    runDate?: boolean
    hostUserId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    hostUser?: boolean | Show$hostUserArgs<ExtArgs>
  }, ExtArgs["result"]["show"]>

  export type ShowSelectScalar = {
    id?: boolean
    name?: boolean
    discipline?: boolean
    levelMin?: boolean
    levelMax?: boolean
    entryFee?: boolean
    prize?: boolean
    runDate?: boolean
    hostUserId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ShowOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "discipline" | "levelMin" | "levelMax" | "entryFee" | "prize" | "runDate" | "hostUserId" | "createdAt" | "updatedAt", ExtArgs["result"]["show"]>
  export type ShowInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    competitionResults?: boolean | Show$competitionResultsArgs<ExtArgs>
    hostUser?: boolean | Show$hostUserArgs<ExtArgs>
    _count?: boolean | ShowCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ShowIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    hostUser?: boolean | Show$hostUserArgs<ExtArgs>
  }
  export type ShowIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    hostUser?: boolean | Show$hostUserArgs<ExtArgs>
  }

  export type $ShowPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Show"
    objects: {
      competitionResults: Prisma.$CompetitionResultPayload<ExtArgs>[]
      hostUser: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * Unique identifier for each show
       */
      id: number
      /**
       * Name of the show
       */
      name: string
      /**
       * Discipline
       */
      discipline: string
      /**
       * Level requirements
       */
      levelMin: number
      levelMax: number
      /**
       * Financial details
       */
      entryFee: number
      prize: number
      /**
       * Schedule
       */
      runDate: Date
      /**
       * Host user
       */
      hostUserId: string | null
      /**
       * Timestamps
       */
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["show"]>
    composites: {}
  }

  type ShowGetPayload<S extends boolean | null | undefined | ShowDefaultArgs> = $Result.GetResult<Prisma.$ShowPayload, S>

  type ShowCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ShowFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ShowCountAggregateInputType | true
    }

  export interface ShowDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Show'], meta: { name: 'Show' } }
    /**
     * Find zero or one Show that matches the filter.
     * @param {ShowFindUniqueArgs} args - Arguments to find a Show
     * @example
     * // Get one Show
     * const show = await prisma.show.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ShowFindUniqueArgs>(args: SelectSubset<T, ShowFindUniqueArgs<ExtArgs>>): Prisma__ShowClient<$Result.GetResult<Prisma.$ShowPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Show that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ShowFindUniqueOrThrowArgs} args - Arguments to find a Show
     * @example
     * // Get one Show
     * const show = await prisma.show.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ShowFindUniqueOrThrowArgs>(args: SelectSubset<T, ShowFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ShowClient<$Result.GetResult<Prisma.$ShowPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Show that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShowFindFirstArgs} args - Arguments to find a Show
     * @example
     * // Get one Show
     * const show = await prisma.show.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ShowFindFirstArgs>(args?: SelectSubset<T, ShowFindFirstArgs<ExtArgs>>): Prisma__ShowClient<$Result.GetResult<Prisma.$ShowPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Show that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShowFindFirstOrThrowArgs} args - Arguments to find a Show
     * @example
     * // Get one Show
     * const show = await prisma.show.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ShowFindFirstOrThrowArgs>(args?: SelectSubset<T, ShowFindFirstOrThrowArgs<ExtArgs>>): Prisma__ShowClient<$Result.GetResult<Prisma.$ShowPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Shows that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShowFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Shows
     * const shows = await prisma.show.findMany()
     * 
     * // Get first 10 Shows
     * const shows = await prisma.show.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const showWithIdOnly = await prisma.show.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ShowFindManyArgs>(args?: SelectSubset<T, ShowFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShowPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Show.
     * @param {ShowCreateArgs} args - Arguments to create a Show.
     * @example
     * // Create one Show
     * const Show = await prisma.show.create({
     *   data: {
     *     // ... data to create a Show
     *   }
     * })
     * 
     */
    create<T extends ShowCreateArgs>(args: SelectSubset<T, ShowCreateArgs<ExtArgs>>): Prisma__ShowClient<$Result.GetResult<Prisma.$ShowPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Shows.
     * @param {ShowCreateManyArgs} args - Arguments to create many Shows.
     * @example
     * // Create many Shows
     * const show = await prisma.show.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ShowCreateManyArgs>(args?: SelectSubset<T, ShowCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Shows and returns the data saved in the database.
     * @param {ShowCreateManyAndReturnArgs} args - Arguments to create many Shows.
     * @example
     * // Create many Shows
     * const show = await prisma.show.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Shows and only return the `id`
     * const showWithIdOnly = await prisma.show.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ShowCreateManyAndReturnArgs>(args?: SelectSubset<T, ShowCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShowPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Show.
     * @param {ShowDeleteArgs} args - Arguments to delete one Show.
     * @example
     * // Delete one Show
     * const Show = await prisma.show.delete({
     *   where: {
     *     // ... filter to delete one Show
     *   }
     * })
     * 
     */
    delete<T extends ShowDeleteArgs>(args: SelectSubset<T, ShowDeleteArgs<ExtArgs>>): Prisma__ShowClient<$Result.GetResult<Prisma.$ShowPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Show.
     * @param {ShowUpdateArgs} args - Arguments to update one Show.
     * @example
     * // Update one Show
     * const show = await prisma.show.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ShowUpdateArgs>(args: SelectSubset<T, ShowUpdateArgs<ExtArgs>>): Prisma__ShowClient<$Result.GetResult<Prisma.$ShowPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Shows.
     * @param {ShowDeleteManyArgs} args - Arguments to filter Shows to delete.
     * @example
     * // Delete a few Shows
     * const { count } = await prisma.show.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ShowDeleteManyArgs>(args?: SelectSubset<T, ShowDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Shows.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShowUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Shows
     * const show = await prisma.show.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ShowUpdateManyArgs>(args: SelectSubset<T, ShowUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Shows and returns the data updated in the database.
     * @param {ShowUpdateManyAndReturnArgs} args - Arguments to update many Shows.
     * @example
     * // Update many Shows
     * const show = await prisma.show.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Shows and only return the `id`
     * const showWithIdOnly = await prisma.show.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ShowUpdateManyAndReturnArgs>(args: SelectSubset<T, ShowUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShowPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Show.
     * @param {ShowUpsertArgs} args - Arguments to update or create a Show.
     * @example
     * // Update or create a Show
     * const show = await prisma.show.upsert({
     *   create: {
     *     // ... data to create a Show
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Show we want to update
     *   }
     * })
     */
    upsert<T extends ShowUpsertArgs>(args: SelectSubset<T, ShowUpsertArgs<ExtArgs>>): Prisma__ShowClient<$Result.GetResult<Prisma.$ShowPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Shows.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShowCountArgs} args - Arguments to filter Shows to count.
     * @example
     * // Count the number of Shows
     * const count = await prisma.show.count({
     *   where: {
     *     // ... the filter for the Shows we want to count
     *   }
     * })
    **/
    count<T extends ShowCountArgs>(
      args?: Subset<T, ShowCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShowCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Show.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShowAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShowAggregateArgs>(args: Subset<T, ShowAggregateArgs>): Prisma.PrismaPromise<GetShowAggregateType<T>>

    /**
     * Group by Show.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShowGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShowGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShowGroupByArgs['orderBy'] }
        : { orderBy?: ShowGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShowGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShowGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Show model
   */
  readonly fields: ShowFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Show.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ShowClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    competitionResults<T extends Show$competitionResultsArgs<ExtArgs> = {}>(args?: Subset<T, Show$competitionResultsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompetitionResultPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    hostUser<T extends Show$hostUserArgs<ExtArgs> = {}>(args?: Subset<T, Show$hostUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Show model
   */
  interface ShowFieldRefs {
    readonly id: FieldRef<"Show", 'Int'>
    readonly name: FieldRef<"Show", 'String'>
    readonly discipline: FieldRef<"Show", 'String'>
    readonly levelMin: FieldRef<"Show", 'Int'>
    readonly levelMax: FieldRef<"Show", 'Int'>
    readonly entryFee: FieldRef<"Show", 'Int'>
    readonly prize: FieldRef<"Show", 'Int'>
    readonly runDate: FieldRef<"Show", 'DateTime'>
    readonly hostUserId: FieldRef<"Show", 'String'>
    readonly createdAt: FieldRef<"Show", 'DateTime'>
    readonly updatedAt: FieldRef<"Show", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Show findUnique
   */
  export type ShowFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Show
     */
    select?: ShowSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Show
     */
    omit?: ShowOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShowInclude<ExtArgs> | null
    /**
     * Filter, which Show to fetch.
     */
    where: ShowWhereUniqueInput
  }

  /**
   * Show findUniqueOrThrow
   */
  export type ShowFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Show
     */
    select?: ShowSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Show
     */
    omit?: ShowOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShowInclude<ExtArgs> | null
    /**
     * Filter, which Show to fetch.
     */
    where: ShowWhereUniqueInput
  }

  /**
   * Show findFirst
   */
  export type ShowFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Show
     */
    select?: ShowSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Show
     */
    omit?: ShowOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShowInclude<ExtArgs> | null
    /**
     * Filter, which Show to fetch.
     */
    where?: ShowWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Shows to fetch.
     */
    orderBy?: ShowOrderByWithRelationInput | ShowOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Shows.
     */
    cursor?: ShowWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Shows from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Shows.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Shows.
     */
    distinct?: ShowScalarFieldEnum | ShowScalarFieldEnum[]
  }

  /**
   * Show findFirstOrThrow
   */
  export type ShowFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Show
     */
    select?: ShowSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Show
     */
    omit?: ShowOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShowInclude<ExtArgs> | null
    /**
     * Filter, which Show to fetch.
     */
    where?: ShowWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Shows to fetch.
     */
    orderBy?: ShowOrderByWithRelationInput | ShowOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Shows.
     */
    cursor?: ShowWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Shows from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Shows.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Shows.
     */
    distinct?: ShowScalarFieldEnum | ShowScalarFieldEnum[]
  }

  /**
   * Show findMany
   */
  export type ShowFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Show
     */
    select?: ShowSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Show
     */
    omit?: ShowOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShowInclude<ExtArgs> | null
    /**
     * Filter, which Shows to fetch.
     */
    where?: ShowWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Shows to fetch.
     */
    orderBy?: ShowOrderByWithRelationInput | ShowOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Shows.
     */
    cursor?: ShowWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Shows from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Shows.
     */
    skip?: number
    distinct?: ShowScalarFieldEnum | ShowScalarFieldEnum[]
  }

  /**
   * Show create
   */
  export type ShowCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Show
     */
    select?: ShowSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Show
     */
    omit?: ShowOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShowInclude<ExtArgs> | null
    /**
     * The data needed to create a Show.
     */
    data: XOR<ShowCreateInput, ShowUncheckedCreateInput>
  }

  /**
   * Show createMany
   */
  export type ShowCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Shows.
     */
    data: ShowCreateManyInput | ShowCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Show createManyAndReturn
   */
  export type ShowCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Show
     */
    select?: ShowSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Show
     */
    omit?: ShowOmit<ExtArgs> | null
    /**
     * The data used to create many Shows.
     */
    data: ShowCreateManyInput | ShowCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShowIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Show update
   */
  export type ShowUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Show
     */
    select?: ShowSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Show
     */
    omit?: ShowOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShowInclude<ExtArgs> | null
    /**
     * The data needed to update a Show.
     */
    data: XOR<ShowUpdateInput, ShowUncheckedUpdateInput>
    /**
     * Choose, which Show to update.
     */
    where: ShowWhereUniqueInput
  }

  /**
   * Show updateMany
   */
  export type ShowUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Shows.
     */
    data: XOR<ShowUpdateManyMutationInput, ShowUncheckedUpdateManyInput>
    /**
     * Filter which Shows to update
     */
    where?: ShowWhereInput
    /**
     * Limit how many Shows to update.
     */
    limit?: number
  }

  /**
   * Show updateManyAndReturn
   */
  export type ShowUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Show
     */
    select?: ShowSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Show
     */
    omit?: ShowOmit<ExtArgs> | null
    /**
     * The data used to update Shows.
     */
    data: XOR<ShowUpdateManyMutationInput, ShowUncheckedUpdateManyInput>
    /**
     * Filter which Shows to update
     */
    where?: ShowWhereInput
    /**
     * Limit how many Shows to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShowIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Show upsert
   */
  export type ShowUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Show
     */
    select?: ShowSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Show
     */
    omit?: ShowOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShowInclude<ExtArgs> | null
    /**
     * The filter to search for the Show to update in case it exists.
     */
    where: ShowWhereUniqueInput
    /**
     * In case the Show found by the `where` argument doesn't exist, create a new Show with this data.
     */
    create: XOR<ShowCreateInput, ShowUncheckedCreateInput>
    /**
     * In case the Show was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ShowUpdateInput, ShowUncheckedUpdateInput>
  }

  /**
   * Show delete
   */
  export type ShowDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Show
     */
    select?: ShowSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Show
     */
    omit?: ShowOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShowInclude<ExtArgs> | null
    /**
     * Filter which Show to delete.
     */
    where: ShowWhereUniqueInput
  }

  /**
   * Show deleteMany
   */
  export type ShowDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Shows to delete
     */
    where?: ShowWhereInput
    /**
     * Limit how many Shows to delete.
     */
    limit?: number
  }

  /**
   * Show.competitionResults
   */
  export type Show$competitionResultsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompetitionResult
     */
    select?: CompetitionResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompetitionResult
     */
    omit?: CompetitionResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetitionResultInclude<ExtArgs> | null
    where?: CompetitionResultWhereInput
    orderBy?: CompetitionResultOrderByWithRelationInput | CompetitionResultOrderByWithRelationInput[]
    cursor?: CompetitionResultWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CompetitionResultScalarFieldEnum | CompetitionResultScalarFieldEnum[]
  }

  /**
   * Show.hostUser
   */
  export type Show$hostUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Show without action
   */
  export type ShowDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Show
     */
    select?: ShowSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Show
     */
    omit?: ShowOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShowInclude<ExtArgs> | null
  }


  /**
   * Model CompetitionResult
   */

  export type AggregateCompetitionResult = {
    _count: CompetitionResultCountAggregateOutputType | null
    _avg: CompetitionResultAvgAggregateOutputType | null
    _sum: CompetitionResultSumAggregateOutputType | null
    _min: CompetitionResultMinAggregateOutputType | null
    _max: CompetitionResultMaxAggregateOutputType | null
  }

  export type CompetitionResultAvgAggregateOutputType = {
    id: number | null
    score: Decimal | null
    prizeWon: Decimal | null
    horseId: number | null
    showId: number | null
  }

  export type CompetitionResultSumAggregateOutputType = {
    id: number | null
    score: Decimal | null
    prizeWon: Decimal | null
    horseId: number | null
    showId: number | null
  }

  export type CompetitionResultMinAggregateOutputType = {
    id: number | null
    score: Decimal | null
    placement: string | null
    discipline: string | null
    runDate: Date | null
    showName: string | null
    prizeWon: Decimal | null
    horseId: number | null
    showId: number | null
    createdAt: Date | null
  }

  export type CompetitionResultMaxAggregateOutputType = {
    id: number | null
    score: Decimal | null
    placement: string | null
    discipline: string | null
    runDate: Date | null
    showName: string | null
    prizeWon: Decimal | null
    horseId: number | null
    showId: number | null
    createdAt: Date | null
  }

  export type CompetitionResultCountAggregateOutputType = {
    id: number
    score: number
    placement: number
    discipline: number
    runDate: number
    showName: number
    prizeWon: number
    statGains: number
    horseId: number
    showId: number
    createdAt: number
    _all: number
  }


  export type CompetitionResultAvgAggregateInputType = {
    id?: true
    score?: true
    prizeWon?: true
    horseId?: true
    showId?: true
  }

  export type CompetitionResultSumAggregateInputType = {
    id?: true
    score?: true
    prizeWon?: true
    horseId?: true
    showId?: true
  }

  export type CompetitionResultMinAggregateInputType = {
    id?: true
    score?: true
    placement?: true
    discipline?: true
    runDate?: true
    showName?: true
    prizeWon?: true
    horseId?: true
    showId?: true
    createdAt?: true
  }

  export type CompetitionResultMaxAggregateInputType = {
    id?: true
    score?: true
    placement?: true
    discipline?: true
    runDate?: true
    showName?: true
    prizeWon?: true
    horseId?: true
    showId?: true
    createdAt?: true
  }

  export type CompetitionResultCountAggregateInputType = {
    id?: true
    score?: true
    placement?: true
    discipline?: true
    runDate?: true
    showName?: true
    prizeWon?: true
    statGains?: true
    horseId?: true
    showId?: true
    createdAt?: true
    _all?: true
  }

  export type CompetitionResultAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CompetitionResult to aggregate.
     */
    where?: CompetitionResultWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompetitionResults to fetch.
     */
    orderBy?: CompetitionResultOrderByWithRelationInput | CompetitionResultOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CompetitionResultWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompetitionResults from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompetitionResults.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CompetitionResults
    **/
    _count?: true | CompetitionResultCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CompetitionResultAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CompetitionResultSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompetitionResultMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompetitionResultMaxAggregateInputType
  }

  export type GetCompetitionResultAggregateType<T extends CompetitionResultAggregateArgs> = {
        [P in keyof T & keyof AggregateCompetitionResult]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompetitionResult[P]>
      : GetScalarType<T[P], AggregateCompetitionResult[P]>
  }




  export type CompetitionResultGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompetitionResultWhereInput
    orderBy?: CompetitionResultOrderByWithAggregationInput | CompetitionResultOrderByWithAggregationInput[]
    by: CompetitionResultScalarFieldEnum[] | CompetitionResultScalarFieldEnum
    having?: CompetitionResultScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompetitionResultCountAggregateInputType | true
    _avg?: CompetitionResultAvgAggregateInputType
    _sum?: CompetitionResultSumAggregateInputType
    _min?: CompetitionResultMinAggregateInputType
    _max?: CompetitionResultMaxAggregateInputType
  }

  export type CompetitionResultGroupByOutputType = {
    id: number
    score: Decimal
    placement: string | null
    discipline: string
    runDate: Date
    showName: string
    prizeWon: Decimal | null
    statGains: JsonValue | null
    horseId: number
    showId: number
    createdAt: Date
    _count: CompetitionResultCountAggregateOutputType | null
    _avg: CompetitionResultAvgAggregateOutputType | null
    _sum: CompetitionResultSumAggregateOutputType | null
    _min: CompetitionResultMinAggregateOutputType | null
    _max: CompetitionResultMaxAggregateOutputType | null
  }

  type GetCompetitionResultGroupByPayload<T extends CompetitionResultGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompetitionResultGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompetitionResultGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompetitionResultGroupByOutputType[P]>
            : GetScalarType<T[P], CompetitionResultGroupByOutputType[P]>
        }
      >
    >


  export type CompetitionResultSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    score?: boolean
    placement?: boolean
    discipline?: boolean
    runDate?: boolean
    showName?: boolean
    prizeWon?: boolean
    statGains?: boolean
    horseId?: boolean
    showId?: boolean
    createdAt?: boolean
    horse?: boolean | HorseDefaultArgs<ExtArgs>
    show?: boolean | ShowDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["competitionResult"]>

  export type CompetitionResultSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    score?: boolean
    placement?: boolean
    discipline?: boolean
    runDate?: boolean
    showName?: boolean
    prizeWon?: boolean
    statGains?: boolean
    horseId?: boolean
    showId?: boolean
    createdAt?: boolean
    horse?: boolean | HorseDefaultArgs<ExtArgs>
    show?: boolean | ShowDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["competitionResult"]>

  export type CompetitionResultSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    score?: boolean
    placement?: boolean
    discipline?: boolean
    runDate?: boolean
    showName?: boolean
    prizeWon?: boolean
    statGains?: boolean
    horseId?: boolean
    showId?: boolean
    createdAt?: boolean
    horse?: boolean | HorseDefaultArgs<ExtArgs>
    show?: boolean | ShowDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["competitionResult"]>

  export type CompetitionResultSelectScalar = {
    id?: boolean
    score?: boolean
    placement?: boolean
    discipline?: boolean
    runDate?: boolean
    showName?: boolean
    prizeWon?: boolean
    statGains?: boolean
    horseId?: boolean
    showId?: boolean
    createdAt?: boolean
  }

  export type CompetitionResultOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "score" | "placement" | "discipline" | "runDate" | "showName" | "prizeWon" | "statGains" | "horseId" | "showId" | "createdAt", ExtArgs["result"]["competitionResult"]>
  export type CompetitionResultInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horse?: boolean | HorseDefaultArgs<ExtArgs>
    show?: boolean | ShowDefaultArgs<ExtArgs>
  }
  export type CompetitionResultIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horse?: boolean | HorseDefaultArgs<ExtArgs>
    show?: boolean | ShowDefaultArgs<ExtArgs>
  }
  export type CompetitionResultIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horse?: boolean | HorseDefaultArgs<ExtArgs>
    show?: boolean | ShowDefaultArgs<ExtArgs>
  }

  export type $CompetitionResultPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CompetitionResult"
    objects: {
      horse: Prisma.$HorsePayload<ExtArgs>
      show: Prisma.$ShowPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * Unique identifier for each result
       */
      id: number
      /**
       * Competition details
       */
      score: Prisma.Decimal
      placement: string | null
      discipline: string
      runDate: Date
      showName: string
      /**
       * Rewards
       */
      prizeWon: Prisma.Decimal | null
      statGains: Prisma.JsonValue | null
      /**
       * Foreign keys
       */
      horseId: number
      showId: number
      /**
       * Timestamps
       */
      createdAt: Date
    }, ExtArgs["result"]["competitionResult"]>
    composites: {}
  }

  type CompetitionResultGetPayload<S extends boolean | null | undefined | CompetitionResultDefaultArgs> = $Result.GetResult<Prisma.$CompetitionResultPayload, S>

  type CompetitionResultCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CompetitionResultFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CompetitionResultCountAggregateInputType | true
    }

  export interface CompetitionResultDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CompetitionResult'], meta: { name: 'CompetitionResult' } }
    /**
     * Find zero or one CompetitionResult that matches the filter.
     * @param {CompetitionResultFindUniqueArgs} args - Arguments to find a CompetitionResult
     * @example
     * // Get one CompetitionResult
     * const competitionResult = await prisma.competitionResult.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CompetitionResultFindUniqueArgs>(args: SelectSubset<T, CompetitionResultFindUniqueArgs<ExtArgs>>): Prisma__CompetitionResultClient<$Result.GetResult<Prisma.$CompetitionResultPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CompetitionResult that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CompetitionResultFindUniqueOrThrowArgs} args - Arguments to find a CompetitionResult
     * @example
     * // Get one CompetitionResult
     * const competitionResult = await prisma.competitionResult.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CompetitionResultFindUniqueOrThrowArgs>(args: SelectSubset<T, CompetitionResultFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CompetitionResultClient<$Result.GetResult<Prisma.$CompetitionResultPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CompetitionResult that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompetitionResultFindFirstArgs} args - Arguments to find a CompetitionResult
     * @example
     * // Get one CompetitionResult
     * const competitionResult = await prisma.competitionResult.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CompetitionResultFindFirstArgs>(args?: SelectSubset<T, CompetitionResultFindFirstArgs<ExtArgs>>): Prisma__CompetitionResultClient<$Result.GetResult<Prisma.$CompetitionResultPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CompetitionResult that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompetitionResultFindFirstOrThrowArgs} args - Arguments to find a CompetitionResult
     * @example
     * // Get one CompetitionResult
     * const competitionResult = await prisma.competitionResult.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CompetitionResultFindFirstOrThrowArgs>(args?: SelectSubset<T, CompetitionResultFindFirstOrThrowArgs<ExtArgs>>): Prisma__CompetitionResultClient<$Result.GetResult<Prisma.$CompetitionResultPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CompetitionResults that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompetitionResultFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CompetitionResults
     * const competitionResults = await prisma.competitionResult.findMany()
     * 
     * // Get first 10 CompetitionResults
     * const competitionResults = await prisma.competitionResult.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const competitionResultWithIdOnly = await prisma.competitionResult.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CompetitionResultFindManyArgs>(args?: SelectSubset<T, CompetitionResultFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompetitionResultPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CompetitionResult.
     * @param {CompetitionResultCreateArgs} args - Arguments to create a CompetitionResult.
     * @example
     * // Create one CompetitionResult
     * const CompetitionResult = await prisma.competitionResult.create({
     *   data: {
     *     // ... data to create a CompetitionResult
     *   }
     * })
     * 
     */
    create<T extends CompetitionResultCreateArgs>(args: SelectSubset<T, CompetitionResultCreateArgs<ExtArgs>>): Prisma__CompetitionResultClient<$Result.GetResult<Prisma.$CompetitionResultPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CompetitionResults.
     * @param {CompetitionResultCreateManyArgs} args - Arguments to create many CompetitionResults.
     * @example
     * // Create many CompetitionResults
     * const competitionResult = await prisma.competitionResult.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CompetitionResultCreateManyArgs>(args?: SelectSubset<T, CompetitionResultCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CompetitionResults and returns the data saved in the database.
     * @param {CompetitionResultCreateManyAndReturnArgs} args - Arguments to create many CompetitionResults.
     * @example
     * // Create many CompetitionResults
     * const competitionResult = await prisma.competitionResult.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CompetitionResults and only return the `id`
     * const competitionResultWithIdOnly = await prisma.competitionResult.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CompetitionResultCreateManyAndReturnArgs>(args?: SelectSubset<T, CompetitionResultCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompetitionResultPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CompetitionResult.
     * @param {CompetitionResultDeleteArgs} args - Arguments to delete one CompetitionResult.
     * @example
     * // Delete one CompetitionResult
     * const CompetitionResult = await prisma.competitionResult.delete({
     *   where: {
     *     // ... filter to delete one CompetitionResult
     *   }
     * })
     * 
     */
    delete<T extends CompetitionResultDeleteArgs>(args: SelectSubset<T, CompetitionResultDeleteArgs<ExtArgs>>): Prisma__CompetitionResultClient<$Result.GetResult<Prisma.$CompetitionResultPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CompetitionResult.
     * @param {CompetitionResultUpdateArgs} args - Arguments to update one CompetitionResult.
     * @example
     * // Update one CompetitionResult
     * const competitionResult = await prisma.competitionResult.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CompetitionResultUpdateArgs>(args: SelectSubset<T, CompetitionResultUpdateArgs<ExtArgs>>): Prisma__CompetitionResultClient<$Result.GetResult<Prisma.$CompetitionResultPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CompetitionResults.
     * @param {CompetitionResultDeleteManyArgs} args - Arguments to filter CompetitionResults to delete.
     * @example
     * // Delete a few CompetitionResults
     * const { count } = await prisma.competitionResult.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CompetitionResultDeleteManyArgs>(args?: SelectSubset<T, CompetitionResultDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CompetitionResults.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompetitionResultUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CompetitionResults
     * const competitionResult = await prisma.competitionResult.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CompetitionResultUpdateManyArgs>(args: SelectSubset<T, CompetitionResultUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CompetitionResults and returns the data updated in the database.
     * @param {CompetitionResultUpdateManyAndReturnArgs} args - Arguments to update many CompetitionResults.
     * @example
     * // Update many CompetitionResults
     * const competitionResult = await prisma.competitionResult.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CompetitionResults and only return the `id`
     * const competitionResultWithIdOnly = await prisma.competitionResult.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CompetitionResultUpdateManyAndReturnArgs>(args: SelectSubset<T, CompetitionResultUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompetitionResultPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CompetitionResult.
     * @param {CompetitionResultUpsertArgs} args - Arguments to update or create a CompetitionResult.
     * @example
     * // Update or create a CompetitionResult
     * const competitionResult = await prisma.competitionResult.upsert({
     *   create: {
     *     // ... data to create a CompetitionResult
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CompetitionResult we want to update
     *   }
     * })
     */
    upsert<T extends CompetitionResultUpsertArgs>(args: SelectSubset<T, CompetitionResultUpsertArgs<ExtArgs>>): Prisma__CompetitionResultClient<$Result.GetResult<Prisma.$CompetitionResultPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CompetitionResults.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompetitionResultCountArgs} args - Arguments to filter CompetitionResults to count.
     * @example
     * // Count the number of CompetitionResults
     * const count = await prisma.competitionResult.count({
     *   where: {
     *     // ... the filter for the CompetitionResults we want to count
     *   }
     * })
    **/
    count<T extends CompetitionResultCountArgs>(
      args?: Subset<T, CompetitionResultCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompetitionResultCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CompetitionResult.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompetitionResultAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompetitionResultAggregateArgs>(args: Subset<T, CompetitionResultAggregateArgs>): Prisma.PrismaPromise<GetCompetitionResultAggregateType<T>>

    /**
     * Group by CompetitionResult.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompetitionResultGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CompetitionResultGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CompetitionResultGroupByArgs['orderBy'] }
        : { orderBy?: CompetitionResultGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CompetitionResultGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompetitionResultGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CompetitionResult model
   */
  readonly fields: CompetitionResultFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CompetitionResult.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CompetitionResultClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    horse<T extends HorseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, HorseDefaultArgs<ExtArgs>>): Prisma__HorseClient<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    show<T extends ShowDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ShowDefaultArgs<ExtArgs>>): Prisma__ShowClient<$Result.GetResult<Prisma.$ShowPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CompetitionResult model
   */
  interface CompetitionResultFieldRefs {
    readonly id: FieldRef<"CompetitionResult", 'Int'>
    readonly score: FieldRef<"CompetitionResult", 'Decimal'>
    readonly placement: FieldRef<"CompetitionResult", 'String'>
    readonly discipline: FieldRef<"CompetitionResult", 'String'>
    readonly runDate: FieldRef<"CompetitionResult", 'DateTime'>
    readonly showName: FieldRef<"CompetitionResult", 'String'>
    readonly prizeWon: FieldRef<"CompetitionResult", 'Decimal'>
    readonly statGains: FieldRef<"CompetitionResult", 'Json'>
    readonly horseId: FieldRef<"CompetitionResult", 'Int'>
    readonly showId: FieldRef<"CompetitionResult", 'Int'>
    readonly createdAt: FieldRef<"CompetitionResult", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CompetitionResult findUnique
   */
  export type CompetitionResultFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompetitionResult
     */
    select?: CompetitionResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompetitionResult
     */
    omit?: CompetitionResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetitionResultInclude<ExtArgs> | null
    /**
     * Filter, which CompetitionResult to fetch.
     */
    where: CompetitionResultWhereUniqueInput
  }

  /**
   * CompetitionResult findUniqueOrThrow
   */
  export type CompetitionResultFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompetitionResult
     */
    select?: CompetitionResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompetitionResult
     */
    omit?: CompetitionResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetitionResultInclude<ExtArgs> | null
    /**
     * Filter, which CompetitionResult to fetch.
     */
    where: CompetitionResultWhereUniqueInput
  }

  /**
   * CompetitionResult findFirst
   */
  export type CompetitionResultFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompetitionResult
     */
    select?: CompetitionResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompetitionResult
     */
    omit?: CompetitionResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetitionResultInclude<ExtArgs> | null
    /**
     * Filter, which CompetitionResult to fetch.
     */
    where?: CompetitionResultWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompetitionResults to fetch.
     */
    orderBy?: CompetitionResultOrderByWithRelationInput | CompetitionResultOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CompetitionResults.
     */
    cursor?: CompetitionResultWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompetitionResults from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompetitionResults.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CompetitionResults.
     */
    distinct?: CompetitionResultScalarFieldEnum | CompetitionResultScalarFieldEnum[]
  }

  /**
   * CompetitionResult findFirstOrThrow
   */
  export type CompetitionResultFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompetitionResult
     */
    select?: CompetitionResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompetitionResult
     */
    omit?: CompetitionResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetitionResultInclude<ExtArgs> | null
    /**
     * Filter, which CompetitionResult to fetch.
     */
    where?: CompetitionResultWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompetitionResults to fetch.
     */
    orderBy?: CompetitionResultOrderByWithRelationInput | CompetitionResultOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CompetitionResults.
     */
    cursor?: CompetitionResultWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompetitionResults from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompetitionResults.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CompetitionResults.
     */
    distinct?: CompetitionResultScalarFieldEnum | CompetitionResultScalarFieldEnum[]
  }

  /**
   * CompetitionResult findMany
   */
  export type CompetitionResultFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompetitionResult
     */
    select?: CompetitionResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompetitionResult
     */
    omit?: CompetitionResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetitionResultInclude<ExtArgs> | null
    /**
     * Filter, which CompetitionResults to fetch.
     */
    where?: CompetitionResultWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompetitionResults to fetch.
     */
    orderBy?: CompetitionResultOrderByWithRelationInput | CompetitionResultOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CompetitionResults.
     */
    cursor?: CompetitionResultWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompetitionResults from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompetitionResults.
     */
    skip?: number
    distinct?: CompetitionResultScalarFieldEnum | CompetitionResultScalarFieldEnum[]
  }

  /**
   * CompetitionResult create
   */
  export type CompetitionResultCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompetitionResult
     */
    select?: CompetitionResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompetitionResult
     */
    omit?: CompetitionResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetitionResultInclude<ExtArgs> | null
    /**
     * The data needed to create a CompetitionResult.
     */
    data: XOR<CompetitionResultCreateInput, CompetitionResultUncheckedCreateInput>
  }

  /**
   * CompetitionResult createMany
   */
  export type CompetitionResultCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CompetitionResults.
     */
    data: CompetitionResultCreateManyInput | CompetitionResultCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CompetitionResult createManyAndReturn
   */
  export type CompetitionResultCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompetitionResult
     */
    select?: CompetitionResultSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CompetitionResult
     */
    omit?: CompetitionResultOmit<ExtArgs> | null
    /**
     * The data used to create many CompetitionResults.
     */
    data: CompetitionResultCreateManyInput | CompetitionResultCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetitionResultIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CompetitionResult update
   */
  export type CompetitionResultUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompetitionResult
     */
    select?: CompetitionResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompetitionResult
     */
    omit?: CompetitionResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetitionResultInclude<ExtArgs> | null
    /**
     * The data needed to update a CompetitionResult.
     */
    data: XOR<CompetitionResultUpdateInput, CompetitionResultUncheckedUpdateInput>
    /**
     * Choose, which CompetitionResult to update.
     */
    where: CompetitionResultWhereUniqueInput
  }

  /**
   * CompetitionResult updateMany
   */
  export type CompetitionResultUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CompetitionResults.
     */
    data: XOR<CompetitionResultUpdateManyMutationInput, CompetitionResultUncheckedUpdateManyInput>
    /**
     * Filter which CompetitionResults to update
     */
    where?: CompetitionResultWhereInput
    /**
     * Limit how many CompetitionResults to update.
     */
    limit?: number
  }

  /**
   * CompetitionResult updateManyAndReturn
   */
  export type CompetitionResultUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompetitionResult
     */
    select?: CompetitionResultSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CompetitionResult
     */
    omit?: CompetitionResultOmit<ExtArgs> | null
    /**
     * The data used to update CompetitionResults.
     */
    data: XOR<CompetitionResultUpdateManyMutationInput, CompetitionResultUncheckedUpdateManyInput>
    /**
     * Filter which CompetitionResults to update
     */
    where?: CompetitionResultWhereInput
    /**
     * Limit how many CompetitionResults to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetitionResultIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CompetitionResult upsert
   */
  export type CompetitionResultUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompetitionResult
     */
    select?: CompetitionResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompetitionResult
     */
    omit?: CompetitionResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetitionResultInclude<ExtArgs> | null
    /**
     * The filter to search for the CompetitionResult to update in case it exists.
     */
    where: CompetitionResultWhereUniqueInput
    /**
     * In case the CompetitionResult found by the `where` argument doesn't exist, create a new CompetitionResult with this data.
     */
    create: XOR<CompetitionResultCreateInput, CompetitionResultUncheckedCreateInput>
    /**
     * In case the CompetitionResult was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CompetitionResultUpdateInput, CompetitionResultUncheckedUpdateInput>
  }

  /**
   * CompetitionResult delete
   */
  export type CompetitionResultDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompetitionResult
     */
    select?: CompetitionResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompetitionResult
     */
    omit?: CompetitionResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetitionResultInclude<ExtArgs> | null
    /**
     * Filter which CompetitionResult to delete.
     */
    where: CompetitionResultWhereUniqueInput
  }

  /**
   * CompetitionResult deleteMany
   */
  export type CompetitionResultDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CompetitionResults to delete
     */
    where?: CompetitionResultWhereInput
    /**
     * Limit how many CompetitionResults to delete.
     */
    limit?: number
  }

  /**
   * CompetitionResult without action
   */
  export type CompetitionResultDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompetitionResult
     */
    select?: CompetitionResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompetitionResult
     */
    omit?: CompetitionResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompetitionResultInclude<ExtArgs> | null
  }


  /**
   * Model TrainingLog
   */

  export type AggregateTrainingLog = {
    _count: TrainingLogCountAggregateOutputType | null
    _avg: TrainingLogAvgAggregateOutputType | null
    _sum: TrainingLogSumAggregateOutputType | null
    _min: TrainingLogMinAggregateOutputType | null
    _max: TrainingLogMaxAggregateOutputType | null
  }

  export type TrainingLogAvgAggregateOutputType = {
    id: number | null
    horseId: number | null
  }

  export type TrainingLogSumAggregateOutputType = {
    id: number | null
    horseId: number | null
  }

  export type TrainingLogMinAggregateOutputType = {
    id: number | null
    discipline: string | null
    trainedAt: Date | null
    horseId: number | null
  }

  export type TrainingLogMaxAggregateOutputType = {
    id: number | null
    discipline: string | null
    trainedAt: Date | null
    horseId: number | null
  }

  export type TrainingLogCountAggregateOutputType = {
    id: number
    discipline: number
    trainedAt: number
    horseId: number
    _all: number
  }


  export type TrainingLogAvgAggregateInputType = {
    id?: true
    horseId?: true
  }

  export type TrainingLogSumAggregateInputType = {
    id?: true
    horseId?: true
  }

  export type TrainingLogMinAggregateInputType = {
    id?: true
    discipline?: true
    trainedAt?: true
    horseId?: true
  }

  export type TrainingLogMaxAggregateInputType = {
    id?: true
    discipline?: true
    trainedAt?: true
    horseId?: true
  }

  export type TrainingLogCountAggregateInputType = {
    id?: true
    discipline?: true
    trainedAt?: true
    horseId?: true
    _all?: true
  }

  export type TrainingLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TrainingLog to aggregate.
     */
    where?: TrainingLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TrainingLogs to fetch.
     */
    orderBy?: TrainingLogOrderByWithRelationInput | TrainingLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TrainingLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TrainingLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TrainingLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TrainingLogs
    **/
    _count?: true | TrainingLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TrainingLogAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TrainingLogSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TrainingLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TrainingLogMaxAggregateInputType
  }

  export type GetTrainingLogAggregateType<T extends TrainingLogAggregateArgs> = {
        [P in keyof T & keyof AggregateTrainingLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTrainingLog[P]>
      : GetScalarType<T[P], AggregateTrainingLog[P]>
  }




  export type TrainingLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TrainingLogWhereInput
    orderBy?: TrainingLogOrderByWithAggregationInput | TrainingLogOrderByWithAggregationInput[]
    by: TrainingLogScalarFieldEnum[] | TrainingLogScalarFieldEnum
    having?: TrainingLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TrainingLogCountAggregateInputType | true
    _avg?: TrainingLogAvgAggregateInputType
    _sum?: TrainingLogSumAggregateInputType
    _min?: TrainingLogMinAggregateInputType
    _max?: TrainingLogMaxAggregateInputType
  }

  export type TrainingLogGroupByOutputType = {
    id: number
    discipline: string
    trainedAt: Date
    horseId: number
    _count: TrainingLogCountAggregateOutputType | null
    _avg: TrainingLogAvgAggregateOutputType | null
    _sum: TrainingLogSumAggregateOutputType | null
    _min: TrainingLogMinAggregateOutputType | null
    _max: TrainingLogMaxAggregateOutputType | null
  }

  type GetTrainingLogGroupByPayload<T extends TrainingLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TrainingLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TrainingLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TrainingLogGroupByOutputType[P]>
            : GetScalarType<T[P], TrainingLogGroupByOutputType[P]>
        }
      >
    >


  export type TrainingLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    discipline?: boolean
    trainedAt?: boolean
    horseId?: boolean
    horse?: boolean | HorseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["trainingLog"]>

  export type TrainingLogSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    discipline?: boolean
    trainedAt?: boolean
    horseId?: boolean
    horse?: boolean | HorseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["trainingLog"]>

  export type TrainingLogSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    discipline?: boolean
    trainedAt?: boolean
    horseId?: boolean
    horse?: boolean | HorseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["trainingLog"]>

  export type TrainingLogSelectScalar = {
    id?: boolean
    discipline?: boolean
    trainedAt?: boolean
    horseId?: boolean
  }

  export type TrainingLogOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "discipline" | "trainedAt" | "horseId", ExtArgs["result"]["trainingLog"]>
  export type TrainingLogInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horse?: boolean | HorseDefaultArgs<ExtArgs>
  }
  export type TrainingLogIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horse?: boolean | HorseDefaultArgs<ExtArgs>
  }
  export type TrainingLogIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horse?: boolean | HorseDefaultArgs<ExtArgs>
  }

  export type $TrainingLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TrainingLog"
    objects: {
      horse: Prisma.$HorsePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * Unique identifier for each training session
       */
      id: number
      /**
       * Training details
       */
      discipline: string
      trainedAt: Date
      /**
       * Foreign key
       */
      horseId: number
    }, ExtArgs["result"]["trainingLog"]>
    composites: {}
  }

  type TrainingLogGetPayload<S extends boolean | null | undefined | TrainingLogDefaultArgs> = $Result.GetResult<Prisma.$TrainingLogPayload, S>

  type TrainingLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TrainingLogFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TrainingLogCountAggregateInputType | true
    }

  export interface TrainingLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TrainingLog'], meta: { name: 'TrainingLog' } }
    /**
     * Find zero or one TrainingLog that matches the filter.
     * @param {TrainingLogFindUniqueArgs} args - Arguments to find a TrainingLog
     * @example
     * // Get one TrainingLog
     * const trainingLog = await prisma.trainingLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TrainingLogFindUniqueArgs>(args: SelectSubset<T, TrainingLogFindUniqueArgs<ExtArgs>>): Prisma__TrainingLogClient<$Result.GetResult<Prisma.$TrainingLogPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TrainingLog that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TrainingLogFindUniqueOrThrowArgs} args - Arguments to find a TrainingLog
     * @example
     * // Get one TrainingLog
     * const trainingLog = await prisma.trainingLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TrainingLogFindUniqueOrThrowArgs>(args: SelectSubset<T, TrainingLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TrainingLogClient<$Result.GetResult<Prisma.$TrainingLogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TrainingLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrainingLogFindFirstArgs} args - Arguments to find a TrainingLog
     * @example
     * // Get one TrainingLog
     * const trainingLog = await prisma.trainingLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TrainingLogFindFirstArgs>(args?: SelectSubset<T, TrainingLogFindFirstArgs<ExtArgs>>): Prisma__TrainingLogClient<$Result.GetResult<Prisma.$TrainingLogPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TrainingLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrainingLogFindFirstOrThrowArgs} args - Arguments to find a TrainingLog
     * @example
     * // Get one TrainingLog
     * const trainingLog = await prisma.trainingLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TrainingLogFindFirstOrThrowArgs>(args?: SelectSubset<T, TrainingLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__TrainingLogClient<$Result.GetResult<Prisma.$TrainingLogPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TrainingLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrainingLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TrainingLogs
     * const trainingLogs = await prisma.trainingLog.findMany()
     * 
     * // Get first 10 TrainingLogs
     * const trainingLogs = await prisma.trainingLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const trainingLogWithIdOnly = await prisma.trainingLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TrainingLogFindManyArgs>(args?: SelectSubset<T, TrainingLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrainingLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TrainingLog.
     * @param {TrainingLogCreateArgs} args - Arguments to create a TrainingLog.
     * @example
     * // Create one TrainingLog
     * const TrainingLog = await prisma.trainingLog.create({
     *   data: {
     *     // ... data to create a TrainingLog
     *   }
     * })
     * 
     */
    create<T extends TrainingLogCreateArgs>(args: SelectSubset<T, TrainingLogCreateArgs<ExtArgs>>): Prisma__TrainingLogClient<$Result.GetResult<Prisma.$TrainingLogPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TrainingLogs.
     * @param {TrainingLogCreateManyArgs} args - Arguments to create many TrainingLogs.
     * @example
     * // Create many TrainingLogs
     * const trainingLog = await prisma.trainingLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TrainingLogCreateManyArgs>(args?: SelectSubset<T, TrainingLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TrainingLogs and returns the data saved in the database.
     * @param {TrainingLogCreateManyAndReturnArgs} args - Arguments to create many TrainingLogs.
     * @example
     * // Create many TrainingLogs
     * const trainingLog = await prisma.trainingLog.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TrainingLogs and only return the `id`
     * const trainingLogWithIdOnly = await prisma.trainingLog.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TrainingLogCreateManyAndReturnArgs>(args?: SelectSubset<T, TrainingLogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrainingLogPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a TrainingLog.
     * @param {TrainingLogDeleteArgs} args - Arguments to delete one TrainingLog.
     * @example
     * // Delete one TrainingLog
     * const TrainingLog = await prisma.trainingLog.delete({
     *   where: {
     *     // ... filter to delete one TrainingLog
     *   }
     * })
     * 
     */
    delete<T extends TrainingLogDeleteArgs>(args: SelectSubset<T, TrainingLogDeleteArgs<ExtArgs>>): Prisma__TrainingLogClient<$Result.GetResult<Prisma.$TrainingLogPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TrainingLog.
     * @param {TrainingLogUpdateArgs} args - Arguments to update one TrainingLog.
     * @example
     * // Update one TrainingLog
     * const trainingLog = await prisma.trainingLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TrainingLogUpdateArgs>(args: SelectSubset<T, TrainingLogUpdateArgs<ExtArgs>>): Prisma__TrainingLogClient<$Result.GetResult<Prisma.$TrainingLogPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TrainingLogs.
     * @param {TrainingLogDeleteManyArgs} args - Arguments to filter TrainingLogs to delete.
     * @example
     * // Delete a few TrainingLogs
     * const { count } = await prisma.trainingLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TrainingLogDeleteManyArgs>(args?: SelectSubset<T, TrainingLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TrainingLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrainingLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TrainingLogs
     * const trainingLog = await prisma.trainingLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TrainingLogUpdateManyArgs>(args: SelectSubset<T, TrainingLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TrainingLogs and returns the data updated in the database.
     * @param {TrainingLogUpdateManyAndReturnArgs} args - Arguments to update many TrainingLogs.
     * @example
     * // Update many TrainingLogs
     * const trainingLog = await prisma.trainingLog.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more TrainingLogs and only return the `id`
     * const trainingLogWithIdOnly = await prisma.trainingLog.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TrainingLogUpdateManyAndReturnArgs>(args: SelectSubset<T, TrainingLogUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrainingLogPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one TrainingLog.
     * @param {TrainingLogUpsertArgs} args - Arguments to update or create a TrainingLog.
     * @example
     * // Update or create a TrainingLog
     * const trainingLog = await prisma.trainingLog.upsert({
     *   create: {
     *     // ... data to create a TrainingLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TrainingLog we want to update
     *   }
     * })
     */
    upsert<T extends TrainingLogUpsertArgs>(args: SelectSubset<T, TrainingLogUpsertArgs<ExtArgs>>): Prisma__TrainingLogClient<$Result.GetResult<Prisma.$TrainingLogPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TrainingLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrainingLogCountArgs} args - Arguments to filter TrainingLogs to count.
     * @example
     * // Count the number of TrainingLogs
     * const count = await prisma.trainingLog.count({
     *   where: {
     *     // ... the filter for the TrainingLogs we want to count
     *   }
     * })
    **/
    count<T extends TrainingLogCountArgs>(
      args?: Subset<T, TrainingLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TrainingLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TrainingLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrainingLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TrainingLogAggregateArgs>(args: Subset<T, TrainingLogAggregateArgs>): Prisma.PrismaPromise<GetTrainingLogAggregateType<T>>

    /**
     * Group by TrainingLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrainingLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TrainingLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TrainingLogGroupByArgs['orderBy'] }
        : { orderBy?: TrainingLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TrainingLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTrainingLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TrainingLog model
   */
  readonly fields: TrainingLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TrainingLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TrainingLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    horse<T extends HorseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, HorseDefaultArgs<ExtArgs>>): Prisma__HorseClient<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TrainingLog model
   */
  interface TrainingLogFieldRefs {
    readonly id: FieldRef<"TrainingLog", 'Int'>
    readonly discipline: FieldRef<"TrainingLog", 'String'>
    readonly trainedAt: FieldRef<"TrainingLog", 'DateTime'>
    readonly horseId: FieldRef<"TrainingLog", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * TrainingLog findUnique
   */
  export type TrainingLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrainingLog
     */
    select?: TrainingLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrainingLog
     */
    omit?: TrainingLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrainingLogInclude<ExtArgs> | null
    /**
     * Filter, which TrainingLog to fetch.
     */
    where: TrainingLogWhereUniqueInput
  }

  /**
   * TrainingLog findUniqueOrThrow
   */
  export type TrainingLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrainingLog
     */
    select?: TrainingLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrainingLog
     */
    omit?: TrainingLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrainingLogInclude<ExtArgs> | null
    /**
     * Filter, which TrainingLog to fetch.
     */
    where: TrainingLogWhereUniqueInput
  }

  /**
   * TrainingLog findFirst
   */
  export type TrainingLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrainingLog
     */
    select?: TrainingLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrainingLog
     */
    omit?: TrainingLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrainingLogInclude<ExtArgs> | null
    /**
     * Filter, which TrainingLog to fetch.
     */
    where?: TrainingLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TrainingLogs to fetch.
     */
    orderBy?: TrainingLogOrderByWithRelationInput | TrainingLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TrainingLogs.
     */
    cursor?: TrainingLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TrainingLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TrainingLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TrainingLogs.
     */
    distinct?: TrainingLogScalarFieldEnum | TrainingLogScalarFieldEnum[]
  }

  /**
   * TrainingLog findFirstOrThrow
   */
  export type TrainingLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrainingLog
     */
    select?: TrainingLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrainingLog
     */
    omit?: TrainingLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrainingLogInclude<ExtArgs> | null
    /**
     * Filter, which TrainingLog to fetch.
     */
    where?: TrainingLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TrainingLogs to fetch.
     */
    orderBy?: TrainingLogOrderByWithRelationInput | TrainingLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TrainingLogs.
     */
    cursor?: TrainingLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TrainingLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TrainingLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TrainingLogs.
     */
    distinct?: TrainingLogScalarFieldEnum | TrainingLogScalarFieldEnum[]
  }

  /**
   * TrainingLog findMany
   */
  export type TrainingLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrainingLog
     */
    select?: TrainingLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrainingLog
     */
    omit?: TrainingLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrainingLogInclude<ExtArgs> | null
    /**
     * Filter, which TrainingLogs to fetch.
     */
    where?: TrainingLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TrainingLogs to fetch.
     */
    orderBy?: TrainingLogOrderByWithRelationInput | TrainingLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TrainingLogs.
     */
    cursor?: TrainingLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TrainingLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TrainingLogs.
     */
    skip?: number
    distinct?: TrainingLogScalarFieldEnum | TrainingLogScalarFieldEnum[]
  }

  /**
   * TrainingLog create
   */
  export type TrainingLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrainingLog
     */
    select?: TrainingLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrainingLog
     */
    omit?: TrainingLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrainingLogInclude<ExtArgs> | null
    /**
     * The data needed to create a TrainingLog.
     */
    data: XOR<TrainingLogCreateInput, TrainingLogUncheckedCreateInput>
  }

  /**
   * TrainingLog createMany
   */
  export type TrainingLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TrainingLogs.
     */
    data: TrainingLogCreateManyInput | TrainingLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TrainingLog createManyAndReturn
   */
  export type TrainingLogCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrainingLog
     */
    select?: TrainingLogSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TrainingLog
     */
    omit?: TrainingLogOmit<ExtArgs> | null
    /**
     * The data used to create many TrainingLogs.
     */
    data: TrainingLogCreateManyInput | TrainingLogCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrainingLogIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * TrainingLog update
   */
  export type TrainingLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrainingLog
     */
    select?: TrainingLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrainingLog
     */
    omit?: TrainingLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrainingLogInclude<ExtArgs> | null
    /**
     * The data needed to update a TrainingLog.
     */
    data: XOR<TrainingLogUpdateInput, TrainingLogUncheckedUpdateInput>
    /**
     * Choose, which TrainingLog to update.
     */
    where: TrainingLogWhereUniqueInput
  }

  /**
   * TrainingLog updateMany
   */
  export type TrainingLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TrainingLogs.
     */
    data: XOR<TrainingLogUpdateManyMutationInput, TrainingLogUncheckedUpdateManyInput>
    /**
     * Filter which TrainingLogs to update
     */
    where?: TrainingLogWhereInput
    /**
     * Limit how many TrainingLogs to update.
     */
    limit?: number
  }

  /**
   * TrainingLog updateManyAndReturn
   */
  export type TrainingLogUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrainingLog
     */
    select?: TrainingLogSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TrainingLog
     */
    omit?: TrainingLogOmit<ExtArgs> | null
    /**
     * The data used to update TrainingLogs.
     */
    data: XOR<TrainingLogUpdateManyMutationInput, TrainingLogUncheckedUpdateManyInput>
    /**
     * Filter which TrainingLogs to update
     */
    where?: TrainingLogWhereInput
    /**
     * Limit how many TrainingLogs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrainingLogIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * TrainingLog upsert
   */
  export type TrainingLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrainingLog
     */
    select?: TrainingLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrainingLog
     */
    omit?: TrainingLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrainingLogInclude<ExtArgs> | null
    /**
     * The filter to search for the TrainingLog to update in case it exists.
     */
    where: TrainingLogWhereUniqueInput
    /**
     * In case the TrainingLog found by the `where` argument doesn't exist, create a new TrainingLog with this data.
     */
    create: XOR<TrainingLogCreateInput, TrainingLogUncheckedCreateInput>
    /**
     * In case the TrainingLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TrainingLogUpdateInput, TrainingLogUncheckedUpdateInput>
  }

  /**
   * TrainingLog delete
   */
  export type TrainingLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrainingLog
     */
    select?: TrainingLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrainingLog
     */
    omit?: TrainingLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrainingLogInclude<ExtArgs> | null
    /**
     * Filter which TrainingLog to delete.
     */
    where: TrainingLogWhereUniqueInput
  }

  /**
   * TrainingLog deleteMany
   */
  export type TrainingLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TrainingLogs to delete
     */
    where?: TrainingLogWhereInput
    /**
     * Limit how many TrainingLogs to delete.
     */
    limit?: number
  }

  /**
   * TrainingLog without action
   */
  export type TrainingLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrainingLog
     */
    select?: TrainingLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrainingLog
     */
    omit?: TrainingLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrainingLogInclude<ExtArgs> | null
  }


  /**
   * Model FoalDevelopment
   */

  export type AggregateFoalDevelopment = {
    _count: FoalDevelopmentCountAggregateOutputType | null
    _avg: FoalDevelopmentAvgAggregateOutputType | null
    _sum: FoalDevelopmentSumAggregateOutputType | null
    _min: FoalDevelopmentMinAggregateOutputType | null
    _max: FoalDevelopmentMaxAggregateOutputType | null
  }

  export type FoalDevelopmentAvgAggregateOutputType = {
    id: number | null
    currentDay: number | null
    bondingLevel: number | null
    stressLevel: number | null
    foalId: number | null
  }

  export type FoalDevelopmentSumAggregateOutputType = {
    id: number | null
    currentDay: number | null
    bondingLevel: number | null
    stressLevel: number | null
    foalId: number | null
  }

  export type FoalDevelopmentMinAggregateOutputType = {
    id: number | null
    currentDay: number | null
    bondingLevel: number | null
    stressLevel: number | null
    foalId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FoalDevelopmentMaxAggregateOutputType = {
    id: number | null
    currentDay: number | null
    bondingLevel: number | null
    stressLevel: number | null
    foalId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FoalDevelopmentCountAggregateOutputType = {
    id: number
    currentDay: number
    bondingLevel: number
    stressLevel: number
    completedActivities: number
    foalId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FoalDevelopmentAvgAggregateInputType = {
    id?: true
    currentDay?: true
    bondingLevel?: true
    stressLevel?: true
    foalId?: true
  }

  export type FoalDevelopmentSumAggregateInputType = {
    id?: true
    currentDay?: true
    bondingLevel?: true
    stressLevel?: true
    foalId?: true
  }

  export type FoalDevelopmentMinAggregateInputType = {
    id?: true
    currentDay?: true
    bondingLevel?: true
    stressLevel?: true
    foalId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FoalDevelopmentMaxAggregateInputType = {
    id?: true
    currentDay?: true
    bondingLevel?: true
    stressLevel?: true
    foalId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FoalDevelopmentCountAggregateInputType = {
    id?: true
    currentDay?: true
    bondingLevel?: true
    stressLevel?: true
    completedActivities?: true
    foalId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FoalDevelopmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FoalDevelopment to aggregate.
     */
    where?: FoalDevelopmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FoalDevelopments to fetch.
     */
    orderBy?: FoalDevelopmentOrderByWithRelationInput | FoalDevelopmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FoalDevelopmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FoalDevelopments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FoalDevelopments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FoalDevelopments
    **/
    _count?: true | FoalDevelopmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FoalDevelopmentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FoalDevelopmentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FoalDevelopmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FoalDevelopmentMaxAggregateInputType
  }

  export type GetFoalDevelopmentAggregateType<T extends FoalDevelopmentAggregateArgs> = {
        [P in keyof T & keyof AggregateFoalDevelopment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFoalDevelopment[P]>
      : GetScalarType<T[P], AggregateFoalDevelopment[P]>
  }




  export type FoalDevelopmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FoalDevelopmentWhereInput
    orderBy?: FoalDevelopmentOrderByWithAggregationInput | FoalDevelopmentOrderByWithAggregationInput[]
    by: FoalDevelopmentScalarFieldEnum[] | FoalDevelopmentScalarFieldEnum
    having?: FoalDevelopmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FoalDevelopmentCountAggregateInputType | true
    _avg?: FoalDevelopmentAvgAggregateInputType
    _sum?: FoalDevelopmentSumAggregateInputType
    _min?: FoalDevelopmentMinAggregateInputType
    _max?: FoalDevelopmentMaxAggregateInputType
  }

  export type FoalDevelopmentGroupByOutputType = {
    id: number
    currentDay: number
    bondingLevel: number
    stressLevel: number
    completedActivities: JsonValue
    foalId: number
    createdAt: Date
    updatedAt: Date
    _count: FoalDevelopmentCountAggregateOutputType | null
    _avg: FoalDevelopmentAvgAggregateOutputType | null
    _sum: FoalDevelopmentSumAggregateOutputType | null
    _min: FoalDevelopmentMinAggregateOutputType | null
    _max: FoalDevelopmentMaxAggregateOutputType | null
  }

  type GetFoalDevelopmentGroupByPayload<T extends FoalDevelopmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FoalDevelopmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FoalDevelopmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FoalDevelopmentGroupByOutputType[P]>
            : GetScalarType<T[P], FoalDevelopmentGroupByOutputType[P]>
        }
      >
    >


  export type FoalDevelopmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    currentDay?: boolean
    bondingLevel?: boolean
    stressLevel?: boolean
    completedActivities?: boolean
    foalId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    foal?: boolean | HorseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["foalDevelopment"]>

  export type FoalDevelopmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    currentDay?: boolean
    bondingLevel?: boolean
    stressLevel?: boolean
    completedActivities?: boolean
    foalId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    foal?: boolean | HorseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["foalDevelopment"]>

  export type FoalDevelopmentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    currentDay?: boolean
    bondingLevel?: boolean
    stressLevel?: boolean
    completedActivities?: boolean
    foalId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    foal?: boolean | HorseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["foalDevelopment"]>

  export type FoalDevelopmentSelectScalar = {
    id?: boolean
    currentDay?: boolean
    bondingLevel?: boolean
    stressLevel?: boolean
    completedActivities?: boolean
    foalId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FoalDevelopmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "currentDay" | "bondingLevel" | "stressLevel" | "completedActivities" | "foalId" | "createdAt" | "updatedAt", ExtArgs["result"]["foalDevelopment"]>
  export type FoalDevelopmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    foal?: boolean | HorseDefaultArgs<ExtArgs>
  }
  export type FoalDevelopmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    foal?: boolean | HorseDefaultArgs<ExtArgs>
  }
  export type FoalDevelopmentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    foal?: boolean | HorseDefaultArgs<ExtArgs>
  }

  export type $FoalDevelopmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FoalDevelopment"
    objects: {
      foal: Prisma.$HorsePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * Unique identifier for each foal development record
       */
      id: number
      /**
       * Development progress
       */
      currentDay: number
      bondingLevel: number
      stressLevel: number
      completedActivities: Prisma.JsonValue
      /**
       * Foreign key
       */
      foalId: number
      /**
       * Timestamps
       */
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["foalDevelopment"]>
    composites: {}
  }

  type FoalDevelopmentGetPayload<S extends boolean | null | undefined | FoalDevelopmentDefaultArgs> = $Result.GetResult<Prisma.$FoalDevelopmentPayload, S>

  type FoalDevelopmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FoalDevelopmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FoalDevelopmentCountAggregateInputType | true
    }

  export interface FoalDevelopmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FoalDevelopment'], meta: { name: 'FoalDevelopment' } }
    /**
     * Find zero or one FoalDevelopment that matches the filter.
     * @param {FoalDevelopmentFindUniqueArgs} args - Arguments to find a FoalDevelopment
     * @example
     * // Get one FoalDevelopment
     * const foalDevelopment = await prisma.foalDevelopment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FoalDevelopmentFindUniqueArgs>(args: SelectSubset<T, FoalDevelopmentFindUniqueArgs<ExtArgs>>): Prisma__FoalDevelopmentClient<$Result.GetResult<Prisma.$FoalDevelopmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FoalDevelopment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FoalDevelopmentFindUniqueOrThrowArgs} args - Arguments to find a FoalDevelopment
     * @example
     * // Get one FoalDevelopment
     * const foalDevelopment = await prisma.foalDevelopment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FoalDevelopmentFindUniqueOrThrowArgs>(args: SelectSubset<T, FoalDevelopmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FoalDevelopmentClient<$Result.GetResult<Prisma.$FoalDevelopmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FoalDevelopment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalDevelopmentFindFirstArgs} args - Arguments to find a FoalDevelopment
     * @example
     * // Get one FoalDevelopment
     * const foalDevelopment = await prisma.foalDevelopment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FoalDevelopmentFindFirstArgs>(args?: SelectSubset<T, FoalDevelopmentFindFirstArgs<ExtArgs>>): Prisma__FoalDevelopmentClient<$Result.GetResult<Prisma.$FoalDevelopmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FoalDevelopment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalDevelopmentFindFirstOrThrowArgs} args - Arguments to find a FoalDevelopment
     * @example
     * // Get one FoalDevelopment
     * const foalDevelopment = await prisma.foalDevelopment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FoalDevelopmentFindFirstOrThrowArgs>(args?: SelectSubset<T, FoalDevelopmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__FoalDevelopmentClient<$Result.GetResult<Prisma.$FoalDevelopmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FoalDevelopments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalDevelopmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FoalDevelopments
     * const foalDevelopments = await prisma.foalDevelopment.findMany()
     * 
     * // Get first 10 FoalDevelopments
     * const foalDevelopments = await prisma.foalDevelopment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const foalDevelopmentWithIdOnly = await prisma.foalDevelopment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FoalDevelopmentFindManyArgs>(args?: SelectSubset<T, FoalDevelopmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FoalDevelopmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FoalDevelopment.
     * @param {FoalDevelopmentCreateArgs} args - Arguments to create a FoalDevelopment.
     * @example
     * // Create one FoalDevelopment
     * const FoalDevelopment = await prisma.foalDevelopment.create({
     *   data: {
     *     // ... data to create a FoalDevelopment
     *   }
     * })
     * 
     */
    create<T extends FoalDevelopmentCreateArgs>(args: SelectSubset<T, FoalDevelopmentCreateArgs<ExtArgs>>): Prisma__FoalDevelopmentClient<$Result.GetResult<Prisma.$FoalDevelopmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FoalDevelopments.
     * @param {FoalDevelopmentCreateManyArgs} args - Arguments to create many FoalDevelopments.
     * @example
     * // Create many FoalDevelopments
     * const foalDevelopment = await prisma.foalDevelopment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FoalDevelopmentCreateManyArgs>(args?: SelectSubset<T, FoalDevelopmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FoalDevelopments and returns the data saved in the database.
     * @param {FoalDevelopmentCreateManyAndReturnArgs} args - Arguments to create many FoalDevelopments.
     * @example
     * // Create many FoalDevelopments
     * const foalDevelopment = await prisma.foalDevelopment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FoalDevelopments and only return the `id`
     * const foalDevelopmentWithIdOnly = await prisma.foalDevelopment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FoalDevelopmentCreateManyAndReturnArgs>(args?: SelectSubset<T, FoalDevelopmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FoalDevelopmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a FoalDevelopment.
     * @param {FoalDevelopmentDeleteArgs} args - Arguments to delete one FoalDevelopment.
     * @example
     * // Delete one FoalDevelopment
     * const FoalDevelopment = await prisma.foalDevelopment.delete({
     *   where: {
     *     // ... filter to delete one FoalDevelopment
     *   }
     * })
     * 
     */
    delete<T extends FoalDevelopmentDeleteArgs>(args: SelectSubset<T, FoalDevelopmentDeleteArgs<ExtArgs>>): Prisma__FoalDevelopmentClient<$Result.GetResult<Prisma.$FoalDevelopmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FoalDevelopment.
     * @param {FoalDevelopmentUpdateArgs} args - Arguments to update one FoalDevelopment.
     * @example
     * // Update one FoalDevelopment
     * const foalDevelopment = await prisma.foalDevelopment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FoalDevelopmentUpdateArgs>(args: SelectSubset<T, FoalDevelopmentUpdateArgs<ExtArgs>>): Prisma__FoalDevelopmentClient<$Result.GetResult<Prisma.$FoalDevelopmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FoalDevelopments.
     * @param {FoalDevelopmentDeleteManyArgs} args - Arguments to filter FoalDevelopments to delete.
     * @example
     * // Delete a few FoalDevelopments
     * const { count } = await prisma.foalDevelopment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FoalDevelopmentDeleteManyArgs>(args?: SelectSubset<T, FoalDevelopmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FoalDevelopments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalDevelopmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FoalDevelopments
     * const foalDevelopment = await prisma.foalDevelopment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FoalDevelopmentUpdateManyArgs>(args: SelectSubset<T, FoalDevelopmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FoalDevelopments and returns the data updated in the database.
     * @param {FoalDevelopmentUpdateManyAndReturnArgs} args - Arguments to update many FoalDevelopments.
     * @example
     * // Update many FoalDevelopments
     * const foalDevelopment = await prisma.foalDevelopment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FoalDevelopments and only return the `id`
     * const foalDevelopmentWithIdOnly = await prisma.foalDevelopment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FoalDevelopmentUpdateManyAndReturnArgs>(args: SelectSubset<T, FoalDevelopmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FoalDevelopmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one FoalDevelopment.
     * @param {FoalDevelopmentUpsertArgs} args - Arguments to update or create a FoalDevelopment.
     * @example
     * // Update or create a FoalDevelopment
     * const foalDevelopment = await prisma.foalDevelopment.upsert({
     *   create: {
     *     // ... data to create a FoalDevelopment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FoalDevelopment we want to update
     *   }
     * })
     */
    upsert<T extends FoalDevelopmentUpsertArgs>(args: SelectSubset<T, FoalDevelopmentUpsertArgs<ExtArgs>>): Prisma__FoalDevelopmentClient<$Result.GetResult<Prisma.$FoalDevelopmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FoalDevelopments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalDevelopmentCountArgs} args - Arguments to filter FoalDevelopments to count.
     * @example
     * // Count the number of FoalDevelopments
     * const count = await prisma.foalDevelopment.count({
     *   where: {
     *     // ... the filter for the FoalDevelopments we want to count
     *   }
     * })
    **/
    count<T extends FoalDevelopmentCountArgs>(
      args?: Subset<T, FoalDevelopmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FoalDevelopmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FoalDevelopment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalDevelopmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FoalDevelopmentAggregateArgs>(args: Subset<T, FoalDevelopmentAggregateArgs>): Prisma.PrismaPromise<GetFoalDevelopmentAggregateType<T>>

    /**
     * Group by FoalDevelopment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalDevelopmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FoalDevelopmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FoalDevelopmentGroupByArgs['orderBy'] }
        : { orderBy?: FoalDevelopmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FoalDevelopmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFoalDevelopmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FoalDevelopment model
   */
  readonly fields: FoalDevelopmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FoalDevelopment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FoalDevelopmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    foal<T extends HorseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, HorseDefaultArgs<ExtArgs>>): Prisma__HorseClient<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FoalDevelopment model
   */
  interface FoalDevelopmentFieldRefs {
    readonly id: FieldRef<"FoalDevelopment", 'Int'>
    readonly currentDay: FieldRef<"FoalDevelopment", 'Int'>
    readonly bondingLevel: FieldRef<"FoalDevelopment", 'Int'>
    readonly stressLevel: FieldRef<"FoalDevelopment", 'Int'>
    readonly completedActivities: FieldRef<"FoalDevelopment", 'Json'>
    readonly foalId: FieldRef<"FoalDevelopment", 'Int'>
    readonly createdAt: FieldRef<"FoalDevelopment", 'DateTime'>
    readonly updatedAt: FieldRef<"FoalDevelopment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FoalDevelopment findUnique
   */
  export type FoalDevelopmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalDevelopment
     */
    select?: FoalDevelopmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalDevelopment
     */
    omit?: FoalDevelopmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalDevelopmentInclude<ExtArgs> | null
    /**
     * Filter, which FoalDevelopment to fetch.
     */
    where: FoalDevelopmentWhereUniqueInput
  }

  /**
   * FoalDevelopment findUniqueOrThrow
   */
  export type FoalDevelopmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalDevelopment
     */
    select?: FoalDevelopmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalDevelopment
     */
    omit?: FoalDevelopmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalDevelopmentInclude<ExtArgs> | null
    /**
     * Filter, which FoalDevelopment to fetch.
     */
    where: FoalDevelopmentWhereUniqueInput
  }

  /**
   * FoalDevelopment findFirst
   */
  export type FoalDevelopmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalDevelopment
     */
    select?: FoalDevelopmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalDevelopment
     */
    omit?: FoalDevelopmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalDevelopmentInclude<ExtArgs> | null
    /**
     * Filter, which FoalDevelopment to fetch.
     */
    where?: FoalDevelopmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FoalDevelopments to fetch.
     */
    orderBy?: FoalDevelopmentOrderByWithRelationInput | FoalDevelopmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FoalDevelopments.
     */
    cursor?: FoalDevelopmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FoalDevelopments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FoalDevelopments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FoalDevelopments.
     */
    distinct?: FoalDevelopmentScalarFieldEnum | FoalDevelopmentScalarFieldEnum[]
  }

  /**
   * FoalDevelopment findFirstOrThrow
   */
  export type FoalDevelopmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalDevelopment
     */
    select?: FoalDevelopmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalDevelopment
     */
    omit?: FoalDevelopmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalDevelopmentInclude<ExtArgs> | null
    /**
     * Filter, which FoalDevelopment to fetch.
     */
    where?: FoalDevelopmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FoalDevelopments to fetch.
     */
    orderBy?: FoalDevelopmentOrderByWithRelationInput | FoalDevelopmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FoalDevelopments.
     */
    cursor?: FoalDevelopmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FoalDevelopments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FoalDevelopments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FoalDevelopments.
     */
    distinct?: FoalDevelopmentScalarFieldEnum | FoalDevelopmentScalarFieldEnum[]
  }

  /**
   * FoalDevelopment findMany
   */
  export type FoalDevelopmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalDevelopment
     */
    select?: FoalDevelopmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalDevelopment
     */
    omit?: FoalDevelopmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalDevelopmentInclude<ExtArgs> | null
    /**
     * Filter, which FoalDevelopments to fetch.
     */
    where?: FoalDevelopmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FoalDevelopments to fetch.
     */
    orderBy?: FoalDevelopmentOrderByWithRelationInput | FoalDevelopmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FoalDevelopments.
     */
    cursor?: FoalDevelopmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FoalDevelopments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FoalDevelopments.
     */
    skip?: number
    distinct?: FoalDevelopmentScalarFieldEnum | FoalDevelopmentScalarFieldEnum[]
  }

  /**
   * FoalDevelopment create
   */
  export type FoalDevelopmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalDevelopment
     */
    select?: FoalDevelopmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalDevelopment
     */
    omit?: FoalDevelopmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalDevelopmentInclude<ExtArgs> | null
    /**
     * The data needed to create a FoalDevelopment.
     */
    data: XOR<FoalDevelopmentCreateInput, FoalDevelopmentUncheckedCreateInput>
  }

  /**
   * FoalDevelopment createMany
   */
  export type FoalDevelopmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FoalDevelopments.
     */
    data: FoalDevelopmentCreateManyInput | FoalDevelopmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FoalDevelopment createManyAndReturn
   */
  export type FoalDevelopmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalDevelopment
     */
    select?: FoalDevelopmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FoalDevelopment
     */
    omit?: FoalDevelopmentOmit<ExtArgs> | null
    /**
     * The data used to create many FoalDevelopments.
     */
    data: FoalDevelopmentCreateManyInput | FoalDevelopmentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalDevelopmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FoalDevelopment update
   */
  export type FoalDevelopmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalDevelopment
     */
    select?: FoalDevelopmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalDevelopment
     */
    omit?: FoalDevelopmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalDevelopmentInclude<ExtArgs> | null
    /**
     * The data needed to update a FoalDevelopment.
     */
    data: XOR<FoalDevelopmentUpdateInput, FoalDevelopmentUncheckedUpdateInput>
    /**
     * Choose, which FoalDevelopment to update.
     */
    where: FoalDevelopmentWhereUniqueInput
  }

  /**
   * FoalDevelopment updateMany
   */
  export type FoalDevelopmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FoalDevelopments.
     */
    data: XOR<FoalDevelopmentUpdateManyMutationInput, FoalDevelopmentUncheckedUpdateManyInput>
    /**
     * Filter which FoalDevelopments to update
     */
    where?: FoalDevelopmentWhereInput
    /**
     * Limit how many FoalDevelopments to update.
     */
    limit?: number
  }

  /**
   * FoalDevelopment updateManyAndReturn
   */
  export type FoalDevelopmentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalDevelopment
     */
    select?: FoalDevelopmentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FoalDevelopment
     */
    omit?: FoalDevelopmentOmit<ExtArgs> | null
    /**
     * The data used to update FoalDevelopments.
     */
    data: XOR<FoalDevelopmentUpdateManyMutationInput, FoalDevelopmentUncheckedUpdateManyInput>
    /**
     * Filter which FoalDevelopments to update
     */
    where?: FoalDevelopmentWhereInput
    /**
     * Limit how many FoalDevelopments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalDevelopmentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FoalDevelopment upsert
   */
  export type FoalDevelopmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalDevelopment
     */
    select?: FoalDevelopmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalDevelopment
     */
    omit?: FoalDevelopmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalDevelopmentInclude<ExtArgs> | null
    /**
     * The filter to search for the FoalDevelopment to update in case it exists.
     */
    where: FoalDevelopmentWhereUniqueInput
    /**
     * In case the FoalDevelopment found by the `where` argument doesn't exist, create a new FoalDevelopment with this data.
     */
    create: XOR<FoalDevelopmentCreateInput, FoalDevelopmentUncheckedCreateInput>
    /**
     * In case the FoalDevelopment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FoalDevelopmentUpdateInput, FoalDevelopmentUncheckedUpdateInput>
  }

  /**
   * FoalDevelopment delete
   */
  export type FoalDevelopmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalDevelopment
     */
    select?: FoalDevelopmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalDevelopment
     */
    omit?: FoalDevelopmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalDevelopmentInclude<ExtArgs> | null
    /**
     * Filter which FoalDevelopment to delete.
     */
    where: FoalDevelopmentWhereUniqueInput
  }

  /**
   * FoalDevelopment deleteMany
   */
  export type FoalDevelopmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FoalDevelopments to delete
     */
    where?: FoalDevelopmentWhereInput
    /**
     * Limit how many FoalDevelopments to delete.
     */
    limit?: number
  }

  /**
   * FoalDevelopment without action
   */
  export type FoalDevelopmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalDevelopment
     */
    select?: FoalDevelopmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalDevelopment
     */
    omit?: FoalDevelopmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalDevelopmentInclude<ExtArgs> | null
  }


  /**
   * Model FoalActivity
   */

  export type AggregateFoalActivity = {
    _count: FoalActivityCountAggregateOutputType | null
    _avg: FoalActivityAvgAggregateOutputType | null
    _sum: FoalActivitySumAggregateOutputType | null
    _min: FoalActivityMinAggregateOutputType | null
    _max: FoalActivityMaxAggregateOutputType | null
  }

  export type FoalActivityAvgAggregateOutputType = {
    id: number | null
    day: number | null
    bondingChange: number | null
    stressChange: number | null
    foalId: number | null
  }

  export type FoalActivitySumAggregateOutputType = {
    id: number | null
    day: number | null
    bondingChange: number | null
    stressChange: number | null
    foalId: number | null
  }

  export type FoalActivityMinAggregateOutputType = {
    id: number | null
    day: number | null
    activityType: string | null
    outcome: string | null
    bondingChange: number | null
    stressChange: number | null
    description: string | null
    foalId: number | null
    createdAt: Date | null
  }

  export type FoalActivityMaxAggregateOutputType = {
    id: number | null
    day: number | null
    activityType: string | null
    outcome: string | null
    bondingChange: number | null
    stressChange: number | null
    description: string | null
    foalId: number | null
    createdAt: Date | null
  }

  export type FoalActivityCountAggregateOutputType = {
    id: number
    day: number
    activityType: number
    outcome: number
    bondingChange: number
    stressChange: number
    description: number
    foalId: number
    createdAt: number
    _all: number
  }


  export type FoalActivityAvgAggregateInputType = {
    id?: true
    day?: true
    bondingChange?: true
    stressChange?: true
    foalId?: true
  }

  export type FoalActivitySumAggregateInputType = {
    id?: true
    day?: true
    bondingChange?: true
    stressChange?: true
    foalId?: true
  }

  export type FoalActivityMinAggregateInputType = {
    id?: true
    day?: true
    activityType?: true
    outcome?: true
    bondingChange?: true
    stressChange?: true
    description?: true
    foalId?: true
    createdAt?: true
  }

  export type FoalActivityMaxAggregateInputType = {
    id?: true
    day?: true
    activityType?: true
    outcome?: true
    bondingChange?: true
    stressChange?: true
    description?: true
    foalId?: true
    createdAt?: true
  }

  export type FoalActivityCountAggregateInputType = {
    id?: true
    day?: true
    activityType?: true
    outcome?: true
    bondingChange?: true
    stressChange?: true
    description?: true
    foalId?: true
    createdAt?: true
    _all?: true
  }

  export type FoalActivityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FoalActivity to aggregate.
     */
    where?: FoalActivityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FoalActivities to fetch.
     */
    orderBy?: FoalActivityOrderByWithRelationInput | FoalActivityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FoalActivityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FoalActivities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FoalActivities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FoalActivities
    **/
    _count?: true | FoalActivityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FoalActivityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FoalActivitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FoalActivityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FoalActivityMaxAggregateInputType
  }

  export type GetFoalActivityAggregateType<T extends FoalActivityAggregateArgs> = {
        [P in keyof T & keyof AggregateFoalActivity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFoalActivity[P]>
      : GetScalarType<T[P], AggregateFoalActivity[P]>
  }




  export type FoalActivityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FoalActivityWhereInput
    orderBy?: FoalActivityOrderByWithAggregationInput | FoalActivityOrderByWithAggregationInput[]
    by: FoalActivityScalarFieldEnum[] | FoalActivityScalarFieldEnum
    having?: FoalActivityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FoalActivityCountAggregateInputType | true
    _avg?: FoalActivityAvgAggregateInputType
    _sum?: FoalActivitySumAggregateInputType
    _min?: FoalActivityMinAggregateInputType
    _max?: FoalActivityMaxAggregateInputType
  }

  export type FoalActivityGroupByOutputType = {
    id: number
    day: number
    activityType: string
    outcome: string
    bondingChange: number
    stressChange: number
    description: string
    foalId: number
    createdAt: Date
    _count: FoalActivityCountAggregateOutputType | null
    _avg: FoalActivityAvgAggregateOutputType | null
    _sum: FoalActivitySumAggregateOutputType | null
    _min: FoalActivityMinAggregateOutputType | null
    _max: FoalActivityMaxAggregateOutputType | null
  }

  type GetFoalActivityGroupByPayload<T extends FoalActivityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FoalActivityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FoalActivityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FoalActivityGroupByOutputType[P]>
            : GetScalarType<T[P], FoalActivityGroupByOutputType[P]>
        }
      >
    >


  export type FoalActivitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    day?: boolean
    activityType?: boolean
    outcome?: boolean
    bondingChange?: boolean
    stressChange?: boolean
    description?: boolean
    foalId?: boolean
    createdAt?: boolean
    foal?: boolean | HorseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["foalActivity"]>

  export type FoalActivitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    day?: boolean
    activityType?: boolean
    outcome?: boolean
    bondingChange?: boolean
    stressChange?: boolean
    description?: boolean
    foalId?: boolean
    createdAt?: boolean
    foal?: boolean | HorseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["foalActivity"]>

  export type FoalActivitySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    day?: boolean
    activityType?: boolean
    outcome?: boolean
    bondingChange?: boolean
    stressChange?: boolean
    description?: boolean
    foalId?: boolean
    createdAt?: boolean
    foal?: boolean | HorseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["foalActivity"]>

  export type FoalActivitySelectScalar = {
    id?: boolean
    day?: boolean
    activityType?: boolean
    outcome?: boolean
    bondingChange?: boolean
    stressChange?: boolean
    description?: boolean
    foalId?: boolean
    createdAt?: boolean
  }

  export type FoalActivityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "day" | "activityType" | "outcome" | "bondingChange" | "stressChange" | "description" | "foalId" | "createdAt", ExtArgs["result"]["foalActivity"]>
  export type FoalActivityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    foal?: boolean | HorseDefaultArgs<ExtArgs>
  }
  export type FoalActivityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    foal?: boolean | HorseDefaultArgs<ExtArgs>
  }
  export type FoalActivityIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    foal?: boolean | HorseDefaultArgs<ExtArgs>
  }

  export type $FoalActivityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FoalActivity"
    objects: {
      foal: Prisma.$HorsePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * Unique identifier for each foal activity
       */
      id: number
      /**
       * Activity details
       */
      day: number
      activityType: string
      outcome: string
      bondingChange: number
      stressChange: number
      description: string
      /**
       * Foreign key
       */
      foalId: number
      /**
       * Timestamps
       */
      createdAt: Date
    }, ExtArgs["result"]["foalActivity"]>
    composites: {}
  }

  type FoalActivityGetPayload<S extends boolean | null | undefined | FoalActivityDefaultArgs> = $Result.GetResult<Prisma.$FoalActivityPayload, S>

  type FoalActivityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FoalActivityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FoalActivityCountAggregateInputType | true
    }

  export interface FoalActivityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FoalActivity'], meta: { name: 'FoalActivity' } }
    /**
     * Find zero or one FoalActivity that matches the filter.
     * @param {FoalActivityFindUniqueArgs} args - Arguments to find a FoalActivity
     * @example
     * // Get one FoalActivity
     * const foalActivity = await prisma.foalActivity.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FoalActivityFindUniqueArgs>(args: SelectSubset<T, FoalActivityFindUniqueArgs<ExtArgs>>): Prisma__FoalActivityClient<$Result.GetResult<Prisma.$FoalActivityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FoalActivity that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FoalActivityFindUniqueOrThrowArgs} args - Arguments to find a FoalActivity
     * @example
     * // Get one FoalActivity
     * const foalActivity = await prisma.foalActivity.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FoalActivityFindUniqueOrThrowArgs>(args: SelectSubset<T, FoalActivityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FoalActivityClient<$Result.GetResult<Prisma.$FoalActivityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FoalActivity that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalActivityFindFirstArgs} args - Arguments to find a FoalActivity
     * @example
     * // Get one FoalActivity
     * const foalActivity = await prisma.foalActivity.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FoalActivityFindFirstArgs>(args?: SelectSubset<T, FoalActivityFindFirstArgs<ExtArgs>>): Prisma__FoalActivityClient<$Result.GetResult<Prisma.$FoalActivityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FoalActivity that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalActivityFindFirstOrThrowArgs} args - Arguments to find a FoalActivity
     * @example
     * // Get one FoalActivity
     * const foalActivity = await prisma.foalActivity.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FoalActivityFindFirstOrThrowArgs>(args?: SelectSubset<T, FoalActivityFindFirstOrThrowArgs<ExtArgs>>): Prisma__FoalActivityClient<$Result.GetResult<Prisma.$FoalActivityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FoalActivities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalActivityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FoalActivities
     * const foalActivities = await prisma.foalActivity.findMany()
     * 
     * // Get first 10 FoalActivities
     * const foalActivities = await prisma.foalActivity.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const foalActivityWithIdOnly = await prisma.foalActivity.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FoalActivityFindManyArgs>(args?: SelectSubset<T, FoalActivityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FoalActivityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FoalActivity.
     * @param {FoalActivityCreateArgs} args - Arguments to create a FoalActivity.
     * @example
     * // Create one FoalActivity
     * const FoalActivity = await prisma.foalActivity.create({
     *   data: {
     *     // ... data to create a FoalActivity
     *   }
     * })
     * 
     */
    create<T extends FoalActivityCreateArgs>(args: SelectSubset<T, FoalActivityCreateArgs<ExtArgs>>): Prisma__FoalActivityClient<$Result.GetResult<Prisma.$FoalActivityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FoalActivities.
     * @param {FoalActivityCreateManyArgs} args - Arguments to create many FoalActivities.
     * @example
     * // Create many FoalActivities
     * const foalActivity = await prisma.foalActivity.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FoalActivityCreateManyArgs>(args?: SelectSubset<T, FoalActivityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FoalActivities and returns the data saved in the database.
     * @param {FoalActivityCreateManyAndReturnArgs} args - Arguments to create many FoalActivities.
     * @example
     * // Create many FoalActivities
     * const foalActivity = await prisma.foalActivity.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FoalActivities and only return the `id`
     * const foalActivityWithIdOnly = await prisma.foalActivity.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FoalActivityCreateManyAndReturnArgs>(args?: SelectSubset<T, FoalActivityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FoalActivityPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a FoalActivity.
     * @param {FoalActivityDeleteArgs} args - Arguments to delete one FoalActivity.
     * @example
     * // Delete one FoalActivity
     * const FoalActivity = await prisma.foalActivity.delete({
     *   where: {
     *     // ... filter to delete one FoalActivity
     *   }
     * })
     * 
     */
    delete<T extends FoalActivityDeleteArgs>(args: SelectSubset<T, FoalActivityDeleteArgs<ExtArgs>>): Prisma__FoalActivityClient<$Result.GetResult<Prisma.$FoalActivityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FoalActivity.
     * @param {FoalActivityUpdateArgs} args - Arguments to update one FoalActivity.
     * @example
     * // Update one FoalActivity
     * const foalActivity = await prisma.foalActivity.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FoalActivityUpdateArgs>(args: SelectSubset<T, FoalActivityUpdateArgs<ExtArgs>>): Prisma__FoalActivityClient<$Result.GetResult<Prisma.$FoalActivityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FoalActivities.
     * @param {FoalActivityDeleteManyArgs} args - Arguments to filter FoalActivities to delete.
     * @example
     * // Delete a few FoalActivities
     * const { count } = await prisma.foalActivity.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FoalActivityDeleteManyArgs>(args?: SelectSubset<T, FoalActivityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FoalActivities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalActivityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FoalActivities
     * const foalActivity = await prisma.foalActivity.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FoalActivityUpdateManyArgs>(args: SelectSubset<T, FoalActivityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FoalActivities and returns the data updated in the database.
     * @param {FoalActivityUpdateManyAndReturnArgs} args - Arguments to update many FoalActivities.
     * @example
     * // Update many FoalActivities
     * const foalActivity = await prisma.foalActivity.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FoalActivities and only return the `id`
     * const foalActivityWithIdOnly = await prisma.foalActivity.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FoalActivityUpdateManyAndReturnArgs>(args: SelectSubset<T, FoalActivityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FoalActivityPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one FoalActivity.
     * @param {FoalActivityUpsertArgs} args - Arguments to update or create a FoalActivity.
     * @example
     * // Update or create a FoalActivity
     * const foalActivity = await prisma.foalActivity.upsert({
     *   create: {
     *     // ... data to create a FoalActivity
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FoalActivity we want to update
     *   }
     * })
     */
    upsert<T extends FoalActivityUpsertArgs>(args: SelectSubset<T, FoalActivityUpsertArgs<ExtArgs>>): Prisma__FoalActivityClient<$Result.GetResult<Prisma.$FoalActivityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FoalActivities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalActivityCountArgs} args - Arguments to filter FoalActivities to count.
     * @example
     * // Count the number of FoalActivities
     * const count = await prisma.foalActivity.count({
     *   where: {
     *     // ... the filter for the FoalActivities we want to count
     *   }
     * })
    **/
    count<T extends FoalActivityCountArgs>(
      args?: Subset<T, FoalActivityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FoalActivityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FoalActivity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalActivityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FoalActivityAggregateArgs>(args: Subset<T, FoalActivityAggregateArgs>): Prisma.PrismaPromise<GetFoalActivityAggregateType<T>>

    /**
     * Group by FoalActivity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalActivityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FoalActivityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FoalActivityGroupByArgs['orderBy'] }
        : { orderBy?: FoalActivityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FoalActivityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFoalActivityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FoalActivity model
   */
  readonly fields: FoalActivityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FoalActivity.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FoalActivityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    foal<T extends HorseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, HorseDefaultArgs<ExtArgs>>): Prisma__HorseClient<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FoalActivity model
   */
  interface FoalActivityFieldRefs {
    readonly id: FieldRef<"FoalActivity", 'Int'>
    readonly day: FieldRef<"FoalActivity", 'Int'>
    readonly activityType: FieldRef<"FoalActivity", 'String'>
    readonly outcome: FieldRef<"FoalActivity", 'String'>
    readonly bondingChange: FieldRef<"FoalActivity", 'Int'>
    readonly stressChange: FieldRef<"FoalActivity", 'Int'>
    readonly description: FieldRef<"FoalActivity", 'String'>
    readonly foalId: FieldRef<"FoalActivity", 'Int'>
    readonly createdAt: FieldRef<"FoalActivity", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FoalActivity findUnique
   */
  export type FoalActivityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalActivity
     */
    select?: FoalActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalActivity
     */
    omit?: FoalActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalActivityInclude<ExtArgs> | null
    /**
     * Filter, which FoalActivity to fetch.
     */
    where: FoalActivityWhereUniqueInput
  }

  /**
   * FoalActivity findUniqueOrThrow
   */
  export type FoalActivityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalActivity
     */
    select?: FoalActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalActivity
     */
    omit?: FoalActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalActivityInclude<ExtArgs> | null
    /**
     * Filter, which FoalActivity to fetch.
     */
    where: FoalActivityWhereUniqueInput
  }

  /**
   * FoalActivity findFirst
   */
  export type FoalActivityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalActivity
     */
    select?: FoalActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalActivity
     */
    omit?: FoalActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalActivityInclude<ExtArgs> | null
    /**
     * Filter, which FoalActivity to fetch.
     */
    where?: FoalActivityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FoalActivities to fetch.
     */
    orderBy?: FoalActivityOrderByWithRelationInput | FoalActivityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FoalActivities.
     */
    cursor?: FoalActivityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FoalActivities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FoalActivities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FoalActivities.
     */
    distinct?: FoalActivityScalarFieldEnum | FoalActivityScalarFieldEnum[]
  }

  /**
   * FoalActivity findFirstOrThrow
   */
  export type FoalActivityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalActivity
     */
    select?: FoalActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalActivity
     */
    omit?: FoalActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalActivityInclude<ExtArgs> | null
    /**
     * Filter, which FoalActivity to fetch.
     */
    where?: FoalActivityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FoalActivities to fetch.
     */
    orderBy?: FoalActivityOrderByWithRelationInput | FoalActivityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FoalActivities.
     */
    cursor?: FoalActivityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FoalActivities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FoalActivities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FoalActivities.
     */
    distinct?: FoalActivityScalarFieldEnum | FoalActivityScalarFieldEnum[]
  }

  /**
   * FoalActivity findMany
   */
  export type FoalActivityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalActivity
     */
    select?: FoalActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalActivity
     */
    omit?: FoalActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalActivityInclude<ExtArgs> | null
    /**
     * Filter, which FoalActivities to fetch.
     */
    where?: FoalActivityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FoalActivities to fetch.
     */
    orderBy?: FoalActivityOrderByWithRelationInput | FoalActivityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FoalActivities.
     */
    cursor?: FoalActivityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FoalActivities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FoalActivities.
     */
    skip?: number
    distinct?: FoalActivityScalarFieldEnum | FoalActivityScalarFieldEnum[]
  }

  /**
   * FoalActivity create
   */
  export type FoalActivityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalActivity
     */
    select?: FoalActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalActivity
     */
    omit?: FoalActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalActivityInclude<ExtArgs> | null
    /**
     * The data needed to create a FoalActivity.
     */
    data: XOR<FoalActivityCreateInput, FoalActivityUncheckedCreateInput>
  }

  /**
   * FoalActivity createMany
   */
  export type FoalActivityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FoalActivities.
     */
    data: FoalActivityCreateManyInput | FoalActivityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FoalActivity createManyAndReturn
   */
  export type FoalActivityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalActivity
     */
    select?: FoalActivitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FoalActivity
     */
    omit?: FoalActivityOmit<ExtArgs> | null
    /**
     * The data used to create many FoalActivities.
     */
    data: FoalActivityCreateManyInput | FoalActivityCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalActivityIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FoalActivity update
   */
  export type FoalActivityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalActivity
     */
    select?: FoalActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalActivity
     */
    omit?: FoalActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalActivityInclude<ExtArgs> | null
    /**
     * The data needed to update a FoalActivity.
     */
    data: XOR<FoalActivityUpdateInput, FoalActivityUncheckedUpdateInput>
    /**
     * Choose, which FoalActivity to update.
     */
    where: FoalActivityWhereUniqueInput
  }

  /**
   * FoalActivity updateMany
   */
  export type FoalActivityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FoalActivities.
     */
    data: XOR<FoalActivityUpdateManyMutationInput, FoalActivityUncheckedUpdateManyInput>
    /**
     * Filter which FoalActivities to update
     */
    where?: FoalActivityWhereInput
    /**
     * Limit how many FoalActivities to update.
     */
    limit?: number
  }

  /**
   * FoalActivity updateManyAndReturn
   */
  export type FoalActivityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalActivity
     */
    select?: FoalActivitySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FoalActivity
     */
    omit?: FoalActivityOmit<ExtArgs> | null
    /**
     * The data used to update FoalActivities.
     */
    data: XOR<FoalActivityUpdateManyMutationInput, FoalActivityUncheckedUpdateManyInput>
    /**
     * Filter which FoalActivities to update
     */
    where?: FoalActivityWhereInput
    /**
     * Limit how many FoalActivities to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalActivityIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FoalActivity upsert
   */
  export type FoalActivityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalActivity
     */
    select?: FoalActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalActivity
     */
    omit?: FoalActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalActivityInclude<ExtArgs> | null
    /**
     * The filter to search for the FoalActivity to update in case it exists.
     */
    where: FoalActivityWhereUniqueInput
    /**
     * In case the FoalActivity found by the `where` argument doesn't exist, create a new FoalActivity with this data.
     */
    create: XOR<FoalActivityCreateInput, FoalActivityUncheckedCreateInput>
    /**
     * In case the FoalActivity was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FoalActivityUpdateInput, FoalActivityUncheckedUpdateInput>
  }

  /**
   * FoalActivity delete
   */
  export type FoalActivityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalActivity
     */
    select?: FoalActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalActivity
     */
    omit?: FoalActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalActivityInclude<ExtArgs> | null
    /**
     * Filter which FoalActivity to delete.
     */
    where: FoalActivityWhereUniqueInput
  }

  /**
   * FoalActivity deleteMany
   */
  export type FoalActivityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FoalActivities to delete
     */
    where?: FoalActivityWhereInput
    /**
     * Limit how many FoalActivities to delete.
     */
    limit?: number
  }

  /**
   * FoalActivity without action
   */
  export type FoalActivityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalActivity
     */
    select?: FoalActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalActivity
     */
    omit?: FoalActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalActivityInclude<ExtArgs> | null
  }


  /**
   * Model FoalTrainingHistory
   */

  export type AggregateFoalTrainingHistory = {
    _count: FoalTrainingHistoryCountAggregateOutputType | null
    _avg: FoalTrainingHistoryAvgAggregateOutputType | null
    _sum: FoalTrainingHistorySumAggregateOutputType | null
    _min: FoalTrainingHistoryMinAggregateOutputType | null
    _max: FoalTrainingHistoryMaxAggregateOutputType | null
  }

  export type FoalTrainingHistoryAvgAggregateOutputType = {
    day: number | null
    bondChange: number | null
    stressChange: number | null
    horseId: number | null
  }

  export type FoalTrainingHistorySumAggregateOutputType = {
    day: number | null
    bondChange: number | null
    stressChange: number | null
    horseId: number | null
  }

  export type FoalTrainingHistoryMinAggregateOutputType = {
    id: string | null
    day: number | null
    activity: string | null
    outcome: string | null
    bondChange: number | null
    stressChange: number | null
    horseId: number | null
    timestamp: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FoalTrainingHistoryMaxAggregateOutputType = {
    id: string | null
    day: number | null
    activity: string | null
    outcome: string | null
    bondChange: number | null
    stressChange: number | null
    horseId: number | null
    timestamp: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FoalTrainingHistoryCountAggregateOutputType = {
    id: number
    day: number
    activity: number
    outcome: number
    bondChange: number
    stressChange: number
    horseId: number
    timestamp: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FoalTrainingHistoryAvgAggregateInputType = {
    day?: true
    bondChange?: true
    stressChange?: true
    horseId?: true
  }

  export type FoalTrainingHistorySumAggregateInputType = {
    day?: true
    bondChange?: true
    stressChange?: true
    horseId?: true
  }

  export type FoalTrainingHistoryMinAggregateInputType = {
    id?: true
    day?: true
    activity?: true
    outcome?: true
    bondChange?: true
    stressChange?: true
    horseId?: true
    timestamp?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FoalTrainingHistoryMaxAggregateInputType = {
    id?: true
    day?: true
    activity?: true
    outcome?: true
    bondChange?: true
    stressChange?: true
    horseId?: true
    timestamp?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FoalTrainingHistoryCountAggregateInputType = {
    id?: true
    day?: true
    activity?: true
    outcome?: true
    bondChange?: true
    stressChange?: true
    horseId?: true
    timestamp?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FoalTrainingHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FoalTrainingHistory to aggregate.
     */
    where?: FoalTrainingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FoalTrainingHistories to fetch.
     */
    orderBy?: FoalTrainingHistoryOrderByWithRelationInput | FoalTrainingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FoalTrainingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FoalTrainingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FoalTrainingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FoalTrainingHistories
    **/
    _count?: true | FoalTrainingHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FoalTrainingHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FoalTrainingHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FoalTrainingHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FoalTrainingHistoryMaxAggregateInputType
  }

  export type GetFoalTrainingHistoryAggregateType<T extends FoalTrainingHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateFoalTrainingHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFoalTrainingHistory[P]>
      : GetScalarType<T[P], AggregateFoalTrainingHistory[P]>
  }




  export type FoalTrainingHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FoalTrainingHistoryWhereInput
    orderBy?: FoalTrainingHistoryOrderByWithAggregationInput | FoalTrainingHistoryOrderByWithAggregationInput[]
    by: FoalTrainingHistoryScalarFieldEnum[] | FoalTrainingHistoryScalarFieldEnum
    having?: FoalTrainingHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FoalTrainingHistoryCountAggregateInputType | true
    _avg?: FoalTrainingHistoryAvgAggregateInputType
    _sum?: FoalTrainingHistorySumAggregateInputType
    _min?: FoalTrainingHistoryMinAggregateInputType
    _max?: FoalTrainingHistoryMaxAggregateInputType
  }

  export type FoalTrainingHistoryGroupByOutputType = {
    id: string
    day: number
    activity: string
    outcome: string
    bondChange: number
    stressChange: number
    horseId: number
    timestamp: Date
    createdAt: Date
    updatedAt: Date
    _count: FoalTrainingHistoryCountAggregateOutputType | null
    _avg: FoalTrainingHistoryAvgAggregateOutputType | null
    _sum: FoalTrainingHistorySumAggregateOutputType | null
    _min: FoalTrainingHistoryMinAggregateOutputType | null
    _max: FoalTrainingHistoryMaxAggregateOutputType | null
  }

  type GetFoalTrainingHistoryGroupByPayload<T extends FoalTrainingHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FoalTrainingHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FoalTrainingHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FoalTrainingHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], FoalTrainingHistoryGroupByOutputType[P]>
        }
      >
    >


  export type FoalTrainingHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    day?: boolean
    activity?: boolean
    outcome?: boolean
    bondChange?: boolean
    stressChange?: boolean
    horseId?: boolean
    timestamp?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    horse?: boolean | HorseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["foalTrainingHistory"]>

  export type FoalTrainingHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    day?: boolean
    activity?: boolean
    outcome?: boolean
    bondChange?: boolean
    stressChange?: boolean
    horseId?: boolean
    timestamp?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    horse?: boolean | HorseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["foalTrainingHistory"]>

  export type FoalTrainingHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    day?: boolean
    activity?: boolean
    outcome?: boolean
    bondChange?: boolean
    stressChange?: boolean
    horseId?: boolean
    timestamp?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    horse?: boolean | HorseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["foalTrainingHistory"]>

  export type FoalTrainingHistorySelectScalar = {
    id?: boolean
    day?: boolean
    activity?: boolean
    outcome?: boolean
    bondChange?: boolean
    stressChange?: boolean
    horseId?: boolean
    timestamp?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FoalTrainingHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "day" | "activity" | "outcome" | "bondChange" | "stressChange" | "horseId" | "timestamp" | "createdAt" | "updatedAt", ExtArgs["result"]["foalTrainingHistory"]>
  export type FoalTrainingHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horse?: boolean | HorseDefaultArgs<ExtArgs>
  }
  export type FoalTrainingHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horse?: boolean | HorseDefaultArgs<ExtArgs>
  }
  export type FoalTrainingHistoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horse?: boolean | HorseDefaultArgs<ExtArgs>
  }

  export type $FoalTrainingHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FoalTrainingHistory"
    objects: {
      horse: Prisma.$HorsePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * Unique identifier for each training history record
       */
      id: string
      /**
       * Training details
       */
      day: number
      activity: string
      outcome: string
      bondChange: number
      stressChange: number
      /**
       * Foreign key
       */
      horseId: number
      /**
       * Timestamps
       */
      timestamp: Date
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["foalTrainingHistory"]>
    composites: {}
  }

  type FoalTrainingHistoryGetPayload<S extends boolean | null | undefined | FoalTrainingHistoryDefaultArgs> = $Result.GetResult<Prisma.$FoalTrainingHistoryPayload, S>

  type FoalTrainingHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FoalTrainingHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FoalTrainingHistoryCountAggregateInputType | true
    }

  export interface FoalTrainingHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FoalTrainingHistory'], meta: { name: 'FoalTrainingHistory' } }
    /**
     * Find zero or one FoalTrainingHistory that matches the filter.
     * @param {FoalTrainingHistoryFindUniqueArgs} args - Arguments to find a FoalTrainingHistory
     * @example
     * // Get one FoalTrainingHistory
     * const foalTrainingHistory = await prisma.foalTrainingHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FoalTrainingHistoryFindUniqueArgs>(args: SelectSubset<T, FoalTrainingHistoryFindUniqueArgs<ExtArgs>>): Prisma__FoalTrainingHistoryClient<$Result.GetResult<Prisma.$FoalTrainingHistoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FoalTrainingHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FoalTrainingHistoryFindUniqueOrThrowArgs} args - Arguments to find a FoalTrainingHistory
     * @example
     * // Get one FoalTrainingHistory
     * const foalTrainingHistory = await prisma.foalTrainingHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FoalTrainingHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, FoalTrainingHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FoalTrainingHistoryClient<$Result.GetResult<Prisma.$FoalTrainingHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FoalTrainingHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalTrainingHistoryFindFirstArgs} args - Arguments to find a FoalTrainingHistory
     * @example
     * // Get one FoalTrainingHistory
     * const foalTrainingHistory = await prisma.foalTrainingHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FoalTrainingHistoryFindFirstArgs>(args?: SelectSubset<T, FoalTrainingHistoryFindFirstArgs<ExtArgs>>): Prisma__FoalTrainingHistoryClient<$Result.GetResult<Prisma.$FoalTrainingHistoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FoalTrainingHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalTrainingHistoryFindFirstOrThrowArgs} args - Arguments to find a FoalTrainingHistory
     * @example
     * // Get one FoalTrainingHistory
     * const foalTrainingHistory = await prisma.foalTrainingHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FoalTrainingHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, FoalTrainingHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__FoalTrainingHistoryClient<$Result.GetResult<Prisma.$FoalTrainingHistoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FoalTrainingHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalTrainingHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FoalTrainingHistories
     * const foalTrainingHistories = await prisma.foalTrainingHistory.findMany()
     * 
     * // Get first 10 FoalTrainingHistories
     * const foalTrainingHistories = await prisma.foalTrainingHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const foalTrainingHistoryWithIdOnly = await prisma.foalTrainingHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FoalTrainingHistoryFindManyArgs>(args?: SelectSubset<T, FoalTrainingHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FoalTrainingHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FoalTrainingHistory.
     * @param {FoalTrainingHistoryCreateArgs} args - Arguments to create a FoalTrainingHistory.
     * @example
     * // Create one FoalTrainingHistory
     * const FoalTrainingHistory = await prisma.foalTrainingHistory.create({
     *   data: {
     *     // ... data to create a FoalTrainingHistory
     *   }
     * })
     * 
     */
    create<T extends FoalTrainingHistoryCreateArgs>(args: SelectSubset<T, FoalTrainingHistoryCreateArgs<ExtArgs>>): Prisma__FoalTrainingHistoryClient<$Result.GetResult<Prisma.$FoalTrainingHistoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FoalTrainingHistories.
     * @param {FoalTrainingHistoryCreateManyArgs} args - Arguments to create many FoalTrainingHistories.
     * @example
     * // Create many FoalTrainingHistories
     * const foalTrainingHistory = await prisma.foalTrainingHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FoalTrainingHistoryCreateManyArgs>(args?: SelectSubset<T, FoalTrainingHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FoalTrainingHistories and returns the data saved in the database.
     * @param {FoalTrainingHistoryCreateManyAndReturnArgs} args - Arguments to create many FoalTrainingHistories.
     * @example
     * // Create many FoalTrainingHistories
     * const foalTrainingHistory = await prisma.foalTrainingHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FoalTrainingHistories and only return the `id`
     * const foalTrainingHistoryWithIdOnly = await prisma.foalTrainingHistory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FoalTrainingHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, FoalTrainingHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FoalTrainingHistoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a FoalTrainingHistory.
     * @param {FoalTrainingHistoryDeleteArgs} args - Arguments to delete one FoalTrainingHistory.
     * @example
     * // Delete one FoalTrainingHistory
     * const FoalTrainingHistory = await prisma.foalTrainingHistory.delete({
     *   where: {
     *     // ... filter to delete one FoalTrainingHistory
     *   }
     * })
     * 
     */
    delete<T extends FoalTrainingHistoryDeleteArgs>(args: SelectSubset<T, FoalTrainingHistoryDeleteArgs<ExtArgs>>): Prisma__FoalTrainingHistoryClient<$Result.GetResult<Prisma.$FoalTrainingHistoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FoalTrainingHistory.
     * @param {FoalTrainingHistoryUpdateArgs} args - Arguments to update one FoalTrainingHistory.
     * @example
     * // Update one FoalTrainingHistory
     * const foalTrainingHistory = await prisma.foalTrainingHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FoalTrainingHistoryUpdateArgs>(args: SelectSubset<T, FoalTrainingHistoryUpdateArgs<ExtArgs>>): Prisma__FoalTrainingHistoryClient<$Result.GetResult<Prisma.$FoalTrainingHistoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FoalTrainingHistories.
     * @param {FoalTrainingHistoryDeleteManyArgs} args - Arguments to filter FoalTrainingHistories to delete.
     * @example
     * // Delete a few FoalTrainingHistories
     * const { count } = await prisma.foalTrainingHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FoalTrainingHistoryDeleteManyArgs>(args?: SelectSubset<T, FoalTrainingHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FoalTrainingHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalTrainingHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FoalTrainingHistories
     * const foalTrainingHistory = await prisma.foalTrainingHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FoalTrainingHistoryUpdateManyArgs>(args: SelectSubset<T, FoalTrainingHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FoalTrainingHistories and returns the data updated in the database.
     * @param {FoalTrainingHistoryUpdateManyAndReturnArgs} args - Arguments to update many FoalTrainingHistories.
     * @example
     * // Update many FoalTrainingHistories
     * const foalTrainingHistory = await prisma.foalTrainingHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FoalTrainingHistories and only return the `id`
     * const foalTrainingHistoryWithIdOnly = await prisma.foalTrainingHistory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FoalTrainingHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, FoalTrainingHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FoalTrainingHistoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one FoalTrainingHistory.
     * @param {FoalTrainingHistoryUpsertArgs} args - Arguments to update or create a FoalTrainingHistory.
     * @example
     * // Update or create a FoalTrainingHistory
     * const foalTrainingHistory = await prisma.foalTrainingHistory.upsert({
     *   create: {
     *     // ... data to create a FoalTrainingHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FoalTrainingHistory we want to update
     *   }
     * })
     */
    upsert<T extends FoalTrainingHistoryUpsertArgs>(args: SelectSubset<T, FoalTrainingHistoryUpsertArgs<ExtArgs>>): Prisma__FoalTrainingHistoryClient<$Result.GetResult<Prisma.$FoalTrainingHistoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FoalTrainingHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalTrainingHistoryCountArgs} args - Arguments to filter FoalTrainingHistories to count.
     * @example
     * // Count the number of FoalTrainingHistories
     * const count = await prisma.foalTrainingHistory.count({
     *   where: {
     *     // ... the filter for the FoalTrainingHistories we want to count
     *   }
     * })
    **/
    count<T extends FoalTrainingHistoryCountArgs>(
      args?: Subset<T, FoalTrainingHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FoalTrainingHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FoalTrainingHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalTrainingHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FoalTrainingHistoryAggregateArgs>(args: Subset<T, FoalTrainingHistoryAggregateArgs>): Prisma.PrismaPromise<GetFoalTrainingHistoryAggregateType<T>>

    /**
     * Group by FoalTrainingHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FoalTrainingHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FoalTrainingHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FoalTrainingHistoryGroupByArgs['orderBy'] }
        : { orderBy?: FoalTrainingHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FoalTrainingHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFoalTrainingHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FoalTrainingHistory model
   */
  readonly fields: FoalTrainingHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FoalTrainingHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FoalTrainingHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    horse<T extends HorseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, HorseDefaultArgs<ExtArgs>>): Prisma__HorseClient<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FoalTrainingHistory model
   */
  interface FoalTrainingHistoryFieldRefs {
    readonly id: FieldRef<"FoalTrainingHistory", 'String'>
    readonly day: FieldRef<"FoalTrainingHistory", 'Int'>
    readonly activity: FieldRef<"FoalTrainingHistory", 'String'>
    readonly outcome: FieldRef<"FoalTrainingHistory", 'String'>
    readonly bondChange: FieldRef<"FoalTrainingHistory", 'Int'>
    readonly stressChange: FieldRef<"FoalTrainingHistory", 'Int'>
    readonly horseId: FieldRef<"FoalTrainingHistory", 'Int'>
    readonly timestamp: FieldRef<"FoalTrainingHistory", 'DateTime'>
    readonly createdAt: FieldRef<"FoalTrainingHistory", 'DateTime'>
    readonly updatedAt: FieldRef<"FoalTrainingHistory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FoalTrainingHistory findUnique
   */
  export type FoalTrainingHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalTrainingHistory
     */
    select?: FoalTrainingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalTrainingHistory
     */
    omit?: FoalTrainingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalTrainingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which FoalTrainingHistory to fetch.
     */
    where: FoalTrainingHistoryWhereUniqueInput
  }

  /**
   * FoalTrainingHistory findUniqueOrThrow
   */
  export type FoalTrainingHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalTrainingHistory
     */
    select?: FoalTrainingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalTrainingHistory
     */
    omit?: FoalTrainingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalTrainingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which FoalTrainingHistory to fetch.
     */
    where: FoalTrainingHistoryWhereUniqueInput
  }

  /**
   * FoalTrainingHistory findFirst
   */
  export type FoalTrainingHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalTrainingHistory
     */
    select?: FoalTrainingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalTrainingHistory
     */
    omit?: FoalTrainingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalTrainingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which FoalTrainingHistory to fetch.
     */
    where?: FoalTrainingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FoalTrainingHistories to fetch.
     */
    orderBy?: FoalTrainingHistoryOrderByWithRelationInput | FoalTrainingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FoalTrainingHistories.
     */
    cursor?: FoalTrainingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FoalTrainingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FoalTrainingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FoalTrainingHistories.
     */
    distinct?: FoalTrainingHistoryScalarFieldEnum | FoalTrainingHistoryScalarFieldEnum[]
  }

  /**
   * FoalTrainingHistory findFirstOrThrow
   */
  export type FoalTrainingHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalTrainingHistory
     */
    select?: FoalTrainingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalTrainingHistory
     */
    omit?: FoalTrainingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalTrainingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which FoalTrainingHistory to fetch.
     */
    where?: FoalTrainingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FoalTrainingHistories to fetch.
     */
    orderBy?: FoalTrainingHistoryOrderByWithRelationInput | FoalTrainingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FoalTrainingHistories.
     */
    cursor?: FoalTrainingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FoalTrainingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FoalTrainingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FoalTrainingHistories.
     */
    distinct?: FoalTrainingHistoryScalarFieldEnum | FoalTrainingHistoryScalarFieldEnum[]
  }

  /**
   * FoalTrainingHistory findMany
   */
  export type FoalTrainingHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalTrainingHistory
     */
    select?: FoalTrainingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalTrainingHistory
     */
    omit?: FoalTrainingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalTrainingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which FoalTrainingHistories to fetch.
     */
    where?: FoalTrainingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FoalTrainingHistories to fetch.
     */
    orderBy?: FoalTrainingHistoryOrderByWithRelationInput | FoalTrainingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FoalTrainingHistories.
     */
    cursor?: FoalTrainingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FoalTrainingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FoalTrainingHistories.
     */
    skip?: number
    distinct?: FoalTrainingHistoryScalarFieldEnum | FoalTrainingHistoryScalarFieldEnum[]
  }

  /**
   * FoalTrainingHistory create
   */
  export type FoalTrainingHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalTrainingHistory
     */
    select?: FoalTrainingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalTrainingHistory
     */
    omit?: FoalTrainingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalTrainingHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a FoalTrainingHistory.
     */
    data: XOR<FoalTrainingHistoryCreateInput, FoalTrainingHistoryUncheckedCreateInput>
  }

  /**
   * FoalTrainingHistory createMany
   */
  export type FoalTrainingHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FoalTrainingHistories.
     */
    data: FoalTrainingHistoryCreateManyInput | FoalTrainingHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FoalTrainingHistory createManyAndReturn
   */
  export type FoalTrainingHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalTrainingHistory
     */
    select?: FoalTrainingHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FoalTrainingHistory
     */
    omit?: FoalTrainingHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many FoalTrainingHistories.
     */
    data: FoalTrainingHistoryCreateManyInput | FoalTrainingHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalTrainingHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FoalTrainingHistory update
   */
  export type FoalTrainingHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalTrainingHistory
     */
    select?: FoalTrainingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalTrainingHistory
     */
    omit?: FoalTrainingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalTrainingHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a FoalTrainingHistory.
     */
    data: XOR<FoalTrainingHistoryUpdateInput, FoalTrainingHistoryUncheckedUpdateInput>
    /**
     * Choose, which FoalTrainingHistory to update.
     */
    where: FoalTrainingHistoryWhereUniqueInput
  }

  /**
   * FoalTrainingHistory updateMany
   */
  export type FoalTrainingHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FoalTrainingHistories.
     */
    data: XOR<FoalTrainingHistoryUpdateManyMutationInput, FoalTrainingHistoryUncheckedUpdateManyInput>
    /**
     * Filter which FoalTrainingHistories to update
     */
    where?: FoalTrainingHistoryWhereInput
    /**
     * Limit how many FoalTrainingHistories to update.
     */
    limit?: number
  }

  /**
   * FoalTrainingHistory updateManyAndReturn
   */
  export type FoalTrainingHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalTrainingHistory
     */
    select?: FoalTrainingHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FoalTrainingHistory
     */
    omit?: FoalTrainingHistoryOmit<ExtArgs> | null
    /**
     * The data used to update FoalTrainingHistories.
     */
    data: XOR<FoalTrainingHistoryUpdateManyMutationInput, FoalTrainingHistoryUncheckedUpdateManyInput>
    /**
     * Filter which FoalTrainingHistories to update
     */
    where?: FoalTrainingHistoryWhereInput
    /**
     * Limit how many FoalTrainingHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalTrainingHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FoalTrainingHistory upsert
   */
  export type FoalTrainingHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalTrainingHistory
     */
    select?: FoalTrainingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalTrainingHistory
     */
    omit?: FoalTrainingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalTrainingHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the FoalTrainingHistory to update in case it exists.
     */
    where: FoalTrainingHistoryWhereUniqueInput
    /**
     * In case the FoalTrainingHistory found by the `where` argument doesn't exist, create a new FoalTrainingHistory with this data.
     */
    create: XOR<FoalTrainingHistoryCreateInput, FoalTrainingHistoryUncheckedCreateInput>
    /**
     * In case the FoalTrainingHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FoalTrainingHistoryUpdateInput, FoalTrainingHistoryUncheckedUpdateInput>
  }

  /**
   * FoalTrainingHistory delete
   */
  export type FoalTrainingHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalTrainingHistory
     */
    select?: FoalTrainingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalTrainingHistory
     */
    omit?: FoalTrainingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalTrainingHistoryInclude<ExtArgs> | null
    /**
     * Filter which FoalTrainingHistory to delete.
     */
    where: FoalTrainingHistoryWhereUniqueInput
  }

  /**
   * FoalTrainingHistory deleteMany
   */
  export type FoalTrainingHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FoalTrainingHistories to delete
     */
    where?: FoalTrainingHistoryWhereInput
    /**
     * Limit how many FoalTrainingHistories to delete.
     */
    limit?: number
  }

  /**
   * FoalTrainingHistory without action
   */
  export type FoalTrainingHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FoalTrainingHistory
     */
    select?: FoalTrainingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FoalTrainingHistory
     */
    omit?: FoalTrainingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FoalTrainingHistoryInclude<ExtArgs> | null
  }


  /**
   * Model XpEvent
   */

  export type AggregateXpEvent = {
    _count: XpEventCountAggregateOutputType | null
    _avg: XpEventAvgAggregateOutputType | null
    _sum: XpEventSumAggregateOutputType | null
    _min: XpEventMinAggregateOutputType | null
    _max: XpEventMaxAggregateOutputType | null
  }

  export type XpEventAvgAggregateOutputType = {
    id: number | null
    amount: number | null
  }

  export type XpEventSumAggregateOutputType = {
    id: number | null
    amount: number | null
  }

  export type XpEventMinAggregateOutputType = {
    id: number | null
    amount: number | null
    reason: string | null
    userId: string | null
    timestamp: Date | null
  }

  export type XpEventMaxAggregateOutputType = {
    id: number | null
    amount: number | null
    reason: string | null
    userId: string | null
    timestamp: Date | null
  }

  export type XpEventCountAggregateOutputType = {
    id: number
    amount: number
    reason: number
    userId: number
    timestamp: number
    _all: number
  }


  export type XpEventAvgAggregateInputType = {
    id?: true
    amount?: true
  }

  export type XpEventSumAggregateInputType = {
    id?: true
    amount?: true
  }

  export type XpEventMinAggregateInputType = {
    id?: true
    amount?: true
    reason?: true
    userId?: true
    timestamp?: true
  }

  export type XpEventMaxAggregateInputType = {
    id?: true
    amount?: true
    reason?: true
    userId?: true
    timestamp?: true
  }

  export type XpEventCountAggregateInputType = {
    id?: true
    amount?: true
    reason?: true
    userId?: true
    timestamp?: true
    _all?: true
  }

  export type XpEventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which XpEvent to aggregate.
     */
    where?: XpEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of XpEvents to fetch.
     */
    orderBy?: XpEventOrderByWithRelationInput | XpEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: XpEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` XpEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` XpEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned XpEvents
    **/
    _count?: true | XpEventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: XpEventAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: XpEventSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: XpEventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: XpEventMaxAggregateInputType
  }

  export type GetXpEventAggregateType<T extends XpEventAggregateArgs> = {
        [P in keyof T & keyof AggregateXpEvent]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateXpEvent[P]>
      : GetScalarType<T[P], AggregateXpEvent[P]>
  }




  export type XpEventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: XpEventWhereInput
    orderBy?: XpEventOrderByWithAggregationInput | XpEventOrderByWithAggregationInput[]
    by: XpEventScalarFieldEnum[] | XpEventScalarFieldEnum
    having?: XpEventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: XpEventCountAggregateInputType | true
    _avg?: XpEventAvgAggregateInputType
    _sum?: XpEventSumAggregateInputType
    _min?: XpEventMinAggregateInputType
    _max?: XpEventMaxAggregateInputType
  }

  export type XpEventGroupByOutputType = {
    id: number
    amount: number
    reason: string
    userId: string
    timestamp: Date
    _count: XpEventCountAggregateOutputType | null
    _avg: XpEventAvgAggregateOutputType | null
    _sum: XpEventSumAggregateOutputType | null
    _min: XpEventMinAggregateOutputType | null
    _max: XpEventMaxAggregateOutputType | null
  }

  type GetXpEventGroupByPayload<T extends XpEventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<XpEventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof XpEventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], XpEventGroupByOutputType[P]>
            : GetScalarType<T[P], XpEventGroupByOutputType[P]>
        }
      >
    >


  export type XpEventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    amount?: boolean
    reason?: boolean
    userId?: boolean
    timestamp?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["xpEvent"]>

  export type XpEventSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    amount?: boolean
    reason?: boolean
    userId?: boolean
    timestamp?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["xpEvent"]>

  export type XpEventSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    amount?: boolean
    reason?: boolean
    userId?: boolean
    timestamp?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["xpEvent"]>

  export type XpEventSelectScalar = {
    id?: boolean
    amount?: boolean
    reason?: boolean
    userId?: boolean
    timestamp?: boolean
  }

  export type XpEventOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "amount" | "reason" | "userId" | "timestamp", ExtArgs["result"]["xpEvent"]>
  export type XpEventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type XpEventIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type XpEventIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $XpEventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "XpEvent"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * Unique identifier for each XP event
       */
      id: number
      /**
       * XP details
       */
      amount: number
      reason: string
      /**
       * Foreign key
       */
      userId: string
      /**
       * Timestamps
       */
      timestamp: Date
    }, ExtArgs["result"]["xpEvent"]>
    composites: {}
  }

  type XpEventGetPayload<S extends boolean | null | undefined | XpEventDefaultArgs> = $Result.GetResult<Prisma.$XpEventPayload, S>

  type XpEventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<XpEventFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: XpEventCountAggregateInputType | true
    }

  export interface XpEventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['XpEvent'], meta: { name: 'XpEvent' } }
    /**
     * Find zero or one XpEvent that matches the filter.
     * @param {XpEventFindUniqueArgs} args - Arguments to find a XpEvent
     * @example
     * // Get one XpEvent
     * const xpEvent = await prisma.xpEvent.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends XpEventFindUniqueArgs>(args: SelectSubset<T, XpEventFindUniqueArgs<ExtArgs>>): Prisma__XpEventClient<$Result.GetResult<Prisma.$XpEventPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one XpEvent that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {XpEventFindUniqueOrThrowArgs} args - Arguments to find a XpEvent
     * @example
     * // Get one XpEvent
     * const xpEvent = await prisma.xpEvent.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends XpEventFindUniqueOrThrowArgs>(args: SelectSubset<T, XpEventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__XpEventClient<$Result.GetResult<Prisma.$XpEventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first XpEvent that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {XpEventFindFirstArgs} args - Arguments to find a XpEvent
     * @example
     * // Get one XpEvent
     * const xpEvent = await prisma.xpEvent.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends XpEventFindFirstArgs>(args?: SelectSubset<T, XpEventFindFirstArgs<ExtArgs>>): Prisma__XpEventClient<$Result.GetResult<Prisma.$XpEventPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first XpEvent that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {XpEventFindFirstOrThrowArgs} args - Arguments to find a XpEvent
     * @example
     * // Get one XpEvent
     * const xpEvent = await prisma.xpEvent.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends XpEventFindFirstOrThrowArgs>(args?: SelectSubset<T, XpEventFindFirstOrThrowArgs<ExtArgs>>): Prisma__XpEventClient<$Result.GetResult<Prisma.$XpEventPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more XpEvents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {XpEventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all XpEvents
     * const xpEvents = await prisma.xpEvent.findMany()
     * 
     * // Get first 10 XpEvents
     * const xpEvents = await prisma.xpEvent.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const xpEventWithIdOnly = await prisma.xpEvent.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends XpEventFindManyArgs>(args?: SelectSubset<T, XpEventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$XpEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a XpEvent.
     * @param {XpEventCreateArgs} args - Arguments to create a XpEvent.
     * @example
     * // Create one XpEvent
     * const XpEvent = await prisma.xpEvent.create({
     *   data: {
     *     // ... data to create a XpEvent
     *   }
     * })
     * 
     */
    create<T extends XpEventCreateArgs>(args: SelectSubset<T, XpEventCreateArgs<ExtArgs>>): Prisma__XpEventClient<$Result.GetResult<Prisma.$XpEventPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many XpEvents.
     * @param {XpEventCreateManyArgs} args - Arguments to create many XpEvents.
     * @example
     * // Create many XpEvents
     * const xpEvent = await prisma.xpEvent.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends XpEventCreateManyArgs>(args?: SelectSubset<T, XpEventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many XpEvents and returns the data saved in the database.
     * @param {XpEventCreateManyAndReturnArgs} args - Arguments to create many XpEvents.
     * @example
     * // Create many XpEvents
     * const xpEvent = await prisma.xpEvent.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many XpEvents and only return the `id`
     * const xpEventWithIdOnly = await prisma.xpEvent.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends XpEventCreateManyAndReturnArgs>(args?: SelectSubset<T, XpEventCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$XpEventPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a XpEvent.
     * @param {XpEventDeleteArgs} args - Arguments to delete one XpEvent.
     * @example
     * // Delete one XpEvent
     * const XpEvent = await prisma.xpEvent.delete({
     *   where: {
     *     // ... filter to delete one XpEvent
     *   }
     * })
     * 
     */
    delete<T extends XpEventDeleteArgs>(args: SelectSubset<T, XpEventDeleteArgs<ExtArgs>>): Prisma__XpEventClient<$Result.GetResult<Prisma.$XpEventPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one XpEvent.
     * @param {XpEventUpdateArgs} args - Arguments to update one XpEvent.
     * @example
     * // Update one XpEvent
     * const xpEvent = await prisma.xpEvent.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends XpEventUpdateArgs>(args: SelectSubset<T, XpEventUpdateArgs<ExtArgs>>): Prisma__XpEventClient<$Result.GetResult<Prisma.$XpEventPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more XpEvents.
     * @param {XpEventDeleteManyArgs} args - Arguments to filter XpEvents to delete.
     * @example
     * // Delete a few XpEvents
     * const { count } = await prisma.xpEvent.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends XpEventDeleteManyArgs>(args?: SelectSubset<T, XpEventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more XpEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {XpEventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many XpEvents
     * const xpEvent = await prisma.xpEvent.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends XpEventUpdateManyArgs>(args: SelectSubset<T, XpEventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more XpEvents and returns the data updated in the database.
     * @param {XpEventUpdateManyAndReturnArgs} args - Arguments to update many XpEvents.
     * @example
     * // Update many XpEvents
     * const xpEvent = await prisma.xpEvent.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more XpEvents and only return the `id`
     * const xpEventWithIdOnly = await prisma.xpEvent.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends XpEventUpdateManyAndReturnArgs>(args: SelectSubset<T, XpEventUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$XpEventPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one XpEvent.
     * @param {XpEventUpsertArgs} args - Arguments to update or create a XpEvent.
     * @example
     * // Update or create a XpEvent
     * const xpEvent = await prisma.xpEvent.upsert({
     *   create: {
     *     // ... data to create a XpEvent
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the XpEvent we want to update
     *   }
     * })
     */
    upsert<T extends XpEventUpsertArgs>(args: SelectSubset<T, XpEventUpsertArgs<ExtArgs>>): Prisma__XpEventClient<$Result.GetResult<Prisma.$XpEventPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of XpEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {XpEventCountArgs} args - Arguments to filter XpEvents to count.
     * @example
     * // Count the number of XpEvents
     * const count = await prisma.xpEvent.count({
     *   where: {
     *     // ... the filter for the XpEvents we want to count
     *   }
     * })
    **/
    count<T extends XpEventCountArgs>(
      args?: Subset<T, XpEventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], XpEventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a XpEvent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {XpEventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends XpEventAggregateArgs>(args: Subset<T, XpEventAggregateArgs>): Prisma.PrismaPromise<GetXpEventAggregateType<T>>

    /**
     * Group by XpEvent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {XpEventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends XpEventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: XpEventGroupByArgs['orderBy'] }
        : { orderBy?: XpEventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, XpEventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetXpEventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the XpEvent model
   */
  readonly fields: XpEventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for XpEvent.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__XpEventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the XpEvent model
   */
  interface XpEventFieldRefs {
    readonly id: FieldRef<"XpEvent", 'Int'>
    readonly amount: FieldRef<"XpEvent", 'Int'>
    readonly reason: FieldRef<"XpEvent", 'String'>
    readonly userId: FieldRef<"XpEvent", 'String'>
    readonly timestamp: FieldRef<"XpEvent", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * XpEvent findUnique
   */
  export type XpEventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the XpEvent
     */
    select?: XpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the XpEvent
     */
    omit?: XpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: XpEventInclude<ExtArgs> | null
    /**
     * Filter, which XpEvent to fetch.
     */
    where: XpEventWhereUniqueInput
  }

  /**
   * XpEvent findUniqueOrThrow
   */
  export type XpEventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the XpEvent
     */
    select?: XpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the XpEvent
     */
    omit?: XpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: XpEventInclude<ExtArgs> | null
    /**
     * Filter, which XpEvent to fetch.
     */
    where: XpEventWhereUniqueInput
  }

  /**
   * XpEvent findFirst
   */
  export type XpEventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the XpEvent
     */
    select?: XpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the XpEvent
     */
    omit?: XpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: XpEventInclude<ExtArgs> | null
    /**
     * Filter, which XpEvent to fetch.
     */
    where?: XpEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of XpEvents to fetch.
     */
    orderBy?: XpEventOrderByWithRelationInput | XpEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for XpEvents.
     */
    cursor?: XpEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` XpEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` XpEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of XpEvents.
     */
    distinct?: XpEventScalarFieldEnum | XpEventScalarFieldEnum[]
  }

  /**
   * XpEvent findFirstOrThrow
   */
  export type XpEventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the XpEvent
     */
    select?: XpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the XpEvent
     */
    omit?: XpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: XpEventInclude<ExtArgs> | null
    /**
     * Filter, which XpEvent to fetch.
     */
    where?: XpEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of XpEvents to fetch.
     */
    orderBy?: XpEventOrderByWithRelationInput | XpEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for XpEvents.
     */
    cursor?: XpEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` XpEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` XpEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of XpEvents.
     */
    distinct?: XpEventScalarFieldEnum | XpEventScalarFieldEnum[]
  }

  /**
   * XpEvent findMany
   */
  export type XpEventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the XpEvent
     */
    select?: XpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the XpEvent
     */
    omit?: XpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: XpEventInclude<ExtArgs> | null
    /**
     * Filter, which XpEvents to fetch.
     */
    where?: XpEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of XpEvents to fetch.
     */
    orderBy?: XpEventOrderByWithRelationInput | XpEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing XpEvents.
     */
    cursor?: XpEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` XpEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` XpEvents.
     */
    skip?: number
    distinct?: XpEventScalarFieldEnum | XpEventScalarFieldEnum[]
  }

  /**
   * XpEvent create
   */
  export type XpEventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the XpEvent
     */
    select?: XpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the XpEvent
     */
    omit?: XpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: XpEventInclude<ExtArgs> | null
    /**
     * The data needed to create a XpEvent.
     */
    data: XOR<XpEventCreateInput, XpEventUncheckedCreateInput>
  }

  /**
   * XpEvent createMany
   */
  export type XpEventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many XpEvents.
     */
    data: XpEventCreateManyInput | XpEventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * XpEvent createManyAndReturn
   */
  export type XpEventCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the XpEvent
     */
    select?: XpEventSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the XpEvent
     */
    omit?: XpEventOmit<ExtArgs> | null
    /**
     * The data used to create many XpEvents.
     */
    data: XpEventCreateManyInput | XpEventCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: XpEventIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * XpEvent update
   */
  export type XpEventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the XpEvent
     */
    select?: XpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the XpEvent
     */
    omit?: XpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: XpEventInclude<ExtArgs> | null
    /**
     * The data needed to update a XpEvent.
     */
    data: XOR<XpEventUpdateInput, XpEventUncheckedUpdateInput>
    /**
     * Choose, which XpEvent to update.
     */
    where: XpEventWhereUniqueInput
  }

  /**
   * XpEvent updateMany
   */
  export type XpEventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update XpEvents.
     */
    data: XOR<XpEventUpdateManyMutationInput, XpEventUncheckedUpdateManyInput>
    /**
     * Filter which XpEvents to update
     */
    where?: XpEventWhereInput
    /**
     * Limit how many XpEvents to update.
     */
    limit?: number
  }

  /**
   * XpEvent updateManyAndReturn
   */
  export type XpEventUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the XpEvent
     */
    select?: XpEventSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the XpEvent
     */
    omit?: XpEventOmit<ExtArgs> | null
    /**
     * The data used to update XpEvents.
     */
    data: XOR<XpEventUpdateManyMutationInput, XpEventUncheckedUpdateManyInput>
    /**
     * Filter which XpEvents to update
     */
    where?: XpEventWhereInput
    /**
     * Limit how many XpEvents to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: XpEventIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * XpEvent upsert
   */
  export type XpEventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the XpEvent
     */
    select?: XpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the XpEvent
     */
    omit?: XpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: XpEventInclude<ExtArgs> | null
    /**
     * The filter to search for the XpEvent to update in case it exists.
     */
    where: XpEventWhereUniqueInput
    /**
     * In case the XpEvent found by the `where` argument doesn't exist, create a new XpEvent with this data.
     */
    create: XOR<XpEventCreateInput, XpEventUncheckedCreateInput>
    /**
     * In case the XpEvent was found with the provided `where` argument, update it with this data.
     */
    update: XOR<XpEventUpdateInput, XpEventUncheckedUpdateInput>
  }

  /**
   * XpEvent delete
   */
  export type XpEventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the XpEvent
     */
    select?: XpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the XpEvent
     */
    omit?: XpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: XpEventInclude<ExtArgs> | null
    /**
     * Filter which XpEvent to delete.
     */
    where: XpEventWhereUniqueInput
  }

  /**
   * XpEvent deleteMany
   */
  export type XpEventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which XpEvents to delete
     */
    where?: XpEventWhereInput
    /**
     * Limit how many XpEvents to delete.
     */
    limit?: number
  }

  /**
   * XpEvent without action
   */
  export type XpEventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the XpEvent
     */
    select?: XpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the XpEvent
     */
    omit?: XpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: XpEventInclude<ExtArgs> | null
  }


  /**
   * Model RefreshToken
   */

  export type AggregateRefreshToken = {
    _count: RefreshTokenCountAggregateOutputType | null
    _avg: RefreshTokenAvgAggregateOutputType | null
    _sum: RefreshTokenSumAggregateOutputType | null
    _min: RefreshTokenMinAggregateOutputType | null
    _max: RefreshTokenMaxAggregateOutputType | null
  }

  export type RefreshTokenAvgAggregateOutputType = {
    id: number | null
  }

  export type RefreshTokenSumAggregateOutputType = {
    id: number | null
  }

  export type RefreshTokenMinAggregateOutputType = {
    id: number | null
    token: string | null
    userId: string | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RefreshTokenMaxAggregateOutputType = {
    id: number | null
    token: string | null
    userId: string | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RefreshTokenCountAggregateOutputType = {
    id: number
    token: number
    userId: number
    expiresAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RefreshTokenAvgAggregateInputType = {
    id?: true
  }

  export type RefreshTokenSumAggregateInputType = {
    id?: true
  }

  export type RefreshTokenMinAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RefreshTokenMaxAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RefreshTokenCountAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RefreshTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefreshToken to aggregate.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RefreshTokens
    **/
    _count?: true | RefreshTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RefreshTokenAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RefreshTokenSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RefreshTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RefreshTokenMaxAggregateInputType
  }

  export type GetRefreshTokenAggregateType<T extends RefreshTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateRefreshToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRefreshToken[P]>
      : GetScalarType<T[P], AggregateRefreshToken[P]>
  }




  export type RefreshTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithAggregationInput | RefreshTokenOrderByWithAggregationInput[]
    by: RefreshTokenScalarFieldEnum[] | RefreshTokenScalarFieldEnum
    having?: RefreshTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RefreshTokenCountAggregateInputType | true
    _avg?: RefreshTokenAvgAggregateInputType
    _sum?: RefreshTokenSumAggregateInputType
    _min?: RefreshTokenMinAggregateInputType
    _max?: RefreshTokenMaxAggregateInputType
  }

  export type RefreshTokenGroupByOutputType = {
    id: number
    token: string
    userId: string
    expiresAt: Date
    createdAt: Date
    updatedAt: Date
    _count: RefreshTokenCountAggregateOutputType | null
    _avg: RefreshTokenAvgAggregateOutputType | null
    _sum: RefreshTokenSumAggregateOutputType | null
    _min: RefreshTokenMinAggregateOutputType | null
    _max: RefreshTokenMaxAggregateOutputType | null
  }

  type GetRefreshTokenGroupByPayload<T extends RefreshTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RefreshTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RefreshTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RefreshTokenGroupByOutputType[P]>
            : GetScalarType<T[P], RefreshTokenGroupByOutputType[P]>
        }
      >
    >


  export type RefreshTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectScalar = {
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RefreshTokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "token" | "userId" | "expiresAt" | "createdAt" | "updatedAt", ExtArgs["result"]["refreshToken"]>
  export type RefreshTokenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type RefreshTokenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type RefreshTokenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $RefreshTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RefreshToken"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * Unique identifier for each refresh token
       */
      id: number
      /**
       * The refresh token value
       */
      token: string
      /**
       * User who owns this token
       */
      userId: string
      /**
       * Token expiration date
       */
      expiresAt: Date
      /**
       * Timestamps
       */
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["refreshToken"]>
    composites: {}
  }

  type RefreshTokenGetPayload<S extends boolean | null | undefined | RefreshTokenDefaultArgs> = $Result.GetResult<Prisma.$RefreshTokenPayload, S>

  type RefreshTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RefreshTokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RefreshTokenCountAggregateInputType | true
    }

  export interface RefreshTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RefreshToken'], meta: { name: 'RefreshToken' } }
    /**
     * Find zero or one RefreshToken that matches the filter.
     * @param {RefreshTokenFindUniqueArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RefreshTokenFindUniqueArgs>(args: SelectSubset<T, RefreshTokenFindUniqueArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RefreshToken that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RefreshTokenFindUniqueOrThrowArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RefreshTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, RefreshTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RefreshToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindFirstArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RefreshTokenFindFirstArgs>(args?: SelectSubset<T, RefreshTokenFindFirstArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RefreshToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindFirstOrThrowArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RefreshTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, RefreshTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RefreshTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RefreshTokens
     * const refreshTokens = await prisma.refreshToken.findMany()
     * 
     * // Get first 10 RefreshTokens
     * const refreshTokens = await prisma.refreshToken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const refreshTokenWithIdOnly = await prisma.refreshToken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RefreshTokenFindManyArgs>(args?: SelectSubset<T, RefreshTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RefreshToken.
     * @param {RefreshTokenCreateArgs} args - Arguments to create a RefreshToken.
     * @example
     * // Create one RefreshToken
     * const RefreshToken = await prisma.refreshToken.create({
     *   data: {
     *     // ... data to create a RefreshToken
     *   }
     * })
     * 
     */
    create<T extends RefreshTokenCreateArgs>(args: SelectSubset<T, RefreshTokenCreateArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RefreshTokens.
     * @param {RefreshTokenCreateManyArgs} args - Arguments to create many RefreshTokens.
     * @example
     * // Create many RefreshTokens
     * const refreshToken = await prisma.refreshToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RefreshTokenCreateManyArgs>(args?: SelectSubset<T, RefreshTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RefreshTokens and returns the data saved in the database.
     * @param {RefreshTokenCreateManyAndReturnArgs} args - Arguments to create many RefreshTokens.
     * @example
     * // Create many RefreshTokens
     * const refreshToken = await prisma.refreshToken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RefreshTokens and only return the `id`
     * const refreshTokenWithIdOnly = await prisma.refreshToken.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RefreshTokenCreateManyAndReturnArgs>(args?: SelectSubset<T, RefreshTokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RefreshToken.
     * @param {RefreshTokenDeleteArgs} args - Arguments to delete one RefreshToken.
     * @example
     * // Delete one RefreshToken
     * const RefreshToken = await prisma.refreshToken.delete({
     *   where: {
     *     // ... filter to delete one RefreshToken
     *   }
     * })
     * 
     */
    delete<T extends RefreshTokenDeleteArgs>(args: SelectSubset<T, RefreshTokenDeleteArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RefreshToken.
     * @param {RefreshTokenUpdateArgs} args - Arguments to update one RefreshToken.
     * @example
     * // Update one RefreshToken
     * const refreshToken = await prisma.refreshToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RefreshTokenUpdateArgs>(args: SelectSubset<T, RefreshTokenUpdateArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RefreshTokens.
     * @param {RefreshTokenDeleteManyArgs} args - Arguments to filter RefreshTokens to delete.
     * @example
     * // Delete a few RefreshTokens
     * const { count } = await prisma.refreshToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RefreshTokenDeleteManyArgs>(args?: SelectSubset<T, RefreshTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RefreshTokens
     * const refreshToken = await prisma.refreshToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RefreshTokenUpdateManyArgs>(args: SelectSubset<T, RefreshTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RefreshTokens and returns the data updated in the database.
     * @param {RefreshTokenUpdateManyAndReturnArgs} args - Arguments to update many RefreshTokens.
     * @example
     * // Update many RefreshTokens
     * const refreshToken = await prisma.refreshToken.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RefreshTokens and only return the `id`
     * const refreshTokenWithIdOnly = await prisma.refreshToken.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RefreshTokenUpdateManyAndReturnArgs>(args: SelectSubset<T, RefreshTokenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RefreshToken.
     * @param {RefreshTokenUpsertArgs} args - Arguments to update or create a RefreshToken.
     * @example
     * // Update or create a RefreshToken
     * const refreshToken = await prisma.refreshToken.upsert({
     *   create: {
     *     // ... data to create a RefreshToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RefreshToken we want to update
     *   }
     * })
     */
    upsert<T extends RefreshTokenUpsertArgs>(args: SelectSubset<T, RefreshTokenUpsertArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenCountArgs} args - Arguments to filter RefreshTokens to count.
     * @example
     * // Count the number of RefreshTokens
     * const count = await prisma.refreshToken.count({
     *   where: {
     *     // ... the filter for the RefreshTokens we want to count
     *   }
     * })
    **/
    count<T extends RefreshTokenCountArgs>(
      args?: Subset<T, RefreshTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RefreshTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RefreshTokenAggregateArgs>(args: Subset<T, RefreshTokenAggregateArgs>): Prisma.PrismaPromise<GetRefreshTokenAggregateType<T>>

    /**
     * Group by RefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RefreshTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RefreshTokenGroupByArgs['orderBy'] }
        : { orderBy?: RefreshTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RefreshTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRefreshTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RefreshToken model
   */
  readonly fields: RefreshTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RefreshToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RefreshTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RefreshToken model
   */
  interface RefreshTokenFieldRefs {
    readonly id: FieldRef<"RefreshToken", 'Int'>
    readonly token: FieldRef<"RefreshToken", 'String'>
    readonly userId: FieldRef<"RefreshToken", 'String'>
    readonly expiresAt: FieldRef<"RefreshToken", 'DateTime'>
    readonly createdAt: FieldRef<"RefreshToken", 'DateTime'>
    readonly updatedAt: FieldRef<"RefreshToken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RefreshToken findUnique
   */
  export type RefreshTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken findUniqueOrThrow
   */
  export type RefreshTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken findFirst
   */
  export type RefreshTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefreshTokens.
     */
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken findFirstOrThrow
   */
  export type RefreshTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefreshTokens.
     */
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken findMany
   */
  export type RefreshTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshTokens to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken create
   */
  export type RefreshTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to create a RefreshToken.
     */
    data: XOR<RefreshTokenCreateInput, RefreshTokenUncheckedCreateInput>
  }

  /**
   * RefreshToken createMany
   */
  export type RefreshTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RefreshTokens.
     */
    data: RefreshTokenCreateManyInput | RefreshTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RefreshToken createManyAndReturn
   */
  export type RefreshTokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * The data used to create many RefreshTokens.
     */
    data: RefreshTokenCreateManyInput | RefreshTokenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RefreshToken update
   */
  export type RefreshTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to update a RefreshToken.
     */
    data: XOR<RefreshTokenUpdateInput, RefreshTokenUncheckedUpdateInput>
    /**
     * Choose, which RefreshToken to update.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken updateMany
   */
  export type RefreshTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RefreshTokens.
     */
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyInput>
    /**
     * Filter which RefreshTokens to update
     */
    where?: RefreshTokenWhereInput
    /**
     * Limit how many RefreshTokens to update.
     */
    limit?: number
  }

  /**
   * RefreshToken updateManyAndReturn
   */
  export type RefreshTokenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * The data used to update RefreshTokens.
     */
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyInput>
    /**
     * Filter which RefreshTokens to update
     */
    where?: RefreshTokenWhereInput
    /**
     * Limit how many RefreshTokens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RefreshToken upsert
   */
  export type RefreshTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The filter to search for the RefreshToken to update in case it exists.
     */
    where: RefreshTokenWhereUniqueInput
    /**
     * In case the RefreshToken found by the `where` argument doesn't exist, create a new RefreshToken with this data.
     */
    create: XOR<RefreshTokenCreateInput, RefreshTokenUncheckedCreateInput>
    /**
     * In case the RefreshToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RefreshTokenUpdateInput, RefreshTokenUncheckedUpdateInput>
  }

  /**
   * RefreshToken delete
   */
  export type RefreshTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter which RefreshToken to delete.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken deleteMany
   */
  export type RefreshTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefreshTokens to delete
     */
    where?: RefreshTokenWhereInput
    /**
     * Limit how many RefreshTokens to delete.
     */
    limit?: number
  }

  /**
   * RefreshToken without action
   */
  export type RefreshTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
  }


  /**
   * Model HorseXpEvent
   */

  export type AggregateHorseXpEvent = {
    _count: HorseXpEventCountAggregateOutputType | null
    _avg: HorseXpEventAvgAggregateOutputType | null
    _sum: HorseXpEventSumAggregateOutputType | null
    _min: HorseXpEventMinAggregateOutputType | null
    _max: HorseXpEventMaxAggregateOutputType | null
  }

  export type HorseXpEventAvgAggregateOutputType = {
    id: number | null
    amount: number | null
    horseId: number | null
  }

  export type HorseXpEventSumAggregateOutputType = {
    id: number | null
    amount: number | null
    horseId: number | null
  }

  export type HorseXpEventMinAggregateOutputType = {
    id: number | null
    amount: number | null
    reason: string | null
    horseId: number | null
    timestamp: Date | null
  }

  export type HorseXpEventMaxAggregateOutputType = {
    id: number | null
    amount: number | null
    reason: string | null
    horseId: number | null
    timestamp: Date | null
  }

  export type HorseXpEventCountAggregateOutputType = {
    id: number
    amount: number
    reason: number
    horseId: number
    timestamp: number
    _all: number
  }


  export type HorseXpEventAvgAggregateInputType = {
    id?: true
    amount?: true
    horseId?: true
  }

  export type HorseXpEventSumAggregateInputType = {
    id?: true
    amount?: true
    horseId?: true
  }

  export type HorseXpEventMinAggregateInputType = {
    id?: true
    amount?: true
    reason?: true
    horseId?: true
    timestamp?: true
  }

  export type HorseXpEventMaxAggregateInputType = {
    id?: true
    amount?: true
    reason?: true
    horseId?: true
    timestamp?: true
  }

  export type HorseXpEventCountAggregateInputType = {
    id?: true
    amount?: true
    reason?: true
    horseId?: true
    timestamp?: true
    _all?: true
  }

  export type HorseXpEventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HorseXpEvent to aggregate.
     */
    where?: HorseXpEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HorseXpEvents to fetch.
     */
    orderBy?: HorseXpEventOrderByWithRelationInput | HorseXpEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HorseXpEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HorseXpEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HorseXpEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned HorseXpEvents
    **/
    _count?: true | HorseXpEventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HorseXpEventAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HorseXpEventSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HorseXpEventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HorseXpEventMaxAggregateInputType
  }

  export type GetHorseXpEventAggregateType<T extends HorseXpEventAggregateArgs> = {
        [P in keyof T & keyof AggregateHorseXpEvent]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHorseXpEvent[P]>
      : GetScalarType<T[P], AggregateHorseXpEvent[P]>
  }




  export type HorseXpEventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HorseXpEventWhereInput
    orderBy?: HorseXpEventOrderByWithAggregationInput | HorseXpEventOrderByWithAggregationInput[]
    by: HorseXpEventScalarFieldEnum[] | HorseXpEventScalarFieldEnum
    having?: HorseXpEventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HorseXpEventCountAggregateInputType | true
    _avg?: HorseXpEventAvgAggregateInputType
    _sum?: HorseXpEventSumAggregateInputType
    _min?: HorseXpEventMinAggregateInputType
    _max?: HorseXpEventMaxAggregateInputType
  }

  export type HorseXpEventGroupByOutputType = {
    id: number
    amount: number
    reason: string
    horseId: number
    timestamp: Date
    _count: HorseXpEventCountAggregateOutputType | null
    _avg: HorseXpEventAvgAggregateOutputType | null
    _sum: HorseXpEventSumAggregateOutputType | null
    _min: HorseXpEventMinAggregateOutputType | null
    _max: HorseXpEventMaxAggregateOutputType | null
  }

  type GetHorseXpEventGroupByPayload<T extends HorseXpEventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HorseXpEventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HorseXpEventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HorseXpEventGroupByOutputType[P]>
            : GetScalarType<T[P], HorseXpEventGroupByOutputType[P]>
        }
      >
    >


  export type HorseXpEventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    amount?: boolean
    reason?: boolean
    horseId?: boolean
    timestamp?: boolean
    horse?: boolean | HorseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["horseXpEvent"]>

  export type HorseXpEventSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    amount?: boolean
    reason?: boolean
    horseId?: boolean
    timestamp?: boolean
    horse?: boolean | HorseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["horseXpEvent"]>

  export type HorseXpEventSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    amount?: boolean
    reason?: boolean
    horseId?: boolean
    timestamp?: boolean
    horse?: boolean | HorseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["horseXpEvent"]>

  export type HorseXpEventSelectScalar = {
    id?: boolean
    amount?: boolean
    reason?: boolean
    horseId?: boolean
    timestamp?: boolean
  }

  export type HorseXpEventOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "amount" | "reason" | "horseId" | "timestamp", ExtArgs["result"]["horseXpEvent"]>
  export type HorseXpEventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horse?: boolean | HorseDefaultArgs<ExtArgs>
  }
  export type HorseXpEventIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horse?: boolean | HorseDefaultArgs<ExtArgs>
  }
  export type HorseXpEventIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horse?: boolean | HorseDefaultArgs<ExtArgs>
  }

  export type $HorseXpEventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "HorseXpEvent"
    objects: {
      horse: Prisma.$HorsePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      /**
       * Unique identifier for each horse XP event
       */
      id: number
      /**
       * XP details
       */
      amount: number
      reason: string
      /**
       * Foreign key
       */
      horseId: number
      /**
       * Timestamps
       */
      timestamp: Date
    }, ExtArgs["result"]["horseXpEvent"]>
    composites: {}
  }

  type HorseXpEventGetPayload<S extends boolean | null | undefined | HorseXpEventDefaultArgs> = $Result.GetResult<Prisma.$HorseXpEventPayload, S>

  type HorseXpEventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<HorseXpEventFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HorseXpEventCountAggregateInputType | true
    }

  export interface HorseXpEventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HorseXpEvent'], meta: { name: 'HorseXpEvent' } }
    /**
     * Find zero or one HorseXpEvent that matches the filter.
     * @param {HorseXpEventFindUniqueArgs} args - Arguments to find a HorseXpEvent
     * @example
     * // Get one HorseXpEvent
     * const horseXpEvent = await prisma.horseXpEvent.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HorseXpEventFindUniqueArgs>(args: SelectSubset<T, HorseXpEventFindUniqueArgs<ExtArgs>>): Prisma__HorseXpEventClient<$Result.GetResult<Prisma.$HorseXpEventPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one HorseXpEvent that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {HorseXpEventFindUniqueOrThrowArgs} args - Arguments to find a HorseXpEvent
     * @example
     * // Get one HorseXpEvent
     * const horseXpEvent = await prisma.horseXpEvent.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HorseXpEventFindUniqueOrThrowArgs>(args: SelectSubset<T, HorseXpEventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HorseXpEventClient<$Result.GetResult<Prisma.$HorseXpEventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HorseXpEvent that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorseXpEventFindFirstArgs} args - Arguments to find a HorseXpEvent
     * @example
     * // Get one HorseXpEvent
     * const horseXpEvent = await prisma.horseXpEvent.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HorseXpEventFindFirstArgs>(args?: SelectSubset<T, HorseXpEventFindFirstArgs<ExtArgs>>): Prisma__HorseXpEventClient<$Result.GetResult<Prisma.$HorseXpEventPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HorseXpEvent that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorseXpEventFindFirstOrThrowArgs} args - Arguments to find a HorseXpEvent
     * @example
     * // Get one HorseXpEvent
     * const horseXpEvent = await prisma.horseXpEvent.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HorseXpEventFindFirstOrThrowArgs>(args?: SelectSubset<T, HorseXpEventFindFirstOrThrowArgs<ExtArgs>>): Prisma__HorseXpEventClient<$Result.GetResult<Prisma.$HorseXpEventPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more HorseXpEvents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorseXpEventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HorseXpEvents
     * const horseXpEvents = await prisma.horseXpEvent.findMany()
     * 
     * // Get first 10 HorseXpEvents
     * const horseXpEvents = await prisma.horseXpEvent.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const horseXpEventWithIdOnly = await prisma.horseXpEvent.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HorseXpEventFindManyArgs>(args?: SelectSubset<T, HorseXpEventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HorseXpEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a HorseXpEvent.
     * @param {HorseXpEventCreateArgs} args - Arguments to create a HorseXpEvent.
     * @example
     * // Create one HorseXpEvent
     * const HorseXpEvent = await prisma.horseXpEvent.create({
     *   data: {
     *     // ... data to create a HorseXpEvent
     *   }
     * })
     * 
     */
    create<T extends HorseXpEventCreateArgs>(args: SelectSubset<T, HorseXpEventCreateArgs<ExtArgs>>): Prisma__HorseXpEventClient<$Result.GetResult<Prisma.$HorseXpEventPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many HorseXpEvents.
     * @param {HorseXpEventCreateManyArgs} args - Arguments to create many HorseXpEvents.
     * @example
     * // Create many HorseXpEvents
     * const horseXpEvent = await prisma.horseXpEvent.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HorseXpEventCreateManyArgs>(args?: SelectSubset<T, HorseXpEventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many HorseXpEvents and returns the data saved in the database.
     * @param {HorseXpEventCreateManyAndReturnArgs} args - Arguments to create many HorseXpEvents.
     * @example
     * // Create many HorseXpEvents
     * const horseXpEvent = await prisma.horseXpEvent.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many HorseXpEvents and only return the `id`
     * const horseXpEventWithIdOnly = await prisma.horseXpEvent.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HorseXpEventCreateManyAndReturnArgs>(args?: SelectSubset<T, HorseXpEventCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HorseXpEventPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a HorseXpEvent.
     * @param {HorseXpEventDeleteArgs} args - Arguments to delete one HorseXpEvent.
     * @example
     * // Delete one HorseXpEvent
     * const HorseXpEvent = await prisma.horseXpEvent.delete({
     *   where: {
     *     // ... filter to delete one HorseXpEvent
     *   }
     * })
     * 
     */
    delete<T extends HorseXpEventDeleteArgs>(args: SelectSubset<T, HorseXpEventDeleteArgs<ExtArgs>>): Prisma__HorseXpEventClient<$Result.GetResult<Prisma.$HorseXpEventPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one HorseXpEvent.
     * @param {HorseXpEventUpdateArgs} args - Arguments to update one HorseXpEvent.
     * @example
     * // Update one HorseXpEvent
     * const horseXpEvent = await prisma.horseXpEvent.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HorseXpEventUpdateArgs>(args: SelectSubset<T, HorseXpEventUpdateArgs<ExtArgs>>): Prisma__HorseXpEventClient<$Result.GetResult<Prisma.$HorseXpEventPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more HorseXpEvents.
     * @param {HorseXpEventDeleteManyArgs} args - Arguments to filter HorseXpEvents to delete.
     * @example
     * // Delete a few HorseXpEvents
     * const { count } = await prisma.horseXpEvent.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HorseXpEventDeleteManyArgs>(args?: SelectSubset<T, HorseXpEventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HorseXpEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorseXpEventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HorseXpEvents
     * const horseXpEvent = await prisma.horseXpEvent.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HorseXpEventUpdateManyArgs>(args: SelectSubset<T, HorseXpEventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HorseXpEvents and returns the data updated in the database.
     * @param {HorseXpEventUpdateManyAndReturnArgs} args - Arguments to update many HorseXpEvents.
     * @example
     * // Update many HorseXpEvents
     * const horseXpEvent = await prisma.horseXpEvent.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more HorseXpEvents and only return the `id`
     * const horseXpEventWithIdOnly = await prisma.horseXpEvent.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends HorseXpEventUpdateManyAndReturnArgs>(args: SelectSubset<T, HorseXpEventUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HorseXpEventPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one HorseXpEvent.
     * @param {HorseXpEventUpsertArgs} args - Arguments to update or create a HorseXpEvent.
     * @example
     * // Update or create a HorseXpEvent
     * const horseXpEvent = await prisma.horseXpEvent.upsert({
     *   create: {
     *     // ... data to create a HorseXpEvent
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HorseXpEvent we want to update
     *   }
     * })
     */
    upsert<T extends HorseXpEventUpsertArgs>(args: SelectSubset<T, HorseXpEventUpsertArgs<ExtArgs>>): Prisma__HorseXpEventClient<$Result.GetResult<Prisma.$HorseXpEventPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of HorseXpEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorseXpEventCountArgs} args - Arguments to filter HorseXpEvents to count.
     * @example
     * // Count the number of HorseXpEvents
     * const count = await prisma.horseXpEvent.count({
     *   where: {
     *     // ... the filter for the HorseXpEvents we want to count
     *   }
     * })
    **/
    count<T extends HorseXpEventCountArgs>(
      args?: Subset<T, HorseXpEventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HorseXpEventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HorseXpEvent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorseXpEventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HorseXpEventAggregateArgs>(args: Subset<T, HorseXpEventAggregateArgs>): Prisma.PrismaPromise<GetHorseXpEventAggregateType<T>>

    /**
     * Group by HorseXpEvent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorseXpEventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HorseXpEventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HorseXpEventGroupByArgs['orderBy'] }
        : { orderBy?: HorseXpEventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HorseXpEventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHorseXpEventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the HorseXpEvent model
   */
  readonly fields: HorseXpEventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for HorseXpEvent.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HorseXpEventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    horse<T extends HorseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, HorseDefaultArgs<ExtArgs>>): Prisma__HorseClient<$Result.GetResult<Prisma.$HorsePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the HorseXpEvent model
   */
  interface HorseXpEventFieldRefs {
    readonly id: FieldRef<"HorseXpEvent", 'Int'>
    readonly amount: FieldRef<"HorseXpEvent", 'Int'>
    readonly reason: FieldRef<"HorseXpEvent", 'String'>
    readonly horseId: FieldRef<"HorseXpEvent", 'Int'>
    readonly timestamp: FieldRef<"HorseXpEvent", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * HorseXpEvent findUnique
   */
  export type HorseXpEventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorseXpEvent
     */
    select?: HorseXpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorseXpEvent
     */
    omit?: HorseXpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseXpEventInclude<ExtArgs> | null
    /**
     * Filter, which HorseXpEvent to fetch.
     */
    where: HorseXpEventWhereUniqueInput
  }

  /**
   * HorseXpEvent findUniqueOrThrow
   */
  export type HorseXpEventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorseXpEvent
     */
    select?: HorseXpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorseXpEvent
     */
    omit?: HorseXpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseXpEventInclude<ExtArgs> | null
    /**
     * Filter, which HorseXpEvent to fetch.
     */
    where: HorseXpEventWhereUniqueInput
  }

  /**
   * HorseXpEvent findFirst
   */
  export type HorseXpEventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorseXpEvent
     */
    select?: HorseXpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorseXpEvent
     */
    omit?: HorseXpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseXpEventInclude<ExtArgs> | null
    /**
     * Filter, which HorseXpEvent to fetch.
     */
    where?: HorseXpEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HorseXpEvents to fetch.
     */
    orderBy?: HorseXpEventOrderByWithRelationInput | HorseXpEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HorseXpEvents.
     */
    cursor?: HorseXpEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HorseXpEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HorseXpEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HorseXpEvents.
     */
    distinct?: HorseXpEventScalarFieldEnum | HorseXpEventScalarFieldEnum[]
  }

  /**
   * HorseXpEvent findFirstOrThrow
   */
  export type HorseXpEventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorseXpEvent
     */
    select?: HorseXpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorseXpEvent
     */
    omit?: HorseXpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseXpEventInclude<ExtArgs> | null
    /**
     * Filter, which HorseXpEvent to fetch.
     */
    where?: HorseXpEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HorseXpEvents to fetch.
     */
    orderBy?: HorseXpEventOrderByWithRelationInput | HorseXpEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HorseXpEvents.
     */
    cursor?: HorseXpEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HorseXpEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HorseXpEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HorseXpEvents.
     */
    distinct?: HorseXpEventScalarFieldEnum | HorseXpEventScalarFieldEnum[]
  }

  /**
   * HorseXpEvent findMany
   */
  export type HorseXpEventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorseXpEvent
     */
    select?: HorseXpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorseXpEvent
     */
    omit?: HorseXpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseXpEventInclude<ExtArgs> | null
    /**
     * Filter, which HorseXpEvents to fetch.
     */
    where?: HorseXpEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HorseXpEvents to fetch.
     */
    orderBy?: HorseXpEventOrderByWithRelationInput | HorseXpEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing HorseXpEvents.
     */
    cursor?: HorseXpEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HorseXpEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HorseXpEvents.
     */
    skip?: number
    distinct?: HorseXpEventScalarFieldEnum | HorseXpEventScalarFieldEnum[]
  }

  /**
   * HorseXpEvent create
   */
  export type HorseXpEventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorseXpEvent
     */
    select?: HorseXpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorseXpEvent
     */
    omit?: HorseXpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseXpEventInclude<ExtArgs> | null
    /**
     * The data needed to create a HorseXpEvent.
     */
    data: XOR<HorseXpEventCreateInput, HorseXpEventUncheckedCreateInput>
  }

  /**
   * HorseXpEvent createMany
   */
  export type HorseXpEventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many HorseXpEvents.
     */
    data: HorseXpEventCreateManyInput | HorseXpEventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HorseXpEvent createManyAndReturn
   */
  export type HorseXpEventCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorseXpEvent
     */
    select?: HorseXpEventSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the HorseXpEvent
     */
    omit?: HorseXpEventOmit<ExtArgs> | null
    /**
     * The data used to create many HorseXpEvents.
     */
    data: HorseXpEventCreateManyInput | HorseXpEventCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseXpEventIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * HorseXpEvent update
   */
  export type HorseXpEventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorseXpEvent
     */
    select?: HorseXpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorseXpEvent
     */
    omit?: HorseXpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseXpEventInclude<ExtArgs> | null
    /**
     * The data needed to update a HorseXpEvent.
     */
    data: XOR<HorseXpEventUpdateInput, HorseXpEventUncheckedUpdateInput>
    /**
     * Choose, which HorseXpEvent to update.
     */
    where: HorseXpEventWhereUniqueInput
  }

  /**
   * HorseXpEvent updateMany
   */
  export type HorseXpEventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update HorseXpEvents.
     */
    data: XOR<HorseXpEventUpdateManyMutationInput, HorseXpEventUncheckedUpdateManyInput>
    /**
     * Filter which HorseXpEvents to update
     */
    where?: HorseXpEventWhereInput
    /**
     * Limit how many HorseXpEvents to update.
     */
    limit?: number
  }

  /**
   * HorseXpEvent updateManyAndReturn
   */
  export type HorseXpEventUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorseXpEvent
     */
    select?: HorseXpEventSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the HorseXpEvent
     */
    omit?: HorseXpEventOmit<ExtArgs> | null
    /**
     * The data used to update HorseXpEvents.
     */
    data: XOR<HorseXpEventUpdateManyMutationInput, HorseXpEventUncheckedUpdateManyInput>
    /**
     * Filter which HorseXpEvents to update
     */
    where?: HorseXpEventWhereInput
    /**
     * Limit how many HorseXpEvents to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseXpEventIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * HorseXpEvent upsert
   */
  export type HorseXpEventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorseXpEvent
     */
    select?: HorseXpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorseXpEvent
     */
    omit?: HorseXpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseXpEventInclude<ExtArgs> | null
    /**
     * The filter to search for the HorseXpEvent to update in case it exists.
     */
    where: HorseXpEventWhereUniqueInput
    /**
     * In case the HorseXpEvent found by the `where` argument doesn't exist, create a new HorseXpEvent with this data.
     */
    create: XOR<HorseXpEventCreateInput, HorseXpEventUncheckedCreateInput>
    /**
     * In case the HorseXpEvent was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HorseXpEventUpdateInput, HorseXpEventUncheckedUpdateInput>
  }

  /**
   * HorseXpEvent delete
   */
  export type HorseXpEventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorseXpEvent
     */
    select?: HorseXpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorseXpEvent
     */
    omit?: HorseXpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseXpEventInclude<ExtArgs> | null
    /**
     * Filter which HorseXpEvent to delete.
     */
    where: HorseXpEventWhereUniqueInput
  }

  /**
   * HorseXpEvent deleteMany
   */
  export type HorseXpEventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HorseXpEvents to delete
     */
    where?: HorseXpEventWhereInput
    /**
     * Limit how many HorseXpEvents to delete.
     */
    limit?: number
  }

  /**
   * HorseXpEvent without action
   */
  export type HorseXpEventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorseXpEvent
     */
    select?: HorseXpEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HorseXpEvent
     */
    omit?: HorseXpEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorseXpEventInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    username: 'username',
    email: 'email',
    password: 'password',
    firstName: 'firstName',
    lastName: 'lastName',
    money: 'money',
    level: 'level',
    xp: 'xp',
    settings: 'settings',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const BreedScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description'
  };

  export type BreedScalarFieldEnum = (typeof BreedScalarFieldEnum)[keyof typeof BreedScalarFieldEnum]


  export const StableScalarFieldEnum: {
    id: 'id',
    name: 'name',
    location: 'location'
  };

  export type StableScalarFieldEnum = (typeof StableScalarFieldEnum)[keyof typeof StableScalarFieldEnum]


  export const HorseScalarFieldEnum: {
    id: 'id',
    name: 'name',
    sex: 'sex',
    dateOfBirth: 'dateOfBirth',
    breedId: 'breedId',
    ownerId: 'ownerId',
    stableId: 'stableId',
    genotype: 'genotype',
    phenotypicMarkings: 'phenotypicMarkings',
    finalDisplayColor: 'finalDisplayColor',
    shade: 'shade',
    imageUrl: 'imageUrl',
    trait: 'trait',
    temperament: 'temperament',
    personality: 'personality',
    precision: 'precision',
    strength: 'strength',
    speed: 'speed',
    agility: 'agility',
    endurance: 'endurance',
    intelligence: 'intelligence',
    stamina: 'stamina',
    balance: 'balance',
    boldness: 'boldness',
    flexibility: 'flexibility',
    obedience: 'obedience',
    focus: 'focus',
    totalEarnings: 'totalEarnings',
    sireId: 'sireId',
    damId: 'damId',
    studStatus: 'studStatus',
    studFee: 'studFee',
    lastBredDate: 'lastBredDate',
    forSale: 'forSale',
    salePrice: 'salePrice',
    healthStatus: 'healthStatus',
    lastVettedDate: 'lastVettedDate',
    bondScore: 'bondScore',
    stressLevel: 'stressLevel',
    daysGroomedInARow: 'daysGroomedInARow',
    burnoutStatus: 'burnoutStatus',
    taskLog: 'taskLog',
    consecutiveDaysFoalCare: 'consecutiveDaysFoalCare',
    lastGroomed: 'lastGroomed',
    tack: 'tack',
    age: 'age',
    userId: 'userId',
    trainingCooldown: 'trainingCooldown',
    earnings: 'earnings',
    rider: 'rider',
    disciplineScores: 'disciplineScores',
    epigeneticModifiers: 'epigeneticModifiers',
    horseXp: 'horseXp',
    availableStatPoints: 'availableStatPoints',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type HorseScalarFieldEnum = (typeof HorseScalarFieldEnum)[keyof typeof HorseScalarFieldEnum]


  export const GroomScalarFieldEnum: {
    id: 'id',
    name: 'name',
    speciality: 'speciality',
    experience: 'experience',
    skillLevel: 'skillLevel',
    personality: 'personality',
    sessionRate: 'sessionRate',
    availability: 'availability',
    bio: 'bio',
    imageUrl: 'imageUrl',
    isActive: 'isActive',
    hiredDate: 'hiredDate',
    userId: 'userId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type GroomScalarFieldEnum = (typeof GroomScalarFieldEnum)[keyof typeof GroomScalarFieldEnum]


  export const GroomAssignmentScalarFieldEnum: {
    id: 'id',
    startDate: 'startDate',
    endDate: 'endDate',
    isActive: 'isActive',
    isDefault: 'isDefault',
    priority: 'priority',
    notes: 'notes',
    foalId: 'foalId',
    groomId: 'groomId',
    userId: 'userId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type GroomAssignmentScalarFieldEnum = (typeof GroomAssignmentScalarFieldEnum)[keyof typeof GroomAssignmentScalarFieldEnum]


  export const GroomInteractionScalarFieldEnum: {
    id: 'id',
    interactionType: 'interactionType',
    duration: 'duration',
    bondingChange: 'bondingChange',
    stressChange: 'stressChange',
    quality: 'quality',
    notes: 'notes',
    cost: 'cost',
    foalId: 'foalId',
    groomId: 'groomId',
    assignmentId: 'assignmentId',
    timestamp: 'timestamp',
    createdAt: 'createdAt'
  };

  export type GroomInteractionScalarFieldEnum = (typeof GroomInteractionScalarFieldEnum)[keyof typeof GroomInteractionScalarFieldEnum]


  export const ShowScalarFieldEnum: {
    id: 'id',
    name: 'name',
    discipline: 'discipline',
    levelMin: 'levelMin',
    levelMax: 'levelMax',
    entryFee: 'entryFee',
    prize: 'prize',
    runDate: 'runDate',
    hostUserId: 'hostUserId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ShowScalarFieldEnum = (typeof ShowScalarFieldEnum)[keyof typeof ShowScalarFieldEnum]


  export const CompetitionResultScalarFieldEnum: {
    id: 'id',
    score: 'score',
    placement: 'placement',
    discipline: 'discipline',
    runDate: 'runDate',
    showName: 'showName',
    prizeWon: 'prizeWon',
    statGains: 'statGains',
    horseId: 'horseId',
    showId: 'showId',
    createdAt: 'createdAt'
  };

  export type CompetitionResultScalarFieldEnum = (typeof CompetitionResultScalarFieldEnum)[keyof typeof CompetitionResultScalarFieldEnum]


  export const TrainingLogScalarFieldEnum: {
    id: 'id',
    discipline: 'discipline',
    trainedAt: 'trainedAt',
    horseId: 'horseId'
  };

  export type TrainingLogScalarFieldEnum = (typeof TrainingLogScalarFieldEnum)[keyof typeof TrainingLogScalarFieldEnum]


  export const FoalDevelopmentScalarFieldEnum: {
    id: 'id',
    currentDay: 'currentDay',
    bondingLevel: 'bondingLevel',
    stressLevel: 'stressLevel',
    completedActivities: 'completedActivities',
    foalId: 'foalId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FoalDevelopmentScalarFieldEnum = (typeof FoalDevelopmentScalarFieldEnum)[keyof typeof FoalDevelopmentScalarFieldEnum]


  export const FoalActivityScalarFieldEnum: {
    id: 'id',
    day: 'day',
    activityType: 'activityType',
    outcome: 'outcome',
    bondingChange: 'bondingChange',
    stressChange: 'stressChange',
    description: 'description',
    foalId: 'foalId',
    createdAt: 'createdAt'
  };

  export type FoalActivityScalarFieldEnum = (typeof FoalActivityScalarFieldEnum)[keyof typeof FoalActivityScalarFieldEnum]


  export const FoalTrainingHistoryScalarFieldEnum: {
    id: 'id',
    day: 'day',
    activity: 'activity',
    outcome: 'outcome',
    bondChange: 'bondChange',
    stressChange: 'stressChange',
    horseId: 'horseId',
    timestamp: 'timestamp',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FoalTrainingHistoryScalarFieldEnum = (typeof FoalTrainingHistoryScalarFieldEnum)[keyof typeof FoalTrainingHistoryScalarFieldEnum]


  export const XpEventScalarFieldEnum: {
    id: 'id',
    amount: 'amount',
    reason: 'reason',
    userId: 'userId',
    timestamp: 'timestamp'
  };

  export type XpEventScalarFieldEnum = (typeof XpEventScalarFieldEnum)[keyof typeof XpEventScalarFieldEnum]


  export const RefreshTokenScalarFieldEnum: {
    id: 'id',
    token: 'token',
    userId: 'userId',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RefreshTokenScalarFieldEnum = (typeof RefreshTokenScalarFieldEnum)[keyof typeof RefreshTokenScalarFieldEnum]


  export const HorseXpEventScalarFieldEnum: {
    id: 'id',
    amount: 'amount',
    reason: 'reason',
    horseId: 'horseId',
    timestamp: 'timestamp'
  };

  export type HorseXpEventScalarFieldEnum = (typeof HorseXpEventScalarFieldEnum)[keyof typeof HorseXpEventScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    money?: IntFilter<"User"> | number
    level?: IntFilter<"User"> | number
    xp?: IntFilter<"User"> | number
    settings?: JsonFilter<"User">
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    groomAssignments?: GroomAssignmentListRelationFilter
    grooms?: GroomListRelationFilter
    horses?: HorseListRelationFilter
    refreshTokens?: RefreshTokenListRelationFilter
    shows?: ShowListRelationFilter
    xpEvents?: XpEventListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    money?: SortOrder
    level?: SortOrder
    xp?: SortOrder
    settings?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    groomAssignments?: GroomAssignmentOrderByRelationAggregateInput
    grooms?: GroomOrderByRelationAggregateInput
    horses?: HorseOrderByRelationAggregateInput
    refreshTokens?: RefreshTokenOrderByRelationAggregateInput
    shows?: ShowOrderByRelationAggregateInput
    xpEvents?: XpEventOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    username?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    money?: IntFilter<"User"> | number
    level?: IntFilter<"User"> | number
    xp?: IntFilter<"User"> | number
    settings?: JsonFilter<"User">
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    groomAssignments?: GroomAssignmentListRelationFilter
    grooms?: GroomListRelationFilter
    horses?: HorseListRelationFilter
    refreshTokens?: RefreshTokenListRelationFilter
    shows?: ShowListRelationFilter
    xpEvents?: XpEventListRelationFilter
  }, "id" | "username" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    money?: SortOrder
    level?: SortOrder
    xp?: SortOrder
    settings?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    username?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    firstName?: StringWithAggregatesFilter<"User"> | string
    lastName?: StringWithAggregatesFilter<"User"> | string
    money?: IntWithAggregatesFilter<"User"> | number
    level?: IntWithAggregatesFilter<"User"> | number
    xp?: IntWithAggregatesFilter<"User"> | number
    settings?: JsonWithAggregatesFilter<"User">
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type BreedWhereInput = {
    AND?: BreedWhereInput | BreedWhereInput[]
    OR?: BreedWhereInput[]
    NOT?: BreedWhereInput | BreedWhereInput[]
    id?: IntFilter<"Breed"> | number
    name?: StringFilter<"Breed"> | string
    description?: StringNullableFilter<"Breed"> | string | null
    horses?: HorseListRelationFilter
  }

  export type BreedOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    horses?: HorseOrderByRelationAggregateInput
  }

  export type BreedWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: BreedWhereInput | BreedWhereInput[]
    OR?: BreedWhereInput[]
    NOT?: BreedWhereInput | BreedWhereInput[]
    name?: StringFilter<"Breed"> | string
    description?: StringNullableFilter<"Breed"> | string | null
    horses?: HorseListRelationFilter
  }, "id">

  export type BreedOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    _count?: BreedCountOrderByAggregateInput
    _avg?: BreedAvgOrderByAggregateInput
    _max?: BreedMaxOrderByAggregateInput
    _min?: BreedMinOrderByAggregateInput
    _sum?: BreedSumOrderByAggregateInput
  }

  export type BreedScalarWhereWithAggregatesInput = {
    AND?: BreedScalarWhereWithAggregatesInput | BreedScalarWhereWithAggregatesInput[]
    OR?: BreedScalarWhereWithAggregatesInput[]
    NOT?: BreedScalarWhereWithAggregatesInput | BreedScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Breed"> | number
    name?: StringWithAggregatesFilter<"Breed"> | string
    description?: StringNullableWithAggregatesFilter<"Breed"> | string | null
  }

  export type StableWhereInput = {
    AND?: StableWhereInput | StableWhereInput[]
    OR?: StableWhereInput[]
    NOT?: StableWhereInput | StableWhereInput[]
    id?: IntFilter<"Stable"> | number
    name?: StringFilter<"Stable"> | string
    location?: StringNullableFilter<"Stable"> | string | null
    horses?: HorseListRelationFilter
  }

  export type StableOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    location?: SortOrderInput | SortOrder
    horses?: HorseOrderByRelationAggregateInput
  }

  export type StableWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: StableWhereInput | StableWhereInput[]
    OR?: StableWhereInput[]
    NOT?: StableWhereInput | StableWhereInput[]
    name?: StringFilter<"Stable"> | string
    location?: StringNullableFilter<"Stable"> | string | null
    horses?: HorseListRelationFilter
  }, "id">

  export type StableOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    location?: SortOrderInput | SortOrder
    _count?: StableCountOrderByAggregateInput
    _avg?: StableAvgOrderByAggregateInput
    _max?: StableMaxOrderByAggregateInput
    _min?: StableMinOrderByAggregateInput
    _sum?: StableSumOrderByAggregateInput
  }

  export type StableScalarWhereWithAggregatesInput = {
    AND?: StableScalarWhereWithAggregatesInput | StableScalarWhereWithAggregatesInput[]
    OR?: StableScalarWhereWithAggregatesInput[]
    NOT?: StableScalarWhereWithAggregatesInput | StableScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Stable"> | number
    name?: StringWithAggregatesFilter<"Stable"> | string
    location?: StringNullableWithAggregatesFilter<"Stable"> | string | null
  }

  export type HorseWhereInput = {
    AND?: HorseWhereInput | HorseWhereInput[]
    OR?: HorseWhereInput[]
    NOT?: HorseWhereInput | HorseWhereInput[]
    id?: IntFilter<"Horse"> | number
    name?: StringFilter<"Horse"> | string
    sex?: StringFilter<"Horse"> | string
    dateOfBirth?: DateTimeFilter<"Horse"> | Date | string
    breedId?: IntNullableFilter<"Horse"> | number | null
    ownerId?: StringNullableFilter<"Horse"> | string | null
    stableId?: IntNullableFilter<"Horse"> | number | null
    genotype?: JsonNullableFilter<"Horse">
    phenotypicMarkings?: JsonNullableFilter<"Horse">
    finalDisplayColor?: StringNullableFilter<"Horse"> | string | null
    shade?: StringNullableFilter<"Horse"> | string | null
    imageUrl?: StringNullableFilter<"Horse"> | string | null
    trait?: StringNullableFilter<"Horse"> | string | null
    temperament?: StringNullableFilter<"Horse"> | string | null
    personality?: StringNullableFilter<"Horse"> | string | null
    precision?: IntNullableFilter<"Horse"> | number | null
    strength?: IntNullableFilter<"Horse"> | number | null
    speed?: IntNullableFilter<"Horse"> | number | null
    agility?: IntNullableFilter<"Horse"> | number | null
    endurance?: IntNullableFilter<"Horse"> | number | null
    intelligence?: IntNullableFilter<"Horse"> | number | null
    stamina?: IntNullableFilter<"Horse"> | number | null
    balance?: IntNullableFilter<"Horse"> | number | null
    boldness?: IntNullableFilter<"Horse"> | number | null
    flexibility?: IntNullableFilter<"Horse"> | number | null
    obedience?: IntNullableFilter<"Horse"> | number | null
    focus?: IntNullableFilter<"Horse"> | number | null
    totalEarnings?: IntNullableFilter<"Horse"> | number | null
    sireId?: IntNullableFilter<"Horse"> | number | null
    damId?: IntNullableFilter<"Horse"> | number | null
    studStatus?: StringNullableFilter<"Horse"> | string | null
    studFee?: IntNullableFilter<"Horse"> | number | null
    lastBredDate?: DateTimeNullableFilter<"Horse"> | Date | string | null
    forSale?: BoolNullableFilter<"Horse"> | boolean | null
    salePrice?: IntNullableFilter<"Horse"> | number | null
    healthStatus?: StringNullableFilter<"Horse"> | string | null
    lastVettedDate?: DateTimeNullableFilter<"Horse"> | Date | string | null
    bondScore?: IntNullableFilter<"Horse"> | number | null
    stressLevel?: IntNullableFilter<"Horse"> | number | null
    daysGroomedInARow?: IntNullableFilter<"Horse"> | number | null
    burnoutStatus?: StringNullableFilter<"Horse"> | string | null
    taskLog?: JsonNullableFilter<"Horse">
    consecutiveDaysFoalCare?: IntNullableFilter<"Horse"> | number | null
    lastGroomed?: DateTimeNullableFilter<"Horse"> | Date | string | null
    tack?: JsonNullableFilter<"Horse">
    age?: IntNullableFilter<"Horse"> | number | null
    userId?: StringNullableFilter<"Horse"> | string | null
    trainingCooldown?: DateTimeNullableFilter<"Horse"> | Date | string | null
    earnings?: DecimalNullableFilter<"Horse"> | Decimal | DecimalJsLike | number | string | null
    rider?: JsonNullableFilter<"Horse">
    disciplineScores?: JsonNullableFilter<"Horse">
    epigeneticModifiers?: JsonNullableFilter<"Horse">
    horseXp?: IntNullableFilter<"Horse"> | number | null
    availableStatPoints?: IntNullableFilter<"Horse"> | number | null
    createdAt?: DateTimeNullableFilter<"Horse"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Horse"> | Date | string | null
    competitionResults?: CompetitionResultListRelationFilter
    foalActivities?: FoalActivityListRelationFilter
    foalDevelopment?: XOR<FoalDevelopmentNullableScalarRelationFilter, FoalDevelopmentWhereInput> | null
    foalTrainingHistory?: FoalTrainingHistoryListRelationFilter
    groomAssignments?: GroomAssignmentListRelationFilter
    groomInteractions?: GroomInteractionListRelationFilter
    horseXpEvents?: HorseXpEventListRelationFilter
    breed?: XOR<BreedNullableScalarRelationFilter, BreedWhereInput> | null
    dam?: XOR<HorseNullableScalarRelationFilter, HorseWhereInput> | null
    damOffspring?: HorseListRelationFilter
    sire?: XOR<HorseNullableScalarRelationFilter, HorseWhereInput> | null
    sireOffspring?: HorseListRelationFilter
    stable?: XOR<StableNullableScalarRelationFilter, StableWhereInput> | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    trainingLogs?: TrainingLogListRelationFilter
  }

  export type HorseOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    sex?: SortOrder
    dateOfBirth?: SortOrder
    breedId?: SortOrderInput | SortOrder
    ownerId?: SortOrderInput | SortOrder
    stableId?: SortOrderInput | SortOrder
    genotype?: SortOrderInput | SortOrder
    phenotypicMarkings?: SortOrderInput | SortOrder
    finalDisplayColor?: SortOrderInput | SortOrder
    shade?: SortOrderInput | SortOrder
    imageUrl?: SortOrderInput | SortOrder
    trait?: SortOrderInput | SortOrder
    temperament?: SortOrderInput | SortOrder
    personality?: SortOrderInput | SortOrder
    precision?: SortOrderInput | SortOrder
    strength?: SortOrderInput | SortOrder
    speed?: SortOrderInput | SortOrder
    agility?: SortOrderInput | SortOrder
    endurance?: SortOrderInput | SortOrder
    intelligence?: SortOrderInput | SortOrder
    stamina?: SortOrderInput | SortOrder
    balance?: SortOrderInput | SortOrder
    boldness?: SortOrderInput | SortOrder
    flexibility?: SortOrderInput | SortOrder
    obedience?: SortOrderInput | SortOrder
    focus?: SortOrderInput | SortOrder
    totalEarnings?: SortOrderInput | SortOrder
    sireId?: SortOrderInput | SortOrder
    damId?: SortOrderInput | SortOrder
    studStatus?: SortOrderInput | SortOrder
    studFee?: SortOrderInput | SortOrder
    lastBredDate?: SortOrderInput | SortOrder
    forSale?: SortOrderInput | SortOrder
    salePrice?: SortOrderInput | SortOrder
    healthStatus?: SortOrderInput | SortOrder
    lastVettedDate?: SortOrderInput | SortOrder
    bondScore?: SortOrderInput | SortOrder
    stressLevel?: SortOrderInput | SortOrder
    daysGroomedInARow?: SortOrderInput | SortOrder
    burnoutStatus?: SortOrderInput | SortOrder
    taskLog?: SortOrderInput | SortOrder
    consecutiveDaysFoalCare?: SortOrderInput | SortOrder
    lastGroomed?: SortOrderInput | SortOrder
    tack?: SortOrderInput | SortOrder
    age?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    trainingCooldown?: SortOrderInput | SortOrder
    earnings?: SortOrderInput | SortOrder
    rider?: SortOrderInput | SortOrder
    disciplineScores?: SortOrderInput | SortOrder
    epigeneticModifiers?: SortOrderInput | SortOrder
    horseXp?: SortOrderInput | SortOrder
    availableStatPoints?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    competitionResults?: CompetitionResultOrderByRelationAggregateInput
    foalActivities?: FoalActivityOrderByRelationAggregateInput
    foalDevelopment?: FoalDevelopmentOrderByWithRelationInput
    foalTrainingHistory?: FoalTrainingHistoryOrderByRelationAggregateInput
    groomAssignments?: GroomAssignmentOrderByRelationAggregateInput
    groomInteractions?: GroomInteractionOrderByRelationAggregateInput
    horseXpEvents?: HorseXpEventOrderByRelationAggregateInput
    breed?: BreedOrderByWithRelationInput
    dam?: HorseOrderByWithRelationInput
    damOffspring?: HorseOrderByRelationAggregateInput
    sire?: HorseOrderByWithRelationInput
    sireOffspring?: HorseOrderByRelationAggregateInput
    stable?: StableOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    trainingLogs?: TrainingLogOrderByRelationAggregateInput
  }

  export type HorseWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: HorseWhereInput | HorseWhereInput[]
    OR?: HorseWhereInput[]
    NOT?: HorseWhereInput | HorseWhereInput[]
    name?: StringFilter<"Horse"> | string
    sex?: StringFilter<"Horse"> | string
    dateOfBirth?: DateTimeFilter<"Horse"> | Date | string
    breedId?: IntNullableFilter<"Horse"> | number | null
    ownerId?: StringNullableFilter<"Horse"> | string | null
    stableId?: IntNullableFilter<"Horse"> | number | null
    genotype?: JsonNullableFilter<"Horse">
    phenotypicMarkings?: JsonNullableFilter<"Horse">
    finalDisplayColor?: StringNullableFilter<"Horse"> | string | null
    shade?: StringNullableFilter<"Horse"> | string | null
    imageUrl?: StringNullableFilter<"Horse"> | string | null
    trait?: StringNullableFilter<"Horse"> | string | null
    temperament?: StringNullableFilter<"Horse"> | string | null
    personality?: StringNullableFilter<"Horse"> | string | null
    precision?: IntNullableFilter<"Horse"> | number | null
    strength?: IntNullableFilter<"Horse"> | number | null
    speed?: IntNullableFilter<"Horse"> | number | null
    agility?: IntNullableFilter<"Horse"> | number | null
    endurance?: IntNullableFilter<"Horse"> | number | null
    intelligence?: IntNullableFilter<"Horse"> | number | null
    stamina?: IntNullableFilter<"Horse"> | number | null
    balance?: IntNullableFilter<"Horse"> | number | null
    boldness?: IntNullableFilter<"Horse"> | number | null
    flexibility?: IntNullableFilter<"Horse"> | number | null
    obedience?: IntNullableFilter<"Horse"> | number | null
    focus?: IntNullableFilter<"Horse"> | number | null
    totalEarnings?: IntNullableFilter<"Horse"> | number | null
    sireId?: IntNullableFilter<"Horse"> | number | null
    damId?: IntNullableFilter<"Horse"> | number | null
    studStatus?: StringNullableFilter<"Horse"> | string | null
    studFee?: IntNullableFilter<"Horse"> | number | null
    lastBredDate?: DateTimeNullableFilter<"Horse"> | Date | string | null
    forSale?: BoolNullableFilter<"Horse"> | boolean | null
    salePrice?: IntNullableFilter<"Horse"> | number | null
    healthStatus?: StringNullableFilter<"Horse"> | string | null
    lastVettedDate?: DateTimeNullableFilter<"Horse"> | Date | string | null
    bondScore?: IntNullableFilter<"Horse"> | number | null
    stressLevel?: IntNullableFilter<"Horse"> | number | null
    daysGroomedInARow?: IntNullableFilter<"Horse"> | number | null
    burnoutStatus?: StringNullableFilter<"Horse"> | string | null
    taskLog?: JsonNullableFilter<"Horse">
    consecutiveDaysFoalCare?: IntNullableFilter<"Horse"> | number | null
    lastGroomed?: DateTimeNullableFilter<"Horse"> | Date | string | null
    tack?: JsonNullableFilter<"Horse">
    age?: IntNullableFilter<"Horse"> | number | null
    userId?: StringNullableFilter<"Horse"> | string | null
    trainingCooldown?: DateTimeNullableFilter<"Horse"> | Date | string | null
    earnings?: DecimalNullableFilter<"Horse"> | Decimal | DecimalJsLike | number | string | null
    rider?: JsonNullableFilter<"Horse">
    disciplineScores?: JsonNullableFilter<"Horse">
    epigeneticModifiers?: JsonNullableFilter<"Horse">
    horseXp?: IntNullableFilter<"Horse"> | number | null
    availableStatPoints?: IntNullableFilter<"Horse"> | number | null
    createdAt?: DateTimeNullableFilter<"Horse"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Horse"> | Date | string | null
    competitionResults?: CompetitionResultListRelationFilter
    foalActivities?: FoalActivityListRelationFilter
    foalDevelopment?: XOR<FoalDevelopmentNullableScalarRelationFilter, FoalDevelopmentWhereInput> | null
    foalTrainingHistory?: FoalTrainingHistoryListRelationFilter
    groomAssignments?: GroomAssignmentListRelationFilter
    groomInteractions?: GroomInteractionListRelationFilter
    horseXpEvents?: HorseXpEventListRelationFilter
    breed?: XOR<BreedNullableScalarRelationFilter, BreedWhereInput> | null
    dam?: XOR<HorseNullableScalarRelationFilter, HorseWhereInput> | null
    damOffspring?: HorseListRelationFilter
    sire?: XOR<HorseNullableScalarRelationFilter, HorseWhereInput> | null
    sireOffspring?: HorseListRelationFilter
    stable?: XOR<StableNullableScalarRelationFilter, StableWhereInput> | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    trainingLogs?: TrainingLogListRelationFilter
  }, "id">

  export type HorseOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    sex?: SortOrder
    dateOfBirth?: SortOrder
    breedId?: SortOrderInput | SortOrder
    ownerId?: SortOrderInput | SortOrder
    stableId?: SortOrderInput | SortOrder
    genotype?: SortOrderInput | SortOrder
    phenotypicMarkings?: SortOrderInput | SortOrder
    finalDisplayColor?: SortOrderInput | SortOrder
    shade?: SortOrderInput | SortOrder
    imageUrl?: SortOrderInput | SortOrder
    trait?: SortOrderInput | SortOrder
    temperament?: SortOrderInput | SortOrder
    personality?: SortOrderInput | SortOrder
    precision?: SortOrderInput | SortOrder
    strength?: SortOrderInput | SortOrder
    speed?: SortOrderInput | SortOrder
    agility?: SortOrderInput | SortOrder
    endurance?: SortOrderInput | SortOrder
    intelligence?: SortOrderInput | SortOrder
    stamina?: SortOrderInput | SortOrder
    balance?: SortOrderInput | SortOrder
    boldness?: SortOrderInput | SortOrder
    flexibility?: SortOrderInput | SortOrder
    obedience?: SortOrderInput | SortOrder
    focus?: SortOrderInput | SortOrder
    totalEarnings?: SortOrderInput | SortOrder
    sireId?: SortOrderInput | SortOrder
    damId?: SortOrderInput | SortOrder
    studStatus?: SortOrderInput | SortOrder
    studFee?: SortOrderInput | SortOrder
    lastBredDate?: SortOrderInput | SortOrder
    forSale?: SortOrderInput | SortOrder
    salePrice?: SortOrderInput | SortOrder
    healthStatus?: SortOrderInput | SortOrder
    lastVettedDate?: SortOrderInput | SortOrder
    bondScore?: SortOrderInput | SortOrder
    stressLevel?: SortOrderInput | SortOrder
    daysGroomedInARow?: SortOrderInput | SortOrder
    burnoutStatus?: SortOrderInput | SortOrder
    taskLog?: SortOrderInput | SortOrder
    consecutiveDaysFoalCare?: SortOrderInput | SortOrder
    lastGroomed?: SortOrderInput | SortOrder
    tack?: SortOrderInput | SortOrder
    age?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    trainingCooldown?: SortOrderInput | SortOrder
    earnings?: SortOrderInput | SortOrder
    rider?: SortOrderInput | SortOrder
    disciplineScores?: SortOrderInput | SortOrder
    epigeneticModifiers?: SortOrderInput | SortOrder
    horseXp?: SortOrderInput | SortOrder
    availableStatPoints?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: HorseCountOrderByAggregateInput
    _avg?: HorseAvgOrderByAggregateInput
    _max?: HorseMaxOrderByAggregateInput
    _min?: HorseMinOrderByAggregateInput
    _sum?: HorseSumOrderByAggregateInput
  }

  export type HorseScalarWhereWithAggregatesInput = {
    AND?: HorseScalarWhereWithAggregatesInput | HorseScalarWhereWithAggregatesInput[]
    OR?: HorseScalarWhereWithAggregatesInput[]
    NOT?: HorseScalarWhereWithAggregatesInput | HorseScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Horse"> | number
    name?: StringWithAggregatesFilter<"Horse"> | string
    sex?: StringWithAggregatesFilter<"Horse"> | string
    dateOfBirth?: DateTimeWithAggregatesFilter<"Horse"> | Date | string
    breedId?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    ownerId?: StringNullableWithAggregatesFilter<"Horse"> | string | null
    stableId?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    genotype?: JsonNullableWithAggregatesFilter<"Horse">
    phenotypicMarkings?: JsonNullableWithAggregatesFilter<"Horse">
    finalDisplayColor?: StringNullableWithAggregatesFilter<"Horse"> | string | null
    shade?: StringNullableWithAggregatesFilter<"Horse"> | string | null
    imageUrl?: StringNullableWithAggregatesFilter<"Horse"> | string | null
    trait?: StringNullableWithAggregatesFilter<"Horse"> | string | null
    temperament?: StringNullableWithAggregatesFilter<"Horse"> | string | null
    personality?: StringNullableWithAggregatesFilter<"Horse"> | string | null
    precision?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    strength?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    speed?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    agility?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    endurance?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    intelligence?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    stamina?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    balance?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    boldness?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    flexibility?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    obedience?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    focus?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    totalEarnings?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    sireId?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    damId?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    studStatus?: StringNullableWithAggregatesFilter<"Horse"> | string | null
    studFee?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    lastBredDate?: DateTimeNullableWithAggregatesFilter<"Horse"> | Date | string | null
    forSale?: BoolNullableWithAggregatesFilter<"Horse"> | boolean | null
    salePrice?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    healthStatus?: StringNullableWithAggregatesFilter<"Horse"> | string | null
    lastVettedDate?: DateTimeNullableWithAggregatesFilter<"Horse"> | Date | string | null
    bondScore?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    stressLevel?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    daysGroomedInARow?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    burnoutStatus?: StringNullableWithAggregatesFilter<"Horse"> | string | null
    taskLog?: JsonNullableWithAggregatesFilter<"Horse">
    consecutiveDaysFoalCare?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    lastGroomed?: DateTimeNullableWithAggregatesFilter<"Horse"> | Date | string | null
    tack?: JsonNullableWithAggregatesFilter<"Horse">
    age?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    userId?: StringNullableWithAggregatesFilter<"Horse"> | string | null
    trainingCooldown?: DateTimeNullableWithAggregatesFilter<"Horse"> | Date | string | null
    earnings?: DecimalNullableWithAggregatesFilter<"Horse"> | Decimal | DecimalJsLike | number | string | null
    rider?: JsonNullableWithAggregatesFilter<"Horse">
    disciplineScores?: JsonNullableWithAggregatesFilter<"Horse">
    epigeneticModifiers?: JsonNullableWithAggregatesFilter<"Horse">
    horseXp?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    availableStatPoints?: IntNullableWithAggregatesFilter<"Horse"> | number | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Horse"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Horse"> | Date | string | null
  }

  export type GroomWhereInput = {
    AND?: GroomWhereInput | GroomWhereInput[]
    OR?: GroomWhereInput[]
    NOT?: GroomWhereInput | GroomWhereInput[]
    id?: IntFilter<"Groom"> | number
    name?: StringFilter<"Groom"> | string
    speciality?: StringFilter<"Groom"> | string
    experience?: IntFilter<"Groom"> | number
    skillLevel?: StringFilter<"Groom"> | string
    personality?: StringFilter<"Groom"> | string
    sessionRate?: DecimalFilter<"Groom"> | Decimal | DecimalJsLike | number | string
    availability?: JsonFilter<"Groom">
    bio?: StringNullableFilter<"Groom"> | string | null
    imageUrl?: StringNullableFilter<"Groom"> | string | null
    isActive?: BoolFilter<"Groom"> | boolean
    hiredDate?: DateTimeFilter<"Groom"> | Date | string
    userId?: StringNullableFilter<"Groom"> | string | null
    createdAt?: DateTimeFilter<"Groom"> | Date | string
    updatedAt?: DateTimeFilter<"Groom"> | Date | string
    groomAssignments?: GroomAssignmentListRelationFilter
    groomInteractions?: GroomInteractionListRelationFilter
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type GroomOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    speciality?: SortOrder
    experience?: SortOrder
    skillLevel?: SortOrder
    personality?: SortOrder
    sessionRate?: SortOrder
    availability?: SortOrder
    bio?: SortOrderInput | SortOrder
    imageUrl?: SortOrderInput | SortOrder
    isActive?: SortOrder
    hiredDate?: SortOrder
    userId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    groomAssignments?: GroomAssignmentOrderByRelationAggregateInput
    groomInteractions?: GroomInteractionOrderByRelationAggregateInput
    user?: UserOrderByWithRelationInput
  }

  export type GroomWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: GroomWhereInput | GroomWhereInput[]
    OR?: GroomWhereInput[]
    NOT?: GroomWhereInput | GroomWhereInput[]
    name?: StringFilter<"Groom"> | string
    speciality?: StringFilter<"Groom"> | string
    experience?: IntFilter<"Groom"> | number
    skillLevel?: StringFilter<"Groom"> | string
    personality?: StringFilter<"Groom"> | string
    sessionRate?: DecimalFilter<"Groom"> | Decimal | DecimalJsLike | number | string
    availability?: JsonFilter<"Groom">
    bio?: StringNullableFilter<"Groom"> | string | null
    imageUrl?: StringNullableFilter<"Groom"> | string | null
    isActive?: BoolFilter<"Groom"> | boolean
    hiredDate?: DateTimeFilter<"Groom"> | Date | string
    userId?: StringNullableFilter<"Groom"> | string | null
    createdAt?: DateTimeFilter<"Groom"> | Date | string
    updatedAt?: DateTimeFilter<"Groom"> | Date | string
    groomAssignments?: GroomAssignmentListRelationFilter
    groomInteractions?: GroomInteractionListRelationFilter
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type GroomOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    speciality?: SortOrder
    experience?: SortOrder
    skillLevel?: SortOrder
    personality?: SortOrder
    sessionRate?: SortOrder
    availability?: SortOrder
    bio?: SortOrderInput | SortOrder
    imageUrl?: SortOrderInput | SortOrder
    isActive?: SortOrder
    hiredDate?: SortOrder
    userId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: GroomCountOrderByAggregateInput
    _avg?: GroomAvgOrderByAggregateInput
    _max?: GroomMaxOrderByAggregateInput
    _min?: GroomMinOrderByAggregateInput
    _sum?: GroomSumOrderByAggregateInput
  }

  export type GroomScalarWhereWithAggregatesInput = {
    AND?: GroomScalarWhereWithAggregatesInput | GroomScalarWhereWithAggregatesInput[]
    OR?: GroomScalarWhereWithAggregatesInput[]
    NOT?: GroomScalarWhereWithAggregatesInput | GroomScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Groom"> | number
    name?: StringWithAggregatesFilter<"Groom"> | string
    speciality?: StringWithAggregatesFilter<"Groom"> | string
    experience?: IntWithAggregatesFilter<"Groom"> | number
    skillLevel?: StringWithAggregatesFilter<"Groom"> | string
    personality?: StringWithAggregatesFilter<"Groom"> | string
    sessionRate?: DecimalWithAggregatesFilter<"Groom"> | Decimal | DecimalJsLike | number | string
    availability?: JsonWithAggregatesFilter<"Groom">
    bio?: StringNullableWithAggregatesFilter<"Groom"> | string | null
    imageUrl?: StringNullableWithAggregatesFilter<"Groom"> | string | null
    isActive?: BoolWithAggregatesFilter<"Groom"> | boolean
    hiredDate?: DateTimeWithAggregatesFilter<"Groom"> | Date | string
    userId?: StringNullableWithAggregatesFilter<"Groom"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Groom"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Groom"> | Date | string
  }

  export type GroomAssignmentWhereInput = {
    AND?: GroomAssignmentWhereInput | GroomAssignmentWhereInput[]
    OR?: GroomAssignmentWhereInput[]
    NOT?: GroomAssignmentWhereInput | GroomAssignmentWhereInput[]
    id?: IntFilter<"GroomAssignment"> | number
    startDate?: DateTimeFilter<"GroomAssignment"> | Date | string
    endDate?: DateTimeNullableFilter<"GroomAssignment"> | Date | string | null
    isActive?: BoolFilter<"GroomAssignment"> | boolean
    isDefault?: BoolFilter<"GroomAssignment"> | boolean
    priority?: IntFilter<"GroomAssignment"> | number
    notes?: StringNullableFilter<"GroomAssignment"> | string | null
    foalId?: IntFilter<"GroomAssignment"> | number
    groomId?: IntFilter<"GroomAssignment"> | number
    userId?: StringNullableFilter<"GroomAssignment"> | string | null
    createdAt?: DateTimeFilter<"GroomAssignment"> | Date | string
    updatedAt?: DateTimeFilter<"GroomAssignment"> | Date | string
    foal?: XOR<HorseScalarRelationFilter, HorseWhereInput>
    groom?: XOR<GroomScalarRelationFilter, GroomWhereInput>
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    groomInteractions?: GroomInteractionListRelationFilter
  }

  export type GroomAssignmentOrderByWithRelationInput = {
    id?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrderInput | SortOrder
    isActive?: SortOrder
    isDefault?: SortOrder
    priority?: SortOrder
    notes?: SortOrderInput | SortOrder
    foalId?: SortOrder
    groomId?: SortOrder
    userId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    foal?: HorseOrderByWithRelationInput
    groom?: GroomOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    groomInteractions?: GroomInteractionOrderByRelationAggregateInput
  }

  export type GroomAssignmentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    foalId_groomId_isActive?: GroomAssignmentFoalIdGroomIdIsActiveCompoundUniqueInput
    AND?: GroomAssignmentWhereInput | GroomAssignmentWhereInput[]
    OR?: GroomAssignmentWhereInput[]
    NOT?: GroomAssignmentWhereInput | GroomAssignmentWhereInput[]
    startDate?: DateTimeFilter<"GroomAssignment"> | Date | string
    endDate?: DateTimeNullableFilter<"GroomAssignment"> | Date | string | null
    isActive?: BoolFilter<"GroomAssignment"> | boolean
    isDefault?: BoolFilter<"GroomAssignment"> | boolean
    priority?: IntFilter<"GroomAssignment"> | number
    notes?: StringNullableFilter<"GroomAssignment"> | string | null
    foalId?: IntFilter<"GroomAssignment"> | number
    groomId?: IntFilter<"GroomAssignment"> | number
    userId?: StringNullableFilter<"GroomAssignment"> | string | null
    createdAt?: DateTimeFilter<"GroomAssignment"> | Date | string
    updatedAt?: DateTimeFilter<"GroomAssignment"> | Date | string
    foal?: XOR<HorseScalarRelationFilter, HorseWhereInput>
    groom?: XOR<GroomScalarRelationFilter, GroomWhereInput>
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    groomInteractions?: GroomInteractionListRelationFilter
  }, "id" | "foalId_groomId_isActive">

  export type GroomAssignmentOrderByWithAggregationInput = {
    id?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrderInput | SortOrder
    isActive?: SortOrder
    isDefault?: SortOrder
    priority?: SortOrder
    notes?: SortOrderInput | SortOrder
    foalId?: SortOrder
    groomId?: SortOrder
    userId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: GroomAssignmentCountOrderByAggregateInput
    _avg?: GroomAssignmentAvgOrderByAggregateInput
    _max?: GroomAssignmentMaxOrderByAggregateInput
    _min?: GroomAssignmentMinOrderByAggregateInput
    _sum?: GroomAssignmentSumOrderByAggregateInput
  }

  export type GroomAssignmentScalarWhereWithAggregatesInput = {
    AND?: GroomAssignmentScalarWhereWithAggregatesInput | GroomAssignmentScalarWhereWithAggregatesInput[]
    OR?: GroomAssignmentScalarWhereWithAggregatesInput[]
    NOT?: GroomAssignmentScalarWhereWithAggregatesInput | GroomAssignmentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"GroomAssignment"> | number
    startDate?: DateTimeWithAggregatesFilter<"GroomAssignment"> | Date | string
    endDate?: DateTimeNullableWithAggregatesFilter<"GroomAssignment"> | Date | string | null
    isActive?: BoolWithAggregatesFilter<"GroomAssignment"> | boolean
    isDefault?: BoolWithAggregatesFilter<"GroomAssignment"> | boolean
    priority?: IntWithAggregatesFilter<"GroomAssignment"> | number
    notes?: StringNullableWithAggregatesFilter<"GroomAssignment"> | string | null
    foalId?: IntWithAggregatesFilter<"GroomAssignment"> | number
    groomId?: IntWithAggregatesFilter<"GroomAssignment"> | number
    userId?: StringNullableWithAggregatesFilter<"GroomAssignment"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"GroomAssignment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"GroomAssignment"> | Date | string
  }

  export type GroomInteractionWhereInput = {
    AND?: GroomInteractionWhereInput | GroomInteractionWhereInput[]
    OR?: GroomInteractionWhereInput[]
    NOT?: GroomInteractionWhereInput | GroomInteractionWhereInput[]
    id?: IntFilter<"GroomInteraction"> | number
    interactionType?: StringFilter<"GroomInteraction"> | string
    duration?: IntFilter<"GroomInteraction"> | number
    bondingChange?: IntFilter<"GroomInteraction"> | number
    stressChange?: IntFilter<"GroomInteraction"> | number
    quality?: StringFilter<"GroomInteraction"> | string
    notes?: StringNullableFilter<"GroomInteraction"> | string | null
    cost?: DecimalFilter<"GroomInteraction"> | Decimal | DecimalJsLike | number | string
    foalId?: IntFilter<"GroomInteraction"> | number
    groomId?: IntFilter<"GroomInteraction"> | number
    assignmentId?: IntNullableFilter<"GroomInteraction"> | number | null
    timestamp?: DateTimeFilter<"GroomInteraction"> | Date | string
    createdAt?: DateTimeFilter<"GroomInteraction"> | Date | string
    assignment?: XOR<GroomAssignmentNullableScalarRelationFilter, GroomAssignmentWhereInput> | null
    foal?: XOR<HorseScalarRelationFilter, HorseWhereInput>
    groom?: XOR<GroomScalarRelationFilter, GroomWhereInput>
  }

  export type GroomInteractionOrderByWithRelationInput = {
    id?: SortOrder
    interactionType?: SortOrder
    duration?: SortOrder
    bondingChange?: SortOrder
    stressChange?: SortOrder
    quality?: SortOrder
    notes?: SortOrderInput | SortOrder
    cost?: SortOrder
    foalId?: SortOrder
    groomId?: SortOrder
    assignmentId?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    createdAt?: SortOrder
    assignment?: GroomAssignmentOrderByWithRelationInput
    foal?: HorseOrderByWithRelationInput
    groom?: GroomOrderByWithRelationInput
  }

  export type GroomInteractionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: GroomInteractionWhereInput | GroomInteractionWhereInput[]
    OR?: GroomInteractionWhereInput[]
    NOT?: GroomInteractionWhereInput | GroomInteractionWhereInput[]
    interactionType?: StringFilter<"GroomInteraction"> | string
    duration?: IntFilter<"GroomInteraction"> | number
    bondingChange?: IntFilter<"GroomInteraction"> | number
    stressChange?: IntFilter<"GroomInteraction"> | number
    quality?: StringFilter<"GroomInteraction"> | string
    notes?: StringNullableFilter<"GroomInteraction"> | string | null
    cost?: DecimalFilter<"GroomInteraction"> | Decimal | DecimalJsLike | number | string
    foalId?: IntFilter<"GroomInteraction"> | number
    groomId?: IntFilter<"GroomInteraction"> | number
    assignmentId?: IntNullableFilter<"GroomInteraction"> | number | null
    timestamp?: DateTimeFilter<"GroomInteraction"> | Date | string
    createdAt?: DateTimeFilter<"GroomInteraction"> | Date | string
    assignment?: XOR<GroomAssignmentNullableScalarRelationFilter, GroomAssignmentWhereInput> | null
    foal?: XOR<HorseScalarRelationFilter, HorseWhereInput>
    groom?: XOR<GroomScalarRelationFilter, GroomWhereInput>
  }, "id">

  export type GroomInteractionOrderByWithAggregationInput = {
    id?: SortOrder
    interactionType?: SortOrder
    duration?: SortOrder
    bondingChange?: SortOrder
    stressChange?: SortOrder
    quality?: SortOrder
    notes?: SortOrderInput | SortOrder
    cost?: SortOrder
    foalId?: SortOrder
    groomId?: SortOrder
    assignmentId?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    createdAt?: SortOrder
    _count?: GroomInteractionCountOrderByAggregateInput
    _avg?: GroomInteractionAvgOrderByAggregateInput
    _max?: GroomInteractionMaxOrderByAggregateInput
    _min?: GroomInteractionMinOrderByAggregateInput
    _sum?: GroomInteractionSumOrderByAggregateInput
  }

  export type GroomInteractionScalarWhereWithAggregatesInput = {
    AND?: GroomInteractionScalarWhereWithAggregatesInput | GroomInteractionScalarWhereWithAggregatesInput[]
    OR?: GroomInteractionScalarWhereWithAggregatesInput[]
    NOT?: GroomInteractionScalarWhereWithAggregatesInput | GroomInteractionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"GroomInteraction"> | number
    interactionType?: StringWithAggregatesFilter<"GroomInteraction"> | string
    duration?: IntWithAggregatesFilter<"GroomInteraction"> | number
    bondingChange?: IntWithAggregatesFilter<"GroomInteraction"> | number
    stressChange?: IntWithAggregatesFilter<"GroomInteraction"> | number
    quality?: StringWithAggregatesFilter<"GroomInteraction"> | string
    notes?: StringNullableWithAggregatesFilter<"GroomInteraction"> | string | null
    cost?: DecimalWithAggregatesFilter<"GroomInteraction"> | Decimal | DecimalJsLike | number | string
    foalId?: IntWithAggregatesFilter<"GroomInteraction"> | number
    groomId?: IntWithAggregatesFilter<"GroomInteraction"> | number
    assignmentId?: IntNullableWithAggregatesFilter<"GroomInteraction"> | number | null
    timestamp?: DateTimeWithAggregatesFilter<"GroomInteraction"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"GroomInteraction"> | Date | string
  }

  export type ShowWhereInput = {
    AND?: ShowWhereInput | ShowWhereInput[]
    OR?: ShowWhereInput[]
    NOT?: ShowWhereInput | ShowWhereInput[]
    id?: IntFilter<"Show"> | number
    name?: StringFilter<"Show"> | string
    discipline?: StringFilter<"Show"> | string
    levelMin?: IntFilter<"Show"> | number
    levelMax?: IntFilter<"Show"> | number
    entryFee?: IntFilter<"Show"> | number
    prize?: IntFilter<"Show"> | number
    runDate?: DateTimeFilter<"Show"> | Date | string
    hostUserId?: StringNullableFilter<"Show"> | string | null
    createdAt?: DateTimeFilter<"Show"> | Date | string
    updatedAt?: DateTimeFilter<"Show"> | Date | string
    competitionResults?: CompetitionResultListRelationFilter
    hostUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type ShowOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    discipline?: SortOrder
    levelMin?: SortOrder
    levelMax?: SortOrder
    entryFee?: SortOrder
    prize?: SortOrder
    runDate?: SortOrder
    hostUserId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    competitionResults?: CompetitionResultOrderByRelationAggregateInput
    hostUser?: UserOrderByWithRelationInput
  }

  export type ShowWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: ShowWhereInput | ShowWhereInput[]
    OR?: ShowWhereInput[]
    NOT?: ShowWhereInput | ShowWhereInput[]
    discipline?: StringFilter<"Show"> | string
    levelMin?: IntFilter<"Show"> | number
    levelMax?: IntFilter<"Show"> | number
    entryFee?: IntFilter<"Show"> | number
    prize?: IntFilter<"Show"> | number
    runDate?: DateTimeFilter<"Show"> | Date | string
    hostUserId?: StringNullableFilter<"Show"> | string | null
    createdAt?: DateTimeFilter<"Show"> | Date | string
    updatedAt?: DateTimeFilter<"Show"> | Date | string
    competitionResults?: CompetitionResultListRelationFilter
    hostUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id" | "name">

  export type ShowOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    discipline?: SortOrder
    levelMin?: SortOrder
    levelMax?: SortOrder
    entryFee?: SortOrder
    prize?: SortOrder
    runDate?: SortOrder
    hostUserId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ShowCountOrderByAggregateInput
    _avg?: ShowAvgOrderByAggregateInput
    _max?: ShowMaxOrderByAggregateInput
    _min?: ShowMinOrderByAggregateInput
    _sum?: ShowSumOrderByAggregateInput
  }

  export type ShowScalarWhereWithAggregatesInput = {
    AND?: ShowScalarWhereWithAggregatesInput | ShowScalarWhereWithAggregatesInput[]
    OR?: ShowScalarWhereWithAggregatesInput[]
    NOT?: ShowScalarWhereWithAggregatesInput | ShowScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Show"> | number
    name?: StringWithAggregatesFilter<"Show"> | string
    discipline?: StringWithAggregatesFilter<"Show"> | string
    levelMin?: IntWithAggregatesFilter<"Show"> | number
    levelMax?: IntWithAggregatesFilter<"Show"> | number
    entryFee?: IntWithAggregatesFilter<"Show"> | number
    prize?: IntWithAggregatesFilter<"Show"> | number
    runDate?: DateTimeWithAggregatesFilter<"Show"> | Date | string
    hostUserId?: StringNullableWithAggregatesFilter<"Show"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Show"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Show"> | Date | string
  }

  export type CompetitionResultWhereInput = {
    AND?: CompetitionResultWhereInput | CompetitionResultWhereInput[]
    OR?: CompetitionResultWhereInput[]
    NOT?: CompetitionResultWhereInput | CompetitionResultWhereInput[]
    id?: IntFilter<"CompetitionResult"> | number
    score?: DecimalFilter<"CompetitionResult"> | Decimal | DecimalJsLike | number | string
    placement?: StringNullableFilter<"CompetitionResult"> | string | null
    discipline?: StringFilter<"CompetitionResult"> | string
    runDate?: DateTimeFilter<"CompetitionResult"> | Date | string
    showName?: StringFilter<"CompetitionResult"> | string
    prizeWon?: DecimalNullableFilter<"CompetitionResult"> | Decimal | DecimalJsLike | number | string | null
    statGains?: JsonNullableFilter<"CompetitionResult">
    horseId?: IntFilter<"CompetitionResult"> | number
    showId?: IntFilter<"CompetitionResult"> | number
    createdAt?: DateTimeFilter<"CompetitionResult"> | Date | string
    horse?: XOR<HorseScalarRelationFilter, HorseWhereInput>
    show?: XOR<ShowScalarRelationFilter, ShowWhereInput>
  }

  export type CompetitionResultOrderByWithRelationInput = {
    id?: SortOrder
    score?: SortOrder
    placement?: SortOrderInput | SortOrder
    discipline?: SortOrder
    runDate?: SortOrder
    showName?: SortOrder
    prizeWon?: SortOrderInput | SortOrder
    statGains?: SortOrderInput | SortOrder
    horseId?: SortOrder
    showId?: SortOrder
    createdAt?: SortOrder
    horse?: HorseOrderByWithRelationInput
    show?: ShowOrderByWithRelationInput
  }

  export type CompetitionResultWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CompetitionResultWhereInput | CompetitionResultWhereInput[]
    OR?: CompetitionResultWhereInput[]
    NOT?: CompetitionResultWhereInput | CompetitionResultWhereInput[]
    score?: DecimalFilter<"CompetitionResult"> | Decimal | DecimalJsLike | number | string
    placement?: StringNullableFilter<"CompetitionResult"> | string | null
    discipline?: StringFilter<"CompetitionResult"> | string
    runDate?: DateTimeFilter<"CompetitionResult"> | Date | string
    showName?: StringFilter<"CompetitionResult"> | string
    prizeWon?: DecimalNullableFilter<"CompetitionResult"> | Decimal | DecimalJsLike | number | string | null
    statGains?: JsonNullableFilter<"CompetitionResult">
    horseId?: IntFilter<"CompetitionResult"> | number
    showId?: IntFilter<"CompetitionResult"> | number
    createdAt?: DateTimeFilter<"CompetitionResult"> | Date | string
    horse?: XOR<HorseScalarRelationFilter, HorseWhereInput>
    show?: XOR<ShowScalarRelationFilter, ShowWhereInput>
  }, "id">

  export type CompetitionResultOrderByWithAggregationInput = {
    id?: SortOrder
    score?: SortOrder
    placement?: SortOrderInput | SortOrder
    discipline?: SortOrder
    runDate?: SortOrder
    showName?: SortOrder
    prizeWon?: SortOrderInput | SortOrder
    statGains?: SortOrderInput | SortOrder
    horseId?: SortOrder
    showId?: SortOrder
    createdAt?: SortOrder
    _count?: CompetitionResultCountOrderByAggregateInput
    _avg?: CompetitionResultAvgOrderByAggregateInput
    _max?: CompetitionResultMaxOrderByAggregateInput
    _min?: CompetitionResultMinOrderByAggregateInput
    _sum?: CompetitionResultSumOrderByAggregateInput
  }

  export type CompetitionResultScalarWhereWithAggregatesInput = {
    AND?: CompetitionResultScalarWhereWithAggregatesInput | CompetitionResultScalarWhereWithAggregatesInput[]
    OR?: CompetitionResultScalarWhereWithAggregatesInput[]
    NOT?: CompetitionResultScalarWhereWithAggregatesInput | CompetitionResultScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CompetitionResult"> | number
    score?: DecimalWithAggregatesFilter<"CompetitionResult"> | Decimal | DecimalJsLike | number | string
    placement?: StringNullableWithAggregatesFilter<"CompetitionResult"> | string | null
    discipline?: StringWithAggregatesFilter<"CompetitionResult"> | string
    runDate?: DateTimeWithAggregatesFilter<"CompetitionResult"> | Date | string
    showName?: StringWithAggregatesFilter<"CompetitionResult"> | string
    prizeWon?: DecimalNullableWithAggregatesFilter<"CompetitionResult"> | Decimal | DecimalJsLike | number | string | null
    statGains?: JsonNullableWithAggregatesFilter<"CompetitionResult">
    horseId?: IntWithAggregatesFilter<"CompetitionResult"> | number
    showId?: IntWithAggregatesFilter<"CompetitionResult"> | number
    createdAt?: DateTimeWithAggregatesFilter<"CompetitionResult"> | Date | string
  }

  export type TrainingLogWhereInput = {
    AND?: TrainingLogWhereInput | TrainingLogWhereInput[]
    OR?: TrainingLogWhereInput[]
    NOT?: TrainingLogWhereInput | TrainingLogWhereInput[]
    id?: IntFilter<"TrainingLog"> | number
    discipline?: StringFilter<"TrainingLog"> | string
    trainedAt?: DateTimeFilter<"TrainingLog"> | Date | string
    horseId?: IntFilter<"TrainingLog"> | number
    horse?: XOR<HorseScalarRelationFilter, HorseWhereInput>
  }

  export type TrainingLogOrderByWithRelationInput = {
    id?: SortOrder
    discipline?: SortOrder
    trainedAt?: SortOrder
    horseId?: SortOrder
    horse?: HorseOrderByWithRelationInput
  }

  export type TrainingLogWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TrainingLogWhereInput | TrainingLogWhereInput[]
    OR?: TrainingLogWhereInput[]
    NOT?: TrainingLogWhereInput | TrainingLogWhereInput[]
    discipline?: StringFilter<"TrainingLog"> | string
    trainedAt?: DateTimeFilter<"TrainingLog"> | Date | string
    horseId?: IntFilter<"TrainingLog"> | number
    horse?: XOR<HorseScalarRelationFilter, HorseWhereInput>
  }, "id">

  export type TrainingLogOrderByWithAggregationInput = {
    id?: SortOrder
    discipline?: SortOrder
    trainedAt?: SortOrder
    horseId?: SortOrder
    _count?: TrainingLogCountOrderByAggregateInput
    _avg?: TrainingLogAvgOrderByAggregateInput
    _max?: TrainingLogMaxOrderByAggregateInput
    _min?: TrainingLogMinOrderByAggregateInput
    _sum?: TrainingLogSumOrderByAggregateInput
  }

  export type TrainingLogScalarWhereWithAggregatesInput = {
    AND?: TrainingLogScalarWhereWithAggregatesInput | TrainingLogScalarWhereWithAggregatesInput[]
    OR?: TrainingLogScalarWhereWithAggregatesInput[]
    NOT?: TrainingLogScalarWhereWithAggregatesInput | TrainingLogScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TrainingLog"> | number
    discipline?: StringWithAggregatesFilter<"TrainingLog"> | string
    trainedAt?: DateTimeWithAggregatesFilter<"TrainingLog"> | Date | string
    horseId?: IntWithAggregatesFilter<"TrainingLog"> | number
  }

  export type FoalDevelopmentWhereInput = {
    AND?: FoalDevelopmentWhereInput | FoalDevelopmentWhereInput[]
    OR?: FoalDevelopmentWhereInput[]
    NOT?: FoalDevelopmentWhereInput | FoalDevelopmentWhereInput[]
    id?: IntFilter<"FoalDevelopment"> | number
    currentDay?: IntFilter<"FoalDevelopment"> | number
    bondingLevel?: IntFilter<"FoalDevelopment"> | number
    stressLevel?: IntFilter<"FoalDevelopment"> | number
    completedActivities?: JsonFilter<"FoalDevelopment">
    foalId?: IntFilter<"FoalDevelopment"> | number
    createdAt?: DateTimeFilter<"FoalDevelopment"> | Date | string
    updatedAt?: DateTimeFilter<"FoalDevelopment"> | Date | string
    foal?: XOR<HorseScalarRelationFilter, HorseWhereInput>
  }

  export type FoalDevelopmentOrderByWithRelationInput = {
    id?: SortOrder
    currentDay?: SortOrder
    bondingLevel?: SortOrder
    stressLevel?: SortOrder
    completedActivities?: SortOrder
    foalId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    foal?: HorseOrderByWithRelationInput
  }

  export type FoalDevelopmentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    foalId?: number
    AND?: FoalDevelopmentWhereInput | FoalDevelopmentWhereInput[]
    OR?: FoalDevelopmentWhereInput[]
    NOT?: FoalDevelopmentWhereInput | FoalDevelopmentWhereInput[]
    currentDay?: IntFilter<"FoalDevelopment"> | number
    bondingLevel?: IntFilter<"FoalDevelopment"> | number
    stressLevel?: IntFilter<"FoalDevelopment"> | number
    completedActivities?: JsonFilter<"FoalDevelopment">
    createdAt?: DateTimeFilter<"FoalDevelopment"> | Date | string
    updatedAt?: DateTimeFilter<"FoalDevelopment"> | Date | string
    foal?: XOR<HorseScalarRelationFilter, HorseWhereInput>
  }, "id" | "foalId">

  export type FoalDevelopmentOrderByWithAggregationInput = {
    id?: SortOrder
    currentDay?: SortOrder
    bondingLevel?: SortOrder
    stressLevel?: SortOrder
    completedActivities?: SortOrder
    foalId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FoalDevelopmentCountOrderByAggregateInput
    _avg?: FoalDevelopmentAvgOrderByAggregateInput
    _max?: FoalDevelopmentMaxOrderByAggregateInput
    _min?: FoalDevelopmentMinOrderByAggregateInput
    _sum?: FoalDevelopmentSumOrderByAggregateInput
  }

  export type FoalDevelopmentScalarWhereWithAggregatesInput = {
    AND?: FoalDevelopmentScalarWhereWithAggregatesInput | FoalDevelopmentScalarWhereWithAggregatesInput[]
    OR?: FoalDevelopmentScalarWhereWithAggregatesInput[]
    NOT?: FoalDevelopmentScalarWhereWithAggregatesInput | FoalDevelopmentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"FoalDevelopment"> | number
    currentDay?: IntWithAggregatesFilter<"FoalDevelopment"> | number
    bondingLevel?: IntWithAggregatesFilter<"FoalDevelopment"> | number
    stressLevel?: IntWithAggregatesFilter<"FoalDevelopment"> | number
    completedActivities?: JsonWithAggregatesFilter<"FoalDevelopment">
    foalId?: IntWithAggregatesFilter<"FoalDevelopment"> | number
    createdAt?: DateTimeWithAggregatesFilter<"FoalDevelopment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FoalDevelopment"> | Date | string
  }

  export type FoalActivityWhereInput = {
    AND?: FoalActivityWhereInput | FoalActivityWhereInput[]
    OR?: FoalActivityWhereInput[]
    NOT?: FoalActivityWhereInput | FoalActivityWhereInput[]
    id?: IntFilter<"FoalActivity"> | number
    day?: IntFilter<"FoalActivity"> | number
    activityType?: StringFilter<"FoalActivity"> | string
    outcome?: StringFilter<"FoalActivity"> | string
    bondingChange?: IntFilter<"FoalActivity"> | number
    stressChange?: IntFilter<"FoalActivity"> | number
    description?: StringFilter<"FoalActivity"> | string
    foalId?: IntFilter<"FoalActivity"> | number
    createdAt?: DateTimeFilter<"FoalActivity"> | Date | string
    foal?: XOR<HorseScalarRelationFilter, HorseWhereInput>
  }

  export type FoalActivityOrderByWithRelationInput = {
    id?: SortOrder
    day?: SortOrder
    activityType?: SortOrder
    outcome?: SortOrder
    bondingChange?: SortOrder
    stressChange?: SortOrder
    description?: SortOrder
    foalId?: SortOrder
    createdAt?: SortOrder
    foal?: HorseOrderByWithRelationInput
  }

  export type FoalActivityWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: FoalActivityWhereInput | FoalActivityWhereInput[]
    OR?: FoalActivityWhereInput[]
    NOT?: FoalActivityWhereInput | FoalActivityWhereInput[]
    day?: IntFilter<"FoalActivity"> | number
    activityType?: StringFilter<"FoalActivity"> | string
    outcome?: StringFilter<"FoalActivity"> | string
    bondingChange?: IntFilter<"FoalActivity"> | number
    stressChange?: IntFilter<"FoalActivity"> | number
    description?: StringFilter<"FoalActivity"> | string
    foalId?: IntFilter<"FoalActivity"> | number
    createdAt?: DateTimeFilter<"FoalActivity"> | Date | string
    foal?: XOR<HorseScalarRelationFilter, HorseWhereInput>
  }, "id">

  export type FoalActivityOrderByWithAggregationInput = {
    id?: SortOrder
    day?: SortOrder
    activityType?: SortOrder
    outcome?: SortOrder
    bondingChange?: SortOrder
    stressChange?: SortOrder
    description?: SortOrder
    foalId?: SortOrder
    createdAt?: SortOrder
    _count?: FoalActivityCountOrderByAggregateInput
    _avg?: FoalActivityAvgOrderByAggregateInput
    _max?: FoalActivityMaxOrderByAggregateInput
    _min?: FoalActivityMinOrderByAggregateInput
    _sum?: FoalActivitySumOrderByAggregateInput
  }

  export type FoalActivityScalarWhereWithAggregatesInput = {
    AND?: FoalActivityScalarWhereWithAggregatesInput | FoalActivityScalarWhereWithAggregatesInput[]
    OR?: FoalActivityScalarWhereWithAggregatesInput[]
    NOT?: FoalActivityScalarWhereWithAggregatesInput | FoalActivityScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"FoalActivity"> | number
    day?: IntWithAggregatesFilter<"FoalActivity"> | number
    activityType?: StringWithAggregatesFilter<"FoalActivity"> | string
    outcome?: StringWithAggregatesFilter<"FoalActivity"> | string
    bondingChange?: IntWithAggregatesFilter<"FoalActivity"> | number
    stressChange?: IntWithAggregatesFilter<"FoalActivity"> | number
    description?: StringWithAggregatesFilter<"FoalActivity"> | string
    foalId?: IntWithAggregatesFilter<"FoalActivity"> | number
    createdAt?: DateTimeWithAggregatesFilter<"FoalActivity"> | Date | string
  }

  export type FoalTrainingHistoryWhereInput = {
    AND?: FoalTrainingHistoryWhereInput | FoalTrainingHistoryWhereInput[]
    OR?: FoalTrainingHistoryWhereInput[]
    NOT?: FoalTrainingHistoryWhereInput | FoalTrainingHistoryWhereInput[]
    id?: StringFilter<"FoalTrainingHistory"> | string
    day?: IntFilter<"FoalTrainingHistory"> | number
    activity?: StringFilter<"FoalTrainingHistory"> | string
    outcome?: StringFilter<"FoalTrainingHistory"> | string
    bondChange?: IntFilter<"FoalTrainingHistory"> | number
    stressChange?: IntFilter<"FoalTrainingHistory"> | number
    horseId?: IntFilter<"FoalTrainingHistory"> | number
    timestamp?: DateTimeFilter<"FoalTrainingHistory"> | Date | string
    createdAt?: DateTimeFilter<"FoalTrainingHistory"> | Date | string
    updatedAt?: DateTimeFilter<"FoalTrainingHistory"> | Date | string
    horse?: XOR<HorseScalarRelationFilter, HorseWhereInput>
  }

  export type FoalTrainingHistoryOrderByWithRelationInput = {
    id?: SortOrder
    day?: SortOrder
    activity?: SortOrder
    outcome?: SortOrder
    bondChange?: SortOrder
    stressChange?: SortOrder
    horseId?: SortOrder
    timestamp?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    horse?: HorseOrderByWithRelationInput
  }

  export type FoalTrainingHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FoalTrainingHistoryWhereInput | FoalTrainingHistoryWhereInput[]
    OR?: FoalTrainingHistoryWhereInput[]
    NOT?: FoalTrainingHistoryWhereInput | FoalTrainingHistoryWhereInput[]
    day?: IntFilter<"FoalTrainingHistory"> | number
    activity?: StringFilter<"FoalTrainingHistory"> | string
    outcome?: StringFilter<"FoalTrainingHistory"> | string
    bondChange?: IntFilter<"FoalTrainingHistory"> | number
    stressChange?: IntFilter<"FoalTrainingHistory"> | number
    horseId?: IntFilter<"FoalTrainingHistory"> | number
    timestamp?: DateTimeFilter<"FoalTrainingHistory"> | Date | string
    createdAt?: DateTimeFilter<"FoalTrainingHistory"> | Date | string
    updatedAt?: DateTimeFilter<"FoalTrainingHistory"> | Date | string
    horse?: XOR<HorseScalarRelationFilter, HorseWhereInput>
  }, "id">

  export type FoalTrainingHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    day?: SortOrder
    activity?: SortOrder
    outcome?: SortOrder
    bondChange?: SortOrder
    stressChange?: SortOrder
    horseId?: SortOrder
    timestamp?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FoalTrainingHistoryCountOrderByAggregateInput
    _avg?: FoalTrainingHistoryAvgOrderByAggregateInput
    _max?: FoalTrainingHistoryMaxOrderByAggregateInput
    _min?: FoalTrainingHistoryMinOrderByAggregateInput
    _sum?: FoalTrainingHistorySumOrderByAggregateInput
  }

  export type FoalTrainingHistoryScalarWhereWithAggregatesInput = {
    AND?: FoalTrainingHistoryScalarWhereWithAggregatesInput | FoalTrainingHistoryScalarWhereWithAggregatesInput[]
    OR?: FoalTrainingHistoryScalarWhereWithAggregatesInput[]
    NOT?: FoalTrainingHistoryScalarWhereWithAggregatesInput | FoalTrainingHistoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FoalTrainingHistory"> | string
    day?: IntWithAggregatesFilter<"FoalTrainingHistory"> | number
    activity?: StringWithAggregatesFilter<"FoalTrainingHistory"> | string
    outcome?: StringWithAggregatesFilter<"FoalTrainingHistory"> | string
    bondChange?: IntWithAggregatesFilter<"FoalTrainingHistory"> | number
    stressChange?: IntWithAggregatesFilter<"FoalTrainingHistory"> | number
    horseId?: IntWithAggregatesFilter<"FoalTrainingHistory"> | number
    timestamp?: DateTimeWithAggregatesFilter<"FoalTrainingHistory"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"FoalTrainingHistory"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FoalTrainingHistory"> | Date | string
  }

  export type XpEventWhereInput = {
    AND?: XpEventWhereInput | XpEventWhereInput[]
    OR?: XpEventWhereInput[]
    NOT?: XpEventWhereInput | XpEventWhereInput[]
    id?: IntFilter<"XpEvent"> | number
    amount?: IntFilter<"XpEvent"> | number
    reason?: StringFilter<"XpEvent"> | string
    userId?: StringFilter<"XpEvent"> | string
    timestamp?: DateTimeFilter<"XpEvent"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type XpEventOrderByWithRelationInput = {
    id?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    userId?: SortOrder
    timestamp?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type XpEventWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: XpEventWhereInput | XpEventWhereInput[]
    OR?: XpEventWhereInput[]
    NOT?: XpEventWhereInput | XpEventWhereInput[]
    amount?: IntFilter<"XpEvent"> | number
    reason?: StringFilter<"XpEvent"> | string
    userId?: StringFilter<"XpEvent"> | string
    timestamp?: DateTimeFilter<"XpEvent"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type XpEventOrderByWithAggregationInput = {
    id?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    userId?: SortOrder
    timestamp?: SortOrder
    _count?: XpEventCountOrderByAggregateInput
    _avg?: XpEventAvgOrderByAggregateInput
    _max?: XpEventMaxOrderByAggregateInput
    _min?: XpEventMinOrderByAggregateInput
    _sum?: XpEventSumOrderByAggregateInput
  }

  export type XpEventScalarWhereWithAggregatesInput = {
    AND?: XpEventScalarWhereWithAggregatesInput | XpEventScalarWhereWithAggregatesInput[]
    OR?: XpEventScalarWhereWithAggregatesInput[]
    NOT?: XpEventScalarWhereWithAggregatesInput | XpEventScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"XpEvent"> | number
    amount?: IntWithAggregatesFilter<"XpEvent"> | number
    reason?: StringWithAggregatesFilter<"XpEvent"> | string
    userId?: StringWithAggregatesFilter<"XpEvent"> | string
    timestamp?: DateTimeWithAggregatesFilter<"XpEvent"> | Date | string
  }

  export type RefreshTokenWhereInput = {
    AND?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    OR?: RefreshTokenWhereInput[]
    NOT?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    id?: IntFilter<"RefreshToken"> | number
    token?: StringFilter<"RefreshToken"> | string
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    updatedAt?: DateTimeFilter<"RefreshToken"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type RefreshTokenOrderByWithRelationInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type RefreshTokenWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    token?: string
    AND?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    OR?: RefreshTokenWhereInput[]
    NOT?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    updatedAt?: DateTimeFilter<"RefreshToken"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "token">

  export type RefreshTokenOrderByWithAggregationInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RefreshTokenCountOrderByAggregateInput
    _avg?: RefreshTokenAvgOrderByAggregateInput
    _max?: RefreshTokenMaxOrderByAggregateInput
    _min?: RefreshTokenMinOrderByAggregateInput
    _sum?: RefreshTokenSumOrderByAggregateInput
  }

  export type RefreshTokenScalarWhereWithAggregatesInput = {
    AND?: RefreshTokenScalarWhereWithAggregatesInput | RefreshTokenScalarWhereWithAggregatesInput[]
    OR?: RefreshTokenScalarWhereWithAggregatesInput[]
    NOT?: RefreshTokenScalarWhereWithAggregatesInput | RefreshTokenScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RefreshToken"> | number
    token?: StringWithAggregatesFilter<"RefreshToken"> | string
    userId?: StringWithAggregatesFilter<"RefreshToken"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
  }

  export type HorseXpEventWhereInput = {
    AND?: HorseXpEventWhereInput | HorseXpEventWhereInput[]
    OR?: HorseXpEventWhereInput[]
    NOT?: HorseXpEventWhereInput | HorseXpEventWhereInput[]
    id?: IntFilter<"HorseXpEvent"> | number
    amount?: IntFilter<"HorseXpEvent"> | number
    reason?: StringFilter<"HorseXpEvent"> | string
    horseId?: IntFilter<"HorseXpEvent"> | number
    timestamp?: DateTimeFilter<"HorseXpEvent"> | Date | string
    horse?: XOR<HorseScalarRelationFilter, HorseWhereInput>
  }

  export type HorseXpEventOrderByWithRelationInput = {
    id?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    horseId?: SortOrder
    timestamp?: SortOrder
    horse?: HorseOrderByWithRelationInput
  }

  export type HorseXpEventWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: HorseXpEventWhereInput | HorseXpEventWhereInput[]
    OR?: HorseXpEventWhereInput[]
    NOT?: HorseXpEventWhereInput | HorseXpEventWhereInput[]
    amount?: IntFilter<"HorseXpEvent"> | number
    reason?: StringFilter<"HorseXpEvent"> | string
    horseId?: IntFilter<"HorseXpEvent"> | number
    timestamp?: DateTimeFilter<"HorseXpEvent"> | Date | string
    horse?: XOR<HorseScalarRelationFilter, HorseWhereInput>
  }, "id">

  export type HorseXpEventOrderByWithAggregationInput = {
    id?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    horseId?: SortOrder
    timestamp?: SortOrder
    _count?: HorseXpEventCountOrderByAggregateInput
    _avg?: HorseXpEventAvgOrderByAggregateInput
    _max?: HorseXpEventMaxOrderByAggregateInput
    _min?: HorseXpEventMinOrderByAggregateInput
    _sum?: HorseXpEventSumOrderByAggregateInput
  }

  export type HorseXpEventScalarWhereWithAggregatesInput = {
    AND?: HorseXpEventScalarWhereWithAggregatesInput | HorseXpEventScalarWhereWithAggregatesInput[]
    OR?: HorseXpEventScalarWhereWithAggregatesInput[]
    NOT?: HorseXpEventScalarWhereWithAggregatesInput | HorseXpEventScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"HorseXpEvent"> | number
    amount?: IntWithAggregatesFilter<"HorseXpEvent"> | number
    reason?: StringWithAggregatesFilter<"HorseXpEvent"> | string
    horseId?: IntWithAggregatesFilter<"HorseXpEvent"> | number
    timestamp?: DateTimeWithAggregatesFilter<"HorseXpEvent"> | Date | string
  }

  export type UserCreateInput = {
    id?: string
    username: string
    email: string
    password: string
    firstName: string
    lastName: string
    money?: number
    level?: number
    xp?: number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutUserInput
    grooms?: GroomCreateNestedManyWithoutUserInput
    horses?: HorseCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    shows?: ShowCreateNestedManyWithoutHostUserInput
    xpEvents?: XpEventCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    username: string
    email: string
    password: string
    firstName: string
    lastName: string
    money?: number
    level?: number
    xp?: number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutUserInput
    grooms?: GroomUncheckedCreateNestedManyWithoutUserInput
    horses?: HorseUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    shows?: ShowUncheckedCreateNestedManyWithoutHostUserInput
    xpEvents?: XpEventUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    money?: IntFieldUpdateOperationsInput | number
    level?: IntFieldUpdateOperationsInput | number
    xp?: IntFieldUpdateOperationsInput | number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomAssignments?: GroomAssignmentUpdateManyWithoutUserNestedInput
    grooms?: GroomUpdateManyWithoutUserNestedInput
    horses?: HorseUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    shows?: ShowUpdateManyWithoutHostUserNestedInput
    xpEvents?: XpEventUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    money?: IntFieldUpdateOperationsInput | number
    level?: IntFieldUpdateOperationsInput | number
    xp?: IntFieldUpdateOperationsInput | number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutUserNestedInput
    grooms?: GroomUncheckedUpdateManyWithoutUserNestedInput
    horses?: HorseUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    shows?: ShowUncheckedUpdateManyWithoutHostUserNestedInput
    xpEvents?: XpEventUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    username: string
    email: string
    password: string
    firstName: string
    lastName: string
    money?: number
    level?: number
    xp?: number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    money?: IntFieldUpdateOperationsInput | number
    level?: IntFieldUpdateOperationsInput | number
    xp?: IntFieldUpdateOperationsInput | number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    money?: IntFieldUpdateOperationsInput | number
    level?: IntFieldUpdateOperationsInput | number
    xp?: IntFieldUpdateOperationsInput | number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BreedCreateInput = {
    name: string
    description?: string | null
    horses?: HorseCreateNestedManyWithoutBreedInput
  }

  export type BreedUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    horses?: HorseUncheckedCreateNestedManyWithoutBreedInput
  }

  export type BreedUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    horses?: HorseUpdateManyWithoutBreedNestedInput
  }

  export type BreedUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    horses?: HorseUncheckedUpdateManyWithoutBreedNestedInput
  }

  export type BreedCreateManyInput = {
    id?: number
    name: string
    description?: string | null
  }

  export type BreedUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BreedUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StableCreateInput = {
    name: string
    location?: string | null
    horses?: HorseCreateNestedManyWithoutStableInput
  }

  export type StableUncheckedCreateInput = {
    id?: number
    name: string
    location?: string | null
    horses?: HorseUncheckedCreateNestedManyWithoutStableInput
  }

  export type StableUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    horses?: HorseUpdateManyWithoutStableNestedInput
  }

  export type StableUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    horses?: HorseUncheckedUpdateManyWithoutStableNestedInput
  }

  export type StableCreateManyInput = {
    id?: number
    name: string
    location?: string | null
  }

  export type StableUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StableUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type HorseCreateInput = {
    name: string
    sex: string
    dateOfBirth: Date | string
    ownerId?: string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventCreateNestedManyWithoutHorseInput
    breed?: BreedCreateNestedOneWithoutHorsesInput
    dam?: HorseCreateNestedOneWithoutDamOffspringInput
    damOffspring?: HorseCreateNestedManyWithoutDamInput
    sire?: HorseCreateNestedOneWithoutSireOffspringInput
    sireOffspring?: HorseCreateNestedManyWithoutSireInput
    stable?: StableCreateNestedOneWithoutHorsesInput
    user?: UserCreateNestedOneWithoutHorsesInput
    trainingLogs?: TrainingLogCreateNestedManyWithoutHorseInput
  }

  export type HorseUncheckedCreateInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    breedId?: number | null
    ownerId?: string | null
    stableId?: number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    sireId?: number | null
    damId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    userId?: string | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultUncheckedCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityUncheckedCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentUncheckedCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventUncheckedCreateNestedManyWithoutHorseInput
    damOffspring?: HorseUncheckedCreateNestedManyWithoutDamInput
    sireOffspring?: HorseUncheckedCreateNestedManyWithoutSireInput
    trainingLogs?: TrainingLogUncheckedCreateNestedManyWithoutHorseInput
  }

  export type HorseUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUpdateManyWithoutHorseNestedInput
    breed?: BreedUpdateOneWithoutHorsesNestedInput
    dam?: HorseUpdateOneWithoutDamOffspringNestedInput
    damOffspring?: HorseUpdateManyWithoutDamNestedInput
    sire?: HorseUpdateOneWithoutSireOffspringNestedInput
    sireOffspring?: HorseUpdateManyWithoutSireNestedInput
    stable?: StableUpdateOneWithoutHorsesNestedInput
    user?: UserUpdateOneWithoutHorsesNestedInput
    trainingLogs?: TrainingLogUpdateManyWithoutHorseNestedInput
  }

  export type HorseUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    breedId?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    stableId?: NullableIntFieldUpdateOperationsInput | number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    sireId?: NullableIntFieldUpdateOperationsInput | number | null
    damId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUncheckedUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUncheckedUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUncheckedUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUncheckedUpdateManyWithoutHorseNestedInput
    damOffspring?: HorseUncheckedUpdateManyWithoutDamNestedInput
    sireOffspring?: HorseUncheckedUpdateManyWithoutSireNestedInput
    trainingLogs?: TrainingLogUncheckedUpdateManyWithoutHorseNestedInput
  }

  export type HorseCreateManyInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    breedId?: number | null
    ownerId?: string | null
    stableId?: number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    sireId?: number | null
    damId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    userId?: string | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type HorseUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HorseUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    breedId?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    stableId?: NullableIntFieldUpdateOperationsInput | number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    sireId?: NullableIntFieldUpdateOperationsInput | number | null
    damId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type GroomCreateInput = {
    name: string
    speciality: string
    experience?: number
    skillLevel?: string
    personality: string
    sessionRate?: Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: string | null
    imageUrl?: string | null
    isActive?: boolean
    hiredDate?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutGroomInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutGroomInput
    user?: UserCreateNestedOneWithoutGroomsInput
  }

  export type GroomUncheckedCreateInput = {
    id?: number
    name: string
    speciality: string
    experience?: number
    skillLevel?: string
    personality: string
    sessionRate?: Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: string | null
    imageUrl?: string | null
    isActive?: boolean
    hiredDate?: Date | string
    userId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutGroomInput
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutGroomInput
  }

  export type GroomUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    speciality?: StringFieldUpdateOperationsInput | string
    experience?: IntFieldUpdateOperationsInput | number
    skillLevel?: StringFieldUpdateOperationsInput | string
    personality?: StringFieldUpdateOperationsInput | string
    sessionRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hiredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomAssignments?: GroomAssignmentUpdateManyWithoutGroomNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutGroomNestedInput
    user?: UserUpdateOneWithoutGroomsNestedInput
  }

  export type GroomUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    speciality?: StringFieldUpdateOperationsInput | string
    experience?: IntFieldUpdateOperationsInput | number
    skillLevel?: StringFieldUpdateOperationsInput | string
    personality?: StringFieldUpdateOperationsInput | string
    sessionRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hiredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutGroomNestedInput
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutGroomNestedInput
  }

  export type GroomCreateManyInput = {
    id?: number
    name: string
    speciality: string
    experience?: number
    skillLevel?: string
    personality: string
    sessionRate?: Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: string | null
    imageUrl?: string | null
    isActive?: boolean
    hiredDate?: Date | string
    userId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GroomUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    speciality?: StringFieldUpdateOperationsInput | string
    experience?: IntFieldUpdateOperationsInput | number
    skillLevel?: StringFieldUpdateOperationsInput | string
    personality?: StringFieldUpdateOperationsInput | string
    sessionRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hiredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GroomUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    speciality?: StringFieldUpdateOperationsInput | string
    experience?: IntFieldUpdateOperationsInput | number
    skillLevel?: StringFieldUpdateOperationsInput | string
    personality?: StringFieldUpdateOperationsInput | string
    sessionRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hiredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GroomAssignmentCreateInput = {
    startDate?: Date | string
    endDate?: Date | string | null
    isActive?: boolean
    isDefault?: boolean
    priority?: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    foal: HorseCreateNestedOneWithoutGroomAssignmentsInput
    groom: GroomCreateNestedOneWithoutGroomAssignmentsInput
    user?: UserCreateNestedOneWithoutGroomAssignmentsInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutAssignmentInput
  }

  export type GroomAssignmentUncheckedCreateInput = {
    id?: number
    startDate?: Date | string
    endDate?: Date | string | null
    isActive?: boolean
    isDefault?: boolean
    priority?: number
    notes?: string | null
    foalId: number
    groomId: number
    userId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutAssignmentInput
  }

  export type GroomAssignmentUpdateInput = {
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    foal?: HorseUpdateOneRequiredWithoutGroomAssignmentsNestedInput
    groom?: GroomUpdateOneRequiredWithoutGroomAssignmentsNestedInput
    user?: UserUpdateOneWithoutGroomAssignmentsNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutAssignmentNestedInput
  }

  export type GroomAssignmentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    foalId?: IntFieldUpdateOperationsInput | number
    groomId?: IntFieldUpdateOperationsInput | number
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutAssignmentNestedInput
  }

  export type GroomAssignmentCreateManyInput = {
    id?: number
    startDate?: Date | string
    endDate?: Date | string | null
    isActive?: boolean
    isDefault?: boolean
    priority?: number
    notes?: string | null
    foalId: number
    groomId: number
    userId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GroomAssignmentUpdateManyMutationInput = {
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GroomAssignmentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    foalId?: IntFieldUpdateOperationsInput | number
    groomId?: IntFieldUpdateOperationsInput | number
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GroomInteractionCreateInput = {
    interactionType: string
    duration: number
    bondingChange?: number
    stressChange?: number
    quality?: string
    notes?: string | null
    cost?: Decimal | DecimalJsLike | number | string
    timestamp?: Date | string
    createdAt?: Date | string
    assignment?: GroomAssignmentCreateNestedOneWithoutGroomInteractionsInput
    foal: HorseCreateNestedOneWithoutGroomInteractionsInput
    groom: GroomCreateNestedOneWithoutGroomInteractionsInput
  }

  export type GroomInteractionUncheckedCreateInput = {
    id?: number
    interactionType: string
    duration: number
    bondingChange?: number
    stressChange?: number
    quality?: string
    notes?: string | null
    cost?: Decimal | DecimalJsLike | number | string
    foalId: number
    groomId: number
    assignmentId?: number | null
    timestamp?: Date | string
    createdAt?: Date | string
  }

  export type GroomInteractionUpdateInput = {
    interactionType?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    bondingChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    quality?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignment?: GroomAssignmentUpdateOneWithoutGroomInteractionsNestedInput
    foal?: HorseUpdateOneRequiredWithoutGroomInteractionsNestedInput
    groom?: GroomUpdateOneRequiredWithoutGroomInteractionsNestedInput
  }

  export type GroomInteractionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    interactionType?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    bondingChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    quality?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    foalId?: IntFieldUpdateOperationsInput | number
    groomId?: IntFieldUpdateOperationsInput | number
    assignmentId?: NullableIntFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GroomInteractionCreateManyInput = {
    id?: number
    interactionType: string
    duration: number
    bondingChange?: number
    stressChange?: number
    quality?: string
    notes?: string | null
    cost?: Decimal | DecimalJsLike | number | string
    foalId: number
    groomId: number
    assignmentId?: number | null
    timestamp?: Date | string
    createdAt?: Date | string
  }

  export type GroomInteractionUpdateManyMutationInput = {
    interactionType?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    bondingChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    quality?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GroomInteractionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    interactionType?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    bondingChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    quality?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    foalId?: IntFieldUpdateOperationsInput | number
    groomId?: IntFieldUpdateOperationsInput | number
    assignmentId?: NullableIntFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShowCreateInput = {
    name: string
    discipline: string
    levelMin: number
    levelMax: number
    entryFee: number
    prize: number
    runDate: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    competitionResults?: CompetitionResultCreateNestedManyWithoutShowInput
    hostUser?: UserCreateNestedOneWithoutShowsInput
  }

  export type ShowUncheckedCreateInput = {
    id?: number
    name: string
    discipline: string
    levelMin: number
    levelMax: number
    entryFee: number
    prize: number
    runDate: Date | string
    hostUserId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    competitionResults?: CompetitionResultUncheckedCreateNestedManyWithoutShowInput
  }

  export type ShowUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    discipline?: StringFieldUpdateOperationsInput | string
    levelMin?: IntFieldUpdateOperationsInput | number
    levelMax?: IntFieldUpdateOperationsInput | number
    entryFee?: IntFieldUpdateOperationsInput | number
    prize?: IntFieldUpdateOperationsInput | number
    runDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    competitionResults?: CompetitionResultUpdateManyWithoutShowNestedInput
    hostUser?: UserUpdateOneWithoutShowsNestedInput
  }

  export type ShowUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    discipline?: StringFieldUpdateOperationsInput | string
    levelMin?: IntFieldUpdateOperationsInput | number
    levelMax?: IntFieldUpdateOperationsInput | number
    entryFee?: IntFieldUpdateOperationsInput | number
    prize?: IntFieldUpdateOperationsInput | number
    runDate?: DateTimeFieldUpdateOperationsInput | Date | string
    hostUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    competitionResults?: CompetitionResultUncheckedUpdateManyWithoutShowNestedInput
  }

  export type ShowCreateManyInput = {
    id?: number
    name: string
    discipline: string
    levelMin: number
    levelMax: number
    entryFee: number
    prize: number
    runDate: Date | string
    hostUserId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShowUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    discipline?: StringFieldUpdateOperationsInput | string
    levelMin?: IntFieldUpdateOperationsInput | number
    levelMax?: IntFieldUpdateOperationsInput | number
    entryFee?: IntFieldUpdateOperationsInput | number
    prize?: IntFieldUpdateOperationsInput | number
    runDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShowUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    discipline?: StringFieldUpdateOperationsInput | string
    levelMin?: IntFieldUpdateOperationsInput | number
    levelMax?: IntFieldUpdateOperationsInput | number
    entryFee?: IntFieldUpdateOperationsInput | number
    prize?: IntFieldUpdateOperationsInput | number
    runDate?: DateTimeFieldUpdateOperationsInput | Date | string
    hostUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompetitionResultCreateInput = {
    score: Decimal | DecimalJsLike | number | string
    placement?: string | null
    discipline: string
    runDate: Date | string
    showName: string
    prizeWon?: Decimal | DecimalJsLike | number | string | null
    statGains?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    horse: HorseCreateNestedOneWithoutCompetitionResultsInput
    show: ShowCreateNestedOneWithoutCompetitionResultsInput
  }

  export type CompetitionResultUncheckedCreateInput = {
    id?: number
    score: Decimal | DecimalJsLike | number | string
    placement?: string | null
    discipline: string
    runDate: Date | string
    showName: string
    prizeWon?: Decimal | DecimalJsLike | number | string | null
    statGains?: NullableJsonNullValueInput | InputJsonValue
    horseId: number
    showId: number
    createdAt?: Date | string
  }

  export type CompetitionResultUpdateInput = {
    score?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    placement?: NullableStringFieldUpdateOperationsInput | string | null
    discipline?: StringFieldUpdateOperationsInput | string
    runDate?: DateTimeFieldUpdateOperationsInput | Date | string
    showName?: StringFieldUpdateOperationsInput | string
    prizeWon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    statGains?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    horse?: HorseUpdateOneRequiredWithoutCompetitionResultsNestedInput
    show?: ShowUpdateOneRequiredWithoutCompetitionResultsNestedInput
  }

  export type CompetitionResultUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    score?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    placement?: NullableStringFieldUpdateOperationsInput | string | null
    discipline?: StringFieldUpdateOperationsInput | string
    runDate?: DateTimeFieldUpdateOperationsInput | Date | string
    showName?: StringFieldUpdateOperationsInput | string
    prizeWon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    statGains?: NullableJsonNullValueInput | InputJsonValue
    horseId?: IntFieldUpdateOperationsInput | number
    showId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompetitionResultCreateManyInput = {
    id?: number
    score: Decimal | DecimalJsLike | number | string
    placement?: string | null
    discipline: string
    runDate: Date | string
    showName: string
    prizeWon?: Decimal | DecimalJsLike | number | string | null
    statGains?: NullableJsonNullValueInput | InputJsonValue
    horseId: number
    showId: number
    createdAt?: Date | string
  }

  export type CompetitionResultUpdateManyMutationInput = {
    score?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    placement?: NullableStringFieldUpdateOperationsInput | string | null
    discipline?: StringFieldUpdateOperationsInput | string
    runDate?: DateTimeFieldUpdateOperationsInput | Date | string
    showName?: StringFieldUpdateOperationsInput | string
    prizeWon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    statGains?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompetitionResultUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    score?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    placement?: NullableStringFieldUpdateOperationsInput | string | null
    discipline?: StringFieldUpdateOperationsInput | string
    runDate?: DateTimeFieldUpdateOperationsInput | Date | string
    showName?: StringFieldUpdateOperationsInput | string
    prizeWon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    statGains?: NullableJsonNullValueInput | InputJsonValue
    horseId?: IntFieldUpdateOperationsInput | number
    showId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TrainingLogCreateInput = {
    discipline: string
    trainedAt?: Date | string
    horse: HorseCreateNestedOneWithoutTrainingLogsInput
  }

  export type TrainingLogUncheckedCreateInput = {
    id?: number
    discipline: string
    trainedAt?: Date | string
    horseId: number
  }

  export type TrainingLogUpdateInput = {
    discipline?: StringFieldUpdateOperationsInput | string
    trainedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    horse?: HorseUpdateOneRequiredWithoutTrainingLogsNestedInput
  }

  export type TrainingLogUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    discipline?: StringFieldUpdateOperationsInput | string
    trainedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    horseId?: IntFieldUpdateOperationsInput | number
  }

  export type TrainingLogCreateManyInput = {
    id?: number
    discipline: string
    trainedAt?: Date | string
    horseId: number
  }

  export type TrainingLogUpdateManyMutationInput = {
    discipline?: StringFieldUpdateOperationsInput | string
    trainedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TrainingLogUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    discipline?: StringFieldUpdateOperationsInput | string
    trainedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    horseId?: IntFieldUpdateOperationsInput | number
  }

  export type FoalDevelopmentCreateInput = {
    currentDay?: number
    bondingLevel?: number
    stressLevel?: number
    completedActivities?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    foal: HorseCreateNestedOneWithoutFoalDevelopmentInput
  }

  export type FoalDevelopmentUncheckedCreateInput = {
    id?: number
    currentDay?: number
    bondingLevel?: number
    stressLevel?: number
    completedActivities?: JsonNullValueInput | InputJsonValue
    foalId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FoalDevelopmentUpdateInput = {
    currentDay?: IntFieldUpdateOperationsInput | number
    bondingLevel?: IntFieldUpdateOperationsInput | number
    stressLevel?: IntFieldUpdateOperationsInput | number
    completedActivities?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    foal?: HorseUpdateOneRequiredWithoutFoalDevelopmentNestedInput
  }

  export type FoalDevelopmentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    currentDay?: IntFieldUpdateOperationsInput | number
    bondingLevel?: IntFieldUpdateOperationsInput | number
    stressLevel?: IntFieldUpdateOperationsInput | number
    completedActivities?: JsonNullValueInput | InputJsonValue
    foalId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FoalDevelopmentCreateManyInput = {
    id?: number
    currentDay?: number
    bondingLevel?: number
    stressLevel?: number
    completedActivities?: JsonNullValueInput | InputJsonValue
    foalId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FoalDevelopmentUpdateManyMutationInput = {
    currentDay?: IntFieldUpdateOperationsInput | number
    bondingLevel?: IntFieldUpdateOperationsInput | number
    stressLevel?: IntFieldUpdateOperationsInput | number
    completedActivities?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FoalDevelopmentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    currentDay?: IntFieldUpdateOperationsInput | number
    bondingLevel?: IntFieldUpdateOperationsInput | number
    stressLevel?: IntFieldUpdateOperationsInput | number
    completedActivities?: JsonNullValueInput | InputJsonValue
    foalId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FoalActivityCreateInput = {
    day: number
    activityType: string
    outcome: string
    bondingChange: number
    stressChange: number
    description: string
    createdAt?: Date | string
    foal: HorseCreateNestedOneWithoutFoalActivitiesInput
  }

  export type FoalActivityUncheckedCreateInput = {
    id?: number
    day: number
    activityType: string
    outcome: string
    bondingChange: number
    stressChange: number
    description: string
    foalId: number
    createdAt?: Date | string
  }

  export type FoalActivityUpdateInput = {
    day?: IntFieldUpdateOperationsInput | number
    activityType?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
    bondingChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    foal?: HorseUpdateOneRequiredWithoutFoalActivitiesNestedInput
  }

  export type FoalActivityUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    day?: IntFieldUpdateOperationsInput | number
    activityType?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
    bondingChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    foalId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FoalActivityCreateManyInput = {
    id?: number
    day: number
    activityType: string
    outcome: string
    bondingChange: number
    stressChange: number
    description: string
    foalId: number
    createdAt?: Date | string
  }

  export type FoalActivityUpdateManyMutationInput = {
    day?: IntFieldUpdateOperationsInput | number
    activityType?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
    bondingChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FoalActivityUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    day?: IntFieldUpdateOperationsInput | number
    activityType?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
    bondingChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    foalId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FoalTrainingHistoryCreateInput = {
    id?: string
    day: number
    activity: string
    outcome: string
    bondChange?: number
    stressChange?: number
    timestamp?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    horse: HorseCreateNestedOneWithoutFoalTrainingHistoryInput
  }

  export type FoalTrainingHistoryUncheckedCreateInput = {
    id?: string
    day: number
    activity: string
    outcome: string
    bondChange?: number
    stressChange?: number
    horseId: number
    timestamp?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FoalTrainingHistoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    day?: IntFieldUpdateOperationsInput | number
    activity?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
    bondChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    horse?: HorseUpdateOneRequiredWithoutFoalTrainingHistoryNestedInput
  }

  export type FoalTrainingHistoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    day?: IntFieldUpdateOperationsInput | number
    activity?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
    bondChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    horseId?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FoalTrainingHistoryCreateManyInput = {
    id?: string
    day: number
    activity: string
    outcome: string
    bondChange?: number
    stressChange?: number
    horseId: number
    timestamp?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FoalTrainingHistoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    day?: IntFieldUpdateOperationsInput | number
    activity?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
    bondChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FoalTrainingHistoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    day?: IntFieldUpdateOperationsInput | number
    activity?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
    bondChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    horseId?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type XpEventCreateInput = {
    amount: number
    reason: string
    timestamp?: Date | string
    user: UserCreateNestedOneWithoutXpEventsInput
  }

  export type XpEventUncheckedCreateInput = {
    id?: number
    amount: number
    reason: string
    userId: string
    timestamp?: Date | string
  }

  export type XpEventUpdateInput = {
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutXpEventsNestedInput
  }

  export type XpEventUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type XpEventCreateManyInput = {
    id?: number
    amount: number
    reason: string
    userId: string
    timestamp?: Date | string
  }

  export type XpEventUpdateManyMutationInput = {
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type XpEventUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenCreateInput = {
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutRefreshTokensInput
  }

  export type RefreshTokenUncheckedCreateInput = {
    id?: number
    token: string
    userId: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RefreshTokenUpdateInput = {
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutRefreshTokensNestedInput
  }

  export type RefreshTokenUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenCreateManyInput = {
    id?: number
    token: string
    userId: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RefreshTokenUpdateManyMutationInput = {
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HorseXpEventCreateInput = {
    amount: number
    reason: string
    timestamp?: Date | string
    horse: HorseCreateNestedOneWithoutHorseXpEventsInput
  }

  export type HorseXpEventUncheckedCreateInput = {
    id?: number
    amount: number
    reason: string
    horseId: number
    timestamp?: Date | string
  }

  export type HorseXpEventUpdateInput = {
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    horse?: HorseUpdateOneRequiredWithoutHorseXpEventsNestedInput
  }

  export type HorseXpEventUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    horseId?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HorseXpEventCreateManyInput = {
    id?: number
    amount: number
    reason: string
    horseId: number
    timestamp?: Date | string
  }

  export type HorseXpEventUpdateManyMutationInput = {
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HorseXpEventUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    horseId?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type GroomAssignmentListRelationFilter = {
    every?: GroomAssignmentWhereInput
    some?: GroomAssignmentWhereInput
    none?: GroomAssignmentWhereInput
  }

  export type GroomListRelationFilter = {
    every?: GroomWhereInput
    some?: GroomWhereInput
    none?: GroomWhereInput
  }

  export type HorseListRelationFilter = {
    every?: HorseWhereInput
    some?: HorseWhereInput
    none?: HorseWhereInput
  }

  export type RefreshTokenListRelationFilter = {
    every?: RefreshTokenWhereInput
    some?: RefreshTokenWhereInput
    none?: RefreshTokenWhereInput
  }

  export type ShowListRelationFilter = {
    every?: ShowWhereInput
    some?: ShowWhereInput
    none?: ShowWhereInput
  }

  export type XpEventListRelationFilter = {
    every?: XpEventWhereInput
    some?: XpEventWhereInput
    none?: XpEventWhereInput
  }

  export type GroomAssignmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type GroomOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type HorseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RefreshTokenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ShowOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type XpEventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    money?: SortOrder
    level?: SortOrder
    xp?: SortOrder
    settings?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    money?: SortOrder
    level?: SortOrder
    xp?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    money?: SortOrder
    level?: SortOrder
    xp?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    money?: SortOrder
    level?: SortOrder
    xp?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    money?: SortOrder
    level?: SortOrder
    xp?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type BreedCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
  }

  export type BreedAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BreedMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
  }

  export type BreedMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
  }

  export type BreedSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type StableCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    location?: SortOrder
  }

  export type StableAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StableMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    location?: SortOrder
  }

  export type StableMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    location?: SortOrder
  }

  export type StableSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type CompetitionResultListRelationFilter = {
    every?: CompetitionResultWhereInput
    some?: CompetitionResultWhereInput
    none?: CompetitionResultWhereInput
  }

  export type FoalActivityListRelationFilter = {
    every?: FoalActivityWhereInput
    some?: FoalActivityWhereInput
    none?: FoalActivityWhereInput
  }

  export type FoalDevelopmentNullableScalarRelationFilter = {
    is?: FoalDevelopmentWhereInput | null
    isNot?: FoalDevelopmentWhereInput | null
  }

  export type FoalTrainingHistoryListRelationFilter = {
    every?: FoalTrainingHistoryWhereInput
    some?: FoalTrainingHistoryWhereInput
    none?: FoalTrainingHistoryWhereInput
  }

  export type GroomInteractionListRelationFilter = {
    every?: GroomInteractionWhereInput
    some?: GroomInteractionWhereInput
    none?: GroomInteractionWhereInput
  }

  export type HorseXpEventListRelationFilter = {
    every?: HorseXpEventWhereInput
    some?: HorseXpEventWhereInput
    none?: HorseXpEventWhereInput
  }

  export type BreedNullableScalarRelationFilter = {
    is?: BreedWhereInput | null
    isNot?: BreedWhereInput | null
  }

  export type HorseNullableScalarRelationFilter = {
    is?: HorseWhereInput | null
    isNot?: HorseWhereInput | null
  }

  export type StableNullableScalarRelationFilter = {
    is?: StableWhereInput | null
    isNot?: StableWhereInput | null
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type TrainingLogListRelationFilter = {
    every?: TrainingLogWhereInput
    some?: TrainingLogWhereInput
    none?: TrainingLogWhereInput
  }

  export type CompetitionResultOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FoalActivityOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FoalTrainingHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type GroomInteractionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type HorseXpEventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TrainingLogOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type HorseCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    sex?: SortOrder
    dateOfBirth?: SortOrder
    breedId?: SortOrder
    ownerId?: SortOrder
    stableId?: SortOrder
    genotype?: SortOrder
    phenotypicMarkings?: SortOrder
    finalDisplayColor?: SortOrder
    shade?: SortOrder
    imageUrl?: SortOrder
    trait?: SortOrder
    temperament?: SortOrder
    personality?: SortOrder
    precision?: SortOrder
    strength?: SortOrder
    speed?: SortOrder
    agility?: SortOrder
    endurance?: SortOrder
    intelligence?: SortOrder
    stamina?: SortOrder
    balance?: SortOrder
    boldness?: SortOrder
    flexibility?: SortOrder
    obedience?: SortOrder
    focus?: SortOrder
    totalEarnings?: SortOrder
    sireId?: SortOrder
    damId?: SortOrder
    studStatus?: SortOrder
    studFee?: SortOrder
    lastBredDate?: SortOrder
    forSale?: SortOrder
    salePrice?: SortOrder
    healthStatus?: SortOrder
    lastVettedDate?: SortOrder
    bondScore?: SortOrder
    stressLevel?: SortOrder
    daysGroomedInARow?: SortOrder
    burnoutStatus?: SortOrder
    taskLog?: SortOrder
    consecutiveDaysFoalCare?: SortOrder
    lastGroomed?: SortOrder
    tack?: SortOrder
    age?: SortOrder
    userId?: SortOrder
    trainingCooldown?: SortOrder
    earnings?: SortOrder
    rider?: SortOrder
    disciplineScores?: SortOrder
    epigeneticModifiers?: SortOrder
    horseXp?: SortOrder
    availableStatPoints?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HorseAvgOrderByAggregateInput = {
    id?: SortOrder
    breedId?: SortOrder
    stableId?: SortOrder
    precision?: SortOrder
    strength?: SortOrder
    speed?: SortOrder
    agility?: SortOrder
    endurance?: SortOrder
    intelligence?: SortOrder
    stamina?: SortOrder
    balance?: SortOrder
    boldness?: SortOrder
    flexibility?: SortOrder
    obedience?: SortOrder
    focus?: SortOrder
    totalEarnings?: SortOrder
    sireId?: SortOrder
    damId?: SortOrder
    studFee?: SortOrder
    salePrice?: SortOrder
    bondScore?: SortOrder
    stressLevel?: SortOrder
    daysGroomedInARow?: SortOrder
    consecutiveDaysFoalCare?: SortOrder
    age?: SortOrder
    earnings?: SortOrder
    horseXp?: SortOrder
    availableStatPoints?: SortOrder
  }

  export type HorseMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    sex?: SortOrder
    dateOfBirth?: SortOrder
    breedId?: SortOrder
    ownerId?: SortOrder
    stableId?: SortOrder
    finalDisplayColor?: SortOrder
    shade?: SortOrder
    imageUrl?: SortOrder
    trait?: SortOrder
    temperament?: SortOrder
    personality?: SortOrder
    precision?: SortOrder
    strength?: SortOrder
    speed?: SortOrder
    agility?: SortOrder
    endurance?: SortOrder
    intelligence?: SortOrder
    stamina?: SortOrder
    balance?: SortOrder
    boldness?: SortOrder
    flexibility?: SortOrder
    obedience?: SortOrder
    focus?: SortOrder
    totalEarnings?: SortOrder
    sireId?: SortOrder
    damId?: SortOrder
    studStatus?: SortOrder
    studFee?: SortOrder
    lastBredDate?: SortOrder
    forSale?: SortOrder
    salePrice?: SortOrder
    healthStatus?: SortOrder
    lastVettedDate?: SortOrder
    bondScore?: SortOrder
    stressLevel?: SortOrder
    daysGroomedInARow?: SortOrder
    burnoutStatus?: SortOrder
    consecutiveDaysFoalCare?: SortOrder
    lastGroomed?: SortOrder
    age?: SortOrder
    userId?: SortOrder
    trainingCooldown?: SortOrder
    earnings?: SortOrder
    horseXp?: SortOrder
    availableStatPoints?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HorseMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    sex?: SortOrder
    dateOfBirth?: SortOrder
    breedId?: SortOrder
    ownerId?: SortOrder
    stableId?: SortOrder
    finalDisplayColor?: SortOrder
    shade?: SortOrder
    imageUrl?: SortOrder
    trait?: SortOrder
    temperament?: SortOrder
    personality?: SortOrder
    precision?: SortOrder
    strength?: SortOrder
    speed?: SortOrder
    agility?: SortOrder
    endurance?: SortOrder
    intelligence?: SortOrder
    stamina?: SortOrder
    balance?: SortOrder
    boldness?: SortOrder
    flexibility?: SortOrder
    obedience?: SortOrder
    focus?: SortOrder
    totalEarnings?: SortOrder
    sireId?: SortOrder
    damId?: SortOrder
    studStatus?: SortOrder
    studFee?: SortOrder
    lastBredDate?: SortOrder
    forSale?: SortOrder
    salePrice?: SortOrder
    healthStatus?: SortOrder
    lastVettedDate?: SortOrder
    bondScore?: SortOrder
    stressLevel?: SortOrder
    daysGroomedInARow?: SortOrder
    burnoutStatus?: SortOrder
    consecutiveDaysFoalCare?: SortOrder
    lastGroomed?: SortOrder
    age?: SortOrder
    userId?: SortOrder
    trainingCooldown?: SortOrder
    earnings?: SortOrder
    horseXp?: SortOrder
    availableStatPoints?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HorseSumOrderByAggregateInput = {
    id?: SortOrder
    breedId?: SortOrder
    stableId?: SortOrder
    precision?: SortOrder
    strength?: SortOrder
    speed?: SortOrder
    agility?: SortOrder
    endurance?: SortOrder
    intelligence?: SortOrder
    stamina?: SortOrder
    balance?: SortOrder
    boldness?: SortOrder
    flexibility?: SortOrder
    obedience?: SortOrder
    focus?: SortOrder
    totalEarnings?: SortOrder
    sireId?: SortOrder
    damId?: SortOrder
    studFee?: SortOrder
    salePrice?: SortOrder
    bondScore?: SortOrder
    stressLevel?: SortOrder
    daysGroomedInARow?: SortOrder
    consecutiveDaysFoalCare?: SortOrder
    age?: SortOrder
    earnings?: SortOrder
    horseXp?: SortOrder
    availableStatPoints?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type GroomCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    speciality?: SortOrder
    experience?: SortOrder
    skillLevel?: SortOrder
    personality?: SortOrder
    sessionRate?: SortOrder
    availability?: SortOrder
    bio?: SortOrder
    imageUrl?: SortOrder
    isActive?: SortOrder
    hiredDate?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type GroomAvgOrderByAggregateInput = {
    id?: SortOrder
    experience?: SortOrder
    sessionRate?: SortOrder
  }

  export type GroomMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    speciality?: SortOrder
    experience?: SortOrder
    skillLevel?: SortOrder
    personality?: SortOrder
    sessionRate?: SortOrder
    bio?: SortOrder
    imageUrl?: SortOrder
    isActive?: SortOrder
    hiredDate?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type GroomMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    speciality?: SortOrder
    experience?: SortOrder
    skillLevel?: SortOrder
    personality?: SortOrder
    sessionRate?: SortOrder
    bio?: SortOrder
    imageUrl?: SortOrder
    isActive?: SortOrder
    hiredDate?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type GroomSumOrderByAggregateInput = {
    id?: SortOrder
    experience?: SortOrder
    sessionRate?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type HorseScalarRelationFilter = {
    is?: HorseWhereInput
    isNot?: HorseWhereInput
  }

  export type GroomScalarRelationFilter = {
    is?: GroomWhereInput
    isNot?: GroomWhereInput
  }

  export type GroomAssignmentFoalIdGroomIdIsActiveCompoundUniqueInput = {
    foalId: number
    groomId: number
    isActive: boolean
  }

  export type GroomAssignmentCountOrderByAggregateInput = {
    id?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    isActive?: SortOrder
    isDefault?: SortOrder
    priority?: SortOrder
    notes?: SortOrder
    foalId?: SortOrder
    groomId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type GroomAssignmentAvgOrderByAggregateInput = {
    id?: SortOrder
    priority?: SortOrder
    foalId?: SortOrder
    groomId?: SortOrder
  }

  export type GroomAssignmentMaxOrderByAggregateInput = {
    id?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    isActive?: SortOrder
    isDefault?: SortOrder
    priority?: SortOrder
    notes?: SortOrder
    foalId?: SortOrder
    groomId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type GroomAssignmentMinOrderByAggregateInput = {
    id?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    isActive?: SortOrder
    isDefault?: SortOrder
    priority?: SortOrder
    notes?: SortOrder
    foalId?: SortOrder
    groomId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type GroomAssignmentSumOrderByAggregateInput = {
    id?: SortOrder
    priority?: SortOrder
    foalId?: SortOrder
    groomId?: SortOrder
  }

  export type GroomAssignmentNullableScalarRelationFilter = {
    is?: GroomAssignmentWhereInput | null
    isNot?: GroomAssignmentWhereInput | null
  }

  export type GroomInteractionCountOrderByAggregateInput = {
    id?: SortOrder
    interactionType?: SortOrder
    duration?: SortOrder
    bondingChange?: SortOrder
    stressChange?: SortOrder
    quality?: SortOrder
    notes?: SortOrder
    cost?: SortOrder
    foalId?: SortOrder
    groomId?: SortOrder
    assignmentId?: SortOrder
    timestamp?: SortOrder
    createdAt?: SortOrder
  }

  export type GroomInteractionAvgOrderByAggregateInput = {
    id?: SortOrder
    duration?: SortOrder
    bondingChange?: SortOrder
    stressChange?: SortOrder
    cost?: SortOrder
    foalId?: SortOrder
    groomId?: SortOrder
    assignmentId?: SortOrder
  }

  export type GroomInteractionMaxOrderByAggregateInput = {
    id?: SortOrder
    interactionType?: SortOrder
    duration?: SortOrder
    bondingChange?: SortOrder
    stressChange?: SortOrder
    quality?: SortOrder
    notes?: SortOrder
    cost?: SortOrder
    foalId?: SortOrder
    groomId?: SortOrder
    assignmentId?: SortOrder
    timestamp?: SortOrder
    createdAt?: SortOrder
  }

  export type GroomInteractionMinOrderByAggregateInput = {
    id?: SortOrder
    interactionType?: SortOrder
    duration?: SortOrder
    bondingChange?: SortOrder
    stressChange?: SortOrder
    quality?: SortOrder
    notes?: SortOrder
    cost?: SortOrder
    foalId?: SortOrder
    groomId?: SortOrder
    assignmentId?: SortOrder
    timestamp?: SortOrder
    createdAt?: SortOrder
  }

  export type GroomInteractionSumOrderByAggregateInput = {
    id?: SortOrder
    duration?: SortOrder
    bondingChange?: SortOrder
    stressChange?: SortOrder
    cost?: SortOrder
    foalId?: SortOrder
    groomId?: SortOrder
    assignmentId?: SortOrder
  }

  export type ShowCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    discipline?: SortOrder
    levelMin?: SortOrder
    levelMax?: SortOrder
    entryFee?: SortOrder
    prize?: SortOrder
    runDate?: SortOrder
    hostUserId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ShowAvgOrderByAggregateInput = {
    id?: SortOrder
    levelMin?: SortOrder
    levelMax?: SortOrder
    entryFee?: SortOrder
    prize?: SortOrder
  }

  export type ShowMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    discipline?: SortOrder
    levelMin?: SortOrder
    levelMax?: SortOrder
    entryFee?: SortOrder
    prize?: SortOrder
    runDate?: SortOrder
    hostUserId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ShowMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    discipline?: SortOrder
    levelMin?: SortOrder
    levelMax?: SortOrder
    entryFee?: SortOrder
    prize?: SortOrder
    runDate?: SortOrder
    hostUserId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ShowSumOrderByAggregateInput = {
    id?: SortOrder
    levelMin?: SortOrder
    levelMax?: SortOrder
    entryFee?: SortOrder
    prize?: SortOrder
  }

  export type ShowScalarRelationFilter = {
    is?: ShowWhereInput
    isNot?: ShowWhereInput
  }

  export type CompetitionResultCountOrderByAggregateInput = {
    id?: SortOrder
    score?: SortOrder
    placement?: SortOrder
    discipline?: SortOrder
    runDate?: SortOrder
    showName?: SortOrder
    prizeWon?: SortOrder
    statGains?: SortOrder
    horseId?: SortOrder
    showId?: SortOrder
    createdAt?: SortOrder
  }

  export type CompetitionResultAvgOrderByAggregateInput = {
    id?: SortOrder
    score?: SortOrder
    prizeWon?: SortOrder
    horseId?: SortOrder
    showId?: SortOrder
  }

  export type CompetitionResultMaxOrderByAggregateInput = {
    id?: SortOrder
    score?: SortOrder
    placement?: SortOrder
    discipline?: SortOrder
    runDate?: SortOrder
    showName?: SortOrder
    prizeWon?: SortOrder
    horseId?: SortOrder
    showId?: SortOrder
    createdAt?: SortOrder
  }

  export type CompetitionResultMinOrderByAggregateInput = {
    id?: SortOrder
    score?: SortOrder
    placement?: SortOrder
    discipline?: SortOrder
    runDate?: SortOrder
    showName?: SortOrder
    prizeWon?: SortOrder
    horseId?: SortOrder
    showId?: SortOrder
    createdAt?: SortOrder
  }

  export type CompetitionResultSumOrderByAggregateInput = {
    id?: SortOrder
    score?: SortOrder
    prizeWon?: SortOrder
    horseId?: SortOrder
    showId?: SortOrder
  }

  export type TrainingLogCountOrderByAggregateInput = {
    id?: SortOrder
    discipline?: SortOrder
    trainedAt?: SortOrder
    horseId?: SortOrder
  }

  export type TrainingLogAvgOrderByAggregateInput = {
    id?: SortOrder
    horseId?: SortOrder
  }

  export type TrainingLogMaxOrderByAggregateInput = {
    id?: SortOrder
    discipline?: SortOrder
    trainedAt?: SortOrder
    horseId?: SortOrder
  }

  export type TrainingLogMinOrderByAggregateInput = {
    id?: SortOrder
    discipline?: SortOrder
    trainedAt?: SortOrder
    horseId?: SortOrder
  }

  export type TrainingLogSumOrderByAggregateInput = {
    id?: SortOrder
    horseId?: SortOrder
  }

  export type FoalDevelopmentCountOrderByAggregateInput = {
    id?: SortOrder
    currentDay?: SortOrder
    bondingLevel?: SortOrder
    stressLevel?: SortOrder
    completedActivities?: SortOrder
    foalId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FoalDevelopmentAvgOrderByAggregateInput = {
    id?: SortOrder
    currentDay?: SortOrder
    bondingLevel?: SortOrder
    stressLevel?: SortOrder
    foalId?: SortOrder
  }

  export type FoalDevelopmentMaxOrderByAggregateInput = {
    id?: SortOrder
    currentDay?: SortOrder
    bondingLevel?: SortOrder
    stressLevel?: SortOrder
    foalId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FoalDevelopmentMinOrderByAggregateInput = {
    id?: SortOrder
    currentDay?: SortOrder
    bondingLevel?: SortOrder
    stressLevel?: SortOrder
    foalId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FoalDevelopmentSumOrderByAggregateInput = {
    id?: SortOrder
    currentDay?: SortOrder
    bondingLevel?: SortOrder
    stressLevel?: SortOrder
    foalId?: SortOrder
  }

  export type FoalActivityCountOrderByAggregateInput = {
    id?: SortOrder
    day?: SortOrder
    activityType?: SortOrder
    outcome?: SortOrder
    bondingChange?: SortOrder
    stressChange?: SortOrder
    description?: SortOrder
    foalId?: SortOrder
    createdAt?: SortOrder
  }

  export type FoalActivityAvgOrderByAggregateInput = {
    id?: SortOrder
    day?: SortOrder
    bondingChange?: SortOrder
    stressChange?: SortOrder
    foalId?: SortOrder
  }

  export type FoalActivityMaxOrderByAggregateInput = {
    id?: SortOrder
    day?: SortOrder
    activityType?: SortOrder
    outcome?: SortOrder
    bondingChange?: SortOrder
    stressChange?: SortOrder
    description?: SortOrder
    foalId?: SortOrder
    createdAt?: SortOrder
  }

  export type FoalActivityMinOrderByAggregateInput = {
    id?: SortOrder
    day?: SortOrder
    activityType?: SortOrder
    outcome?: SortOrder
    bondingChange?: SortOrder
    stressChange?: SortOrder
    description?: SortOrder
    foalId?: SortOrder
    createdAt?: SortOrder
  }

  export type FoalActivitySumOrderByAggregateInput = {
    id?: SortOrder
    day?: SortOrder
    bondingChange?: SortOrder
    stressChange?: SortOrder
    foalId?: SortOrder
  }

  export type FoalTrainingHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    day?: SortOrder
    activity?: SortOrder
    outcome?: SortOrder
    bondChange?: SortOrder
    stressChange?: SortOrder
    horseId?: SortOrder
    timestamp?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FoalTrainingHistoryAvgOrderByAggregateInput = {
    day?: SortOrder
    bondChange?: SortOrder
    stressChange?: SortOrder
    horseId?: SortOrder
  }

  export type FoalTrainingHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    day?: SortOrder
    activity?: SortOrder
    outcome?: SortOrder
    bondChange?: SortOrder
    stressChange?: SortOrder
    horseId?: SortOrder
    timestamp?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FoalTrainingHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    day?: SortOrder
    activity?: SortOrder
    outcome?: SortOrder
    bondChange?: SortOrder
    stressChange?: SortOrder
    horseId?: SortOrder
    timestamp?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FoalTrainingHistorySumOrderByAggregateInput = {
    day?: SortOrder
    bondChange?: SortOrder
    stressChange?: SortOrder
    horseId?: SortOrder
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type XpEventCountOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    userId?: SortOrder
    timestamp?: SortOrder
  }

  export type XpEventAvgOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
  }

  export type XpEventMaxOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    userId?: SortOrder
    timestamp?: SortOrder
  }

  export type XpEventMinOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    userId?: SortOrder
    timestamp?: SortOrder
  }

  export type XpEventSumOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
  }

  export type RefreshTokenCountOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RefreshTokenAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type RefreshTokenMaxOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RefreshTokenMinOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RefreshTokenSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type HorseXpEventCountOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    horseId?: SortOrder
    timestamp?: SortOrder
  }

  export type HorseXpEventAvgOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    horseId?: SortOrder
  }

  export type HorseXpEventMaxOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    horseId?: SortOrder
    timestamp?: SortOrder
  }

  export type HorseXpEventMinOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    horseId?: SortOrder
    timestamp?: SortOrder
  }

  export type HorseXpEventSumOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    horseId?: SortOrder
  }

  export type GroomAssignmentCreateNestedManyWithoutUserInput = {
    create?: XOR<GroomAssignmentCreateWithoutUserInput, GroomAssignmentUncheckedCreateWithoutUserInput> | GroomAssignmentCreateWithoutUserInput[] | GroomAssignmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: GroomAssignmentCreateOrConnectWithoutUserInput | GroomAssignmentCreateOrConnectWithoutUserInput[]
    createMany?: GroomAssignmentCreateManyUserInputEnvelope
    connect?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
  }

  export type GroomCreateNestedManyWithoutUserInput = {
    create?: XOR<GroomCreateWithoutUserInput, GroomUncheckedCreateWithoutUserInput> | GroomCreateWithoutUserInput[] | GroomUncheckedCreateWithoutUserInput[]
    connectOrCreate?: GroomCreateOrConnectWithoutUserInput | GroomCreateOrConnectWithoutUserInput[]
    createMany?: GroomCreateManyUserInputEnvelope
    connect?: GroomWhereUniqueInput | GroomWhereUniqueInput[]
  }

  export type HorseCreateNestedManyWithoutUserInput = {
    create?: XOR<HorseCreateWithoutUserInput, HorseUncheckedCreateWithoutUserInput> | HorseCreateWithoutUserInput[] | HorseUncheckedCreateWithoutUserInput[]
    connectOrCreate?: HorseCreateOrConnectWithoutUserInput | HorseCreateOrConnectWithoutUserInput[]
    createMany?: HorseCreateManyUserInputEnvelope
    connect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
  }

  export type RefreshTokenCreateNestedManyWithoutUserInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type ShowCreateNestedManyWithoutHostUserInput = {
    create?: XOR<ShowCreateWithoutHostUserInput, ShowUncheckedCreateWithoutHostUserInput> | ShowCreateWithoutHostUserInput[] | ShowUncheckedCreateWithoutHostUserInput[]
    connectOrCreate?: ShowCreateOrConnectWithoutHostUserInput | ShowCreateOrConnectWithoutHostUserInput[]
    createMany?: ShowCreateManyHostUserInputEnvelope
    connect?: ShowWhereUniqueInput | ShowWhereUniqueInput[]
  }

  export type XpEventCreateNestedManyWithoutUserInput = {
    create?: XOR<XpEventCreateWithoutUserInput, XpEventUncheckedCreateWithoutUserInput> | XpEventCreateWithoutUserInput[] | XpEventUncheckedCreateWithoutUserInput[]
    connectOrCreate?: XpEventCreateOrConnectWithoutUserInput | XpEventCreateOrConnectWithoutUserInput[]
    createMany?: XpEventCreateManyUserInputEnvelope
    connect?: XpEventWhereUniqueInput | XpEventWhereUniqueInput[]
  }

  export type GroomAssignmentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<GroomAssignmentCreateWithoutUserInput, GroomAssignmentUncheckedCreateWithoutUserInput> | GroomAssignmentCreateWithoutUserInput[] | GroomAssignmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: GroomAssignmentCreateOrConnectWithoutUserInput | GroomAssignmentCreateOrConnectWithoutUserInput[]
    createMany?: GroomAssignmentCreateManyUserInputEnvelope
    connect?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
  }

  export type GroomUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<GroomCreateWithoutUserInput, GroomUncheckedCreateWithoutUserInput> | GroomCreateWithoutUserInput[] | GroomUncheckedCreateWithoutUserInput[]
    connectOrCreate?: GroomCreateOrConnectWithoutUserInput | GroomCreateOrConnectWithoutUserInput[]
    createMany?: GroomCreateManyUserInputEnvelope
    connect?: GroomWhereUniqueInput | GroomWhereUniqueInput[]
  }

  export type HorseUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<HorseCreateWithoutUserInput, HorseUncheckedCreateWithoutUserInput> | HorseCreateWithoutUserInput[] | HorseUncheckedCreateWithoutUserInput[]
    connectOrCreate?: HorseCreateOrConnectWithoutUserInput | HorseCreateOrConnectWithoutUserInput[]
    createMany?: HorseCreateManyUserInputEnvelope
    connect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
  }

  export type RefreshTokenUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type ShowUncheckedCreateNestedManyWithoutHostUserInput = {
    create?: XOR<ShowCreateWithoutHostUserInput, ShowUncheckedCreateWithoutHostUserInput> | ShowCreateWithoutHostUserInput[] | ShowUncheckedCreateWithoutHostUserInput[]
    connectOrCreate?: ShowCreateOrConnectWithoutHostUserInput | ShowCreateOrConnectWithoutHostUserInput[]
    createMany?: ShowCreateManyHostUserInputEnvelope
    connect?: ShowWhereUniqueInput | ShowWhereUniqueInput[]
  }

  export type XpEventUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<XpEventCreateWithoutUserInput, XpEventUncheckedCreateWithoutUserInput> | XpEventCreateWithoutUserInput[] | XpEventUncheckedCreateWithoutUserInput[]
    connectOrCreate?: XpEventCreateOrConnectWithoutUserInput | XpEventCreateOrConnectWithoutUserInput[]
    createMany?: XpEventCreateManyUserInputEnvelope
    connect?: XpEventWhereUniqueInput | XpEventWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type GroomAssignmentUpdateManyWithoutUserNestedInput = {
    create?: XOR<GroomAssignmentCreateWithoutUserInput, GroomAssignmentUncheckedCreateWithoutUserInput> | GroomAssignmentCreateWithoutUserInput[] | GroomAssignmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: GroomAssignmentCreateOrConnectWithoutUserInput | GroomAssignmentCreateOrConnectWithoutUserInput[]
    upsert?: GroomAssignmentUpsertWithWhereUniqueWithoutUserInput | GroomAssignmentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: GroomAssignmentCreateManyUserInputEnvelope
    set?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    disconnect?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    delete?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    connect?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    update?: GroomAssignmentUpdateWithWhereUniqueWithoutUserInput | GroomAssignmentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: GroomAssignmentUpdateManyWithWhereWithoutUserInput | GroomAssignmentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: GroomAssignmentScalarWhereInput | GroomAssignmentScalarWhereInput[]
  }

  export type GroomUpdateManyWithoutUserNestedInput = {
    create?: XOR<GroomCreateWithoutUserInput, GroomUncheckedCreateWithoutUserInput> | GroomCreateWithoutUserInput[] | GroomUncheckedCreateWithoutUserInput[]
    connectOrCreate?: GroomCreateOrConnectWithoutUserInput | GroomCreateOrConnectWithoutUserInput[]
    upsert?: GroomUpsertWithWhereUniqueWithoutUserInput | GroomUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: GroomCreateManyUserInputEnvelope
    set?: GroomWhereUniqueInput | GroomWhereUniqueInput[]
    disconnect?: GroomWhereUniqueInput | GroomWhereUniqueInput[]
    delete?: GroomWhereUniqueInput | GroomWhereUniqueInput[]
    connect?: GroomWhereUniqueInput | GroomWhereUniqueInput[]
    update?: GroomUpdateWithWhereUniqueWithoutUserInput | GroomUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: GroomUpdateManyWithWhereWithoutUserInput | GroomUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: GroomScalarWhereInput | GroomScalarWhereInput[]
  }

  export type HorseUpdateManyWithoutUserNestedInput = {
    create?: XOR<HorseCreateWithoutUserInput, HorseUncheckedCreateWithoutUserInput> | HorseCreateWithoutUserInput[] | HorseUncheckedCreateWithoutUserInput[]
    connectOrCreate?: HorseCreateOrConnectWithoutUserInput | HorseCreateOrConnectWithoutUserInput[]
    upsert?: HorseUpsertWithWhereUniqueWithoutUserInput | HorseUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: HorseCreateManyUserInputEnvelope
    set?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    disconnect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    delete?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    connect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    update?: HorseUpdateWithWhereUniqueWithoutUserInput | HorseUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: HorseUpdateManyWithWhereWithoutUserInput | HorseUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: HorseScalarWhereInput | HorseScalarWhereInput[]
  }

  export type RefreshTokenUpdateManyWithoutUserNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutUserInput | RefreshTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutUserInput | RefreshTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutUserInput | RefreshTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type ShowUpdateManyWithoutHostUserNestedInput = {
    create?: XOR<ShowCreateWithoutHostUserInput, ShowUncheckedCreateWithoutHostUserInput> | ShowCreateWithoutHostUserInput[] | ShowUncheckedCreateWithoutHostUserInput[]
    connectOrCreate?: ShowCreateOrConnectWithoutHostUserInput | ShowCreateOrConnectWithoutHostUserInput[]
    upsert?: ShowUpsertWithWhereUniqueWithoutHostUserInput | ShowUpsertWithWhereUniqueWithoutHostUserInput[]
    createMany?: ShowCreateManyHostUserInputEnvelope
    set?: ShowWhereUniqueInput | ShowWhereUniqueInput[]
    disconnect?: ShowWhereUniqueInput | ShowWhereUniqueInput[]
    delete?: ShowWhereUniqueInput | ShowWhereUniqueInput[]
    connect?: ShowWhereUniqueInput | ShowWhereUniqueInput[]
    update?: ShowUpdateWithWhereUniqueWithoutHostUserInput | ShowUpdateWithWhereUniqueWithoutHostUserInput[]
    updateMany?: ShowUpdateManyWithWhereWithoutHostUserInput | ShowUpdateManyWithWhereWithoutHostUserInput[]
    deleteMany?: ShowScalarWhereInput | ShowScalarWhereInput[]
  }

  export type XpEventUpdateManyWithoutUserNestedInput = {
    create?: XOR<XpEventCreateWithoutUserInput, XpEventUncheckedCreateWithoutUserInput> | XpEventCreateWithoutUserInput[] | XpEventUncheckedCreateWithoutUserInput[]
    connectOrCreate?: XpEventCreateOrConnectWithoutUserInput | XpEventCreateOrConnectWithoutUserInput[]
    upsert?: XpEventUpsertWithWhereUniqueWithoutUserInput | XpEventUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: XpEventCreateManyUserInputEnvelope
    set?: XpEventWhereUniqueInput | XpEventWhereUniqueInput[]
    disconnect?: XpEventWhereUniqueInput | XpEventWhereUniqueInput[]
    delete?: XpEventWhereUniqueInput | XpEventWhereUniqueInput[]
    connect?: XpEventWhereUniqueInput | XpEventWhereUniqueInput[]
    update?: XpEventUpdateWithWhereUniqueWithoutUserInput | XpEventUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: XpEventUpdateManyWithWhereWithoutUserInput | XpEventUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: XpEventScalarWhereInput | XpEventScalarWhereInput[]
  }

  export type GroomAssignmentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<GroomAssignmentCreateWithoutUserInput, GroomAssignmentUncheckedCreateWithoutUserInput> | GroomAssignmentCreateWithoutUserInput[] | GroomAssignmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: GroomAssignmentCreateOrConnectWithoutUserInput | GroomAssignmentCreateOrConnectWithoutUserInput[]
    upsert?: GroomAssignmentUpsertWithWhereUniqueWithoutUserInput | GroomAssignmentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: GroomAssignmentCreateManyUserInputEnvelope
    set?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    disconnect?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    delete?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    connect?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    update?: GroomAssignmentUpdateWithWhereUniqueWithoutUserInput | GroomAssignmentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: GroomAssignmentUpdateManyWithWhereWithoutUserInput | GroomAssignmentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: GroomAssignmentScalarWhereInput | GroomAssignmentScalarWhereInput[]
  }

  export type GroomUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<GroomCreateWithoutUserInput, GroomUncheckedCreateWithoutUserInput> | GroomCreateWithoutUserInput[] | GroomUncheckedCreateWithoutUserInput[]
    connectOrCreate?: GroomCreateOrConnectWithoutUserInput | GroomCreateOrConnectWithoutUserInput[]
    upsert?: GroomUpsertWithWhereUniqueWithoutUserInput | GroomUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: GroomCreateManyUserInputEnvelope
    set?: GroomWhereUniqueInput | GroomWhereUniqueInput[]
    disconnect?: GroomWhereUniqueInput | GroomWhereUniqueInput[]
    delete?: GroomWhereUniqueInput | GroomWhereUniqueInput[]
    connect?: GroomWhereUniqueInput | GroomWhereUniqueInput[]
    update?: GroomUpdateWithWhereUniqueWithoutUserInput | GroomUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: GroomUpdateManyWithWhereWithoutUserInput | GroomUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: GroomScalarWhereInput | GroomScalarWhereInput[]
  }

  export type HorseUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<HorseCreateWithoutUserInput, HorseUncheckedCreateWithoutUserInput> | HorseCreateWithoutUserInput[] | HorseUncheckedCreateWithoutUserInput[]
    connectOrCreate?: HorseCreateOrConnectWithoutUserInput | HorseCreateOrConnectWithoutUserInput[]
    upsert?: HorseUpsertWithWhereUniqueWithoutUserInput | HorseUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: HorseCreateManyUserInputEnvelope
    set?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    disconnect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    delete?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    connect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    update?: HorseUpdateWithWhereUniqueWithoutUserInput | HorseUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: HorseUpdateManyWithWhereWithoutUserInput | HorseUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: HorseScalarWhereInput | HorseScalarWhereInput[]
  }

  export type RefreshTokenUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutUserInput | RefreshTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutUserInput | RefreshTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutUserInput | RefreshTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type ShowUncheckedUpdateManyWithoutHostUserNestedInput = {
    create?: XOR<ShowCreateWithoutHostUserInput, ShowUncheckedCreateWithoutHostUserInput> | ShowCreateWithoutHostUserInput[] | ShowUncheckedCreateWithoutHostUserInput[]
    connectOrCreate?: ShowCreateOrConnectWithoutHostUserInput | ShowCreateOrConnectWithoutHostUserInput[]
    upsert?: ShowUpsertWithWhereUniqueWithoutHostUserInput | ShowUpsertWithWhereUniqueWithoutHostUserInput[]
    createMany?: ShowCreateManyHostUserInputEnvelope
    set?: ShowWhereUniqueInput | ShowWhereUniqueInput[]
    disconnect?: ShowWhereUniqueInput | ShowWhereUniqueInput[]
    delete?: ShowWhereUniqueInput | ShowWhereUniqueInput[]
    connect?: ShowWhereUniqueInput | ShowWhereUniqueInput[]
    update?: ShowUpdateWithWhereUniqueWithoutHostUserInput | ShowUpdateWithWhereUniqueWithoutHostUserInput[]
    updateMany?: ShowUpdateManyWithWhereWithoutHostUserInput | ShowUpdateManyWithWhereWithoutHostUserInput[]
    deleteMany?: ShowScalarWhereInput | ShowScalarWhereInput[]
  }

  export type XpEventUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<XpEventCreateWithoutUserInput, XpEventUncheckedCreateWithoutUserInput> | XpEventCreateWithoutUserInput[] | XpEventUncheckedCreateWithoutUserInput[]
    connectOrCreate?: XpEventCreateOrConnectWithoutUserInput | XpEventCreateOrConnectWithoutUserInput[]
    upsert?: XpEventUpsertWithWhereUniqueWithoutUserInput | XpEventUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: XpEventCreateManyUserInputEnvelope
    set?: XpEventWhereUniqueInput | XpEventWhereUniqueInput[]
    disconnect?: XpEventWhereUniqueInput | XpEventWhereUniqueInput[]
    delete?: XpEventWhereUniqueInput | XpEventWhereUniqueInput[]
    connect?: XpEventWhereUniqueInput | XpEventWhereUniqueInput[]
    update?: XpEventUpdateWithWhereUniqueWithoutUserInput | XpEventUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: XpEventUpdateManyWithWhereWithoutUserInput | XpEventUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: XpEventScalarWhereInput | XpEventScalarWhereInput[]
  }

  export type HorseCreateNestedManyWithoutBreedInput = {
    create?: XOR<HorseCreateWithoutBreedInput, HorseUncheckedCreateWithoutBreedInput> | HorseCreateWithoutBreedInput[] | HorseUncheckedCreateWithoutBreedInput[]
    connectOrCreate?: HorseCreateOrConnectWithoutBreedInput | HorseCreateOrConnectWithoutBreedInput[]
    createMany?: HorseCreateManyBreedInputEnvelope
    connect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
  }

  export type HorseUncheckedCreateNestedManyWithoutBreedInput = {
    create?: XOR<HorseCreateWithoutBreedInput, HorseUncheckedCreateWithoutBreedInput> | HorseCreateWithoutBreedInput[] | HorseUncheckedCreateWithoutBreedInput[]
    connectOrCreate?: HorseCreateOrConnectWithoutBreedInput | HorseCreateOrConnectWithoutBreedInput[]
    createMany?: HorseCreateManyBreedInputEnvelope
    connect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type HorseUpdateManyWithoutBreedNestedInput = {
    create?: XOR<HorseCreateWithoutBreedInput, HorseUncheckedCreateWithoutBreedInput> | HorseCreateWithoutBreedInput[] | HorseUncheckedCreateWithoutBreedInput[]
    connectOrCreate?: HorseCreateOrConnectWithoutBreedInput | HorseCreateOrConnectWithoutBreedInput[]
    upsert?: HorseUpsertWithWhereUniqueWithoutBreedInput | HorseUpsertWithWhereUniqueWithoutBreedInput[]
    createMany?: HorseCreateManyBreedInputEnvelope
    set?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    disconnect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    delete?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    connect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    update?: HorseUpdateWithWhereUniqueWithoutBreedInput | HorseUpdateWithWhereUniqueWithoutBreedInput[]
    updateMany?: HorseUpdateManyWithWhereWithoutBreedInput | HorseUpdateManyWithWhereWithoutBreedInput[]
    deleteMany?: HorseScalarWhereInput | HorseScalarWhereInput[]
  }

  export type HorseUncheckedUpdateManyWithoutBreedNestedInput = {
    create?: XOR<HorseCreateWithoutBreedInput, HorseUncheckedCreateWithoutBreedInput> | HorseCreateWithoutBreedInput[] | HorseUncheckedCreateWithoutBreedInput[]
    connectOrCreate?: HorseCreateOrConnectWithoutBreedInput | HorseCreateOrConnectWithoutBreedInput[]
    upsert?: HorseUpsertWithWhereUniqueWithoutBreedInput | HorseUpsertWithWhereUniqueWithoutBreedInput[]
    createMany?: HorseCreateManyBreedInputEnvelope
    set?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    disconnect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    delete?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    connect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    update?: HorseUpdateWithWhereUniqueWithoutBreedInput | HorseUpdateWithWhereUniqueWithoutBreedInput[]
    updateMany?: HorseUpdateManyWithWhereWithoutBreedInput | HorseUpdateManyWithWhereWithoutBreedInput[]
    deleteMany?: HorseScalarWhereInput | HorseScalarWhereInput[]
  }

  export type HorseCreateNestedManyWithoutStableInput = {
    create?: XOR<HorseCreateWithoutStableInput, HorseUncheckedCreateWithoutStableInput> | HorseCreateWithoutStableInput[] | HorseUncheckedCreateWithoutStableInput[]
    connectOrCreate?: HorseCreateOrConnectWithoutStableInput | HorseCreateOrConnectWithoutStableInput[]
    createMany?: HorseCreateManyStableInputEnvelope
    connect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
  }

  export type HorseUncheckedCreateNestedManyWithoutStableInput = {
    create?: XOR<HorseCreateWithoutStableInput, HorseUncheckedCreateWithoutStableInput> | HorseCreateWithoutStableInput[] | HorseUncheckedCreateWithoutStableInput[]
    connectOrCreate?: HorseCreateOrConnectWithoutStableInput | HorseCreateOrConnectWithoutStableInput[]
    createMany?: HorseCreateManyStableInputEnvelope
    connect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
  }

  export type HorseUpdateManyWithoutStableNestedInput = {
    create?: XOR<HorseCreateWithoutStableInput, HorseUncheckedCreateWithoutStableInput> | HorseCreateWithoutStableInput[] | HorseUncheckedCreateWithoutStableInput[]
    connectOrCreate?: HorseCreateOrConnectWithoutStableInput | HorseCreateOrConnectWithoutStableInput[]
    upsert?: HorseUpsertWithWhereUniqueWithoutStableInput | HorseUpsertWithWhereUniqueWithoutStableInput[]
    createMany?: HorseCreateManyStableInputEnvelope
    set?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    disconnect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    delete?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    connect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    update?: HorseUpdateWithWhereUniqueWithoutStableInput | HorseUpdateWithWhereUniqueWithoutStableInput[]
    updateMany?: HorseUpdateManyWithWhereWithoutStableInput | HorseUpdateManyWithWhereWithoutStableInput[]
    deleteMany?: HorseScalarWhereInput | HorseScalarWhereInput[]
  }

  export type HorseUncheckedUpdateManyWithoutStableNestedInput = {
    create?: XOR<HorseCreateWithoutStableInput, HorseUncheckedCreateWithoutStableInput> | HorseCreateWithoutStableInput[] | HorseUncheckedCreateWithoutStableInput[]
    connectOrCreate?: HorseCreateOrConnectWithoutStableInput | HorseCreateOrConnectWithoutStableInput[]
    upsert?: HorseUpsertWithWhereUniqueWithoutStableInput | HorseUpsertWithWhereUniqueWithoutStableInput[]
    createMany?: HorseCreateManyStableInputEnvelope
    set?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    disconnect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    delete?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    connect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    update?: HorseUpdateWithWhereUniqueWithoutStableInput | HorseUpdateWithWhereUniqueWithoutStableInput[]
    updateMany?: HorseUpdateManyWithWhereWithoutStableInput | HorseUpdateManyWithWhereWithoutStableInput[]
    deleteMany?: HorseScalarWhereInput | HorseScalarWhereInput[]
  }

  export type CompetitionResultCreateNestedManyWithoutHorseInput = {
    create?: XOR<CompetitionResultCreateWithoutHorseInput, CompetitionResultUncheckedCreateWithoutHorseInput> | CompetitionResultCreateWithoutHorseInput[] | CompetitionResultUncheckedCreateWithoutHorseInput[]
    connectOrCreate?: CompetitionResultCreateOrConnectWithoutHorseInput | CompetitionResultCreateOrConnectWithoutHorseInput[]
    createMany?: CompetitionResultCreateManyHorseInputEnvelope
    connect?: CompetitionResultWhereUniqueInput | CompetitionResultWhereUniqueInput[]
  }

  export type FoalActivityCreateNestedManyWithoutFoalInput = {
    create?: XOR<FoalActivityCreateWithoutFoalInput, FoalActivityUncheckedCreateWithoutFoalInput> | FoalActivityCreateWithoutFoalInput[] | FoalActivityUncheckedCreateWithoutFoalInput[]
    connectOrCreate?: FoalActivityCreateOrConnectWithoutFoalInput | FoalActivityCreateOrConnectWithoutFoalInput[]
    createMany?: FoalActivityCreateManyFoalInputEnvelope
    connect?: FoalActivityWhereUniqueInput | FoalActivityWhereUniqueInput[]
  }

  export type FoalDevelopmentCreateNestedOneWithoutFoalInput = {
    create?: XOR<FoalDevelopmentCreateWithoutFoalInput, FoalDevelopmentUncheckedCreateWithoutFoalInput>
    connectOrCreate?: FoalDevelopmentCreateOrConnectWithoutFoalInput
    connect?: FoalDevelopmentWhereUniqueInput
  }

  export type FoalTrainingHistoryCreateNestedManyWithoutHorseInput = {
    create?: XOR<FoalTrainingHistoryCreateWithoutHorseInput, FoalTrainingHistoryUncheckedCreateWithoutHorseInput> | FoalTrainingHistoryCreateWithoutHorseInput[] | FoalTrainingHistoryUncheckedCreateWithoutHorseInput[]
    connectOrCreate?: FoalTrainingHistoryCreateOrConnectWithoutHorseInput | FoalTrainingHistoryCreateOrConnectWithoutHorseInput[]
    createMany?: FoalTrainingHistoryCreateManyHorseInputEnvelope
    connect?: FoalTrainingHistoryWhereUniqueInput | FoalTrainingHistoryWhereUniqueInput[]
  }

  export type GroomAssignmentCreateNestedManyWithoutFoalInput = {
    create?: XOR<GroomAssignmentCreateWithoutFoalInput, GroomAssignmentUncheckedCreateWithoutFoalInput> | GroomAssignmentCreateWithoutFoalInput[] | GroomAssignmentUncheckedCreateWithoutFoalInput[]
    connectOrCreate?: GroomAssignmentCreateOrConnectWithoutFoalInput | GroomAssignmentCreateOrConnectWithoutFoalInput[]
    createMany?: GroomAssignmentCreateManyFoalInputEnvelope
    connect?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
  }

  export type GroomInteractionCreateNestedManyWithoutFoalInput = {
    create?: XOR<GroomInteractionCreateWithoutFoalInput, GroomInteractionUncheckedCreateWithoutFoalInput> | GroomInteractionCreateWithoutFoalInput[] | GroomInteractionUncheckedCreateWithoutFoalInput[]
    connectOrCreate?: GroomInteractionCreateOrConnectWithoutFoalInput | GroomInteractionCreateOrConnectWithoutFoalInput[]
    createMany?: GroomInteractionCreateManyFoalInputEnvelope
    connect?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
  }

  export type HorseXpEventCreateNestedManyWithoutHorseInput = {
    create?: XOR<HorseXpEventCreateWithoutHorseInput, HorseXpEventUncheckedCreateWithoutHorseInput> | HorseXpEventCreateWithoutHorseInput[] | HorseXpEventUncheckedCreateWithoutHorseInput[]
    connectOrCreate?: HorseXpEventCreateOrConnectWithoutHorseInput | HorseXpEventCreateOrConnectWithoutHorseInput[]
    createMany?: HorseXpEventCreateManyHorseInputEnvelope
    connect?: HorseXpEventWhereUniqueInput | HorseXpEventWhereUniqueInput[]
  }

  export type BreedCreateNestedOneWithoutHorsesInput = {
    create?: XOR<BreedCreateWithoutHorsesInput, BreedUncheckedCreateWithoutHorsesInput>
    connectOrCreate?: BreedCreateOrConnectWithoutHorsesInput
    connect?: BreedWhereUniqueInput
  }

  export type HorseCreateNestedOneWithoutDamOffspringInput = {
    create?: XOR<HorseCreateWithoutDamOffspringInput, HorseUncheckedCreateWithoutDamOffspringInput>
    connectOrCreate?: HorseCreateOrConnectWithoutDamOffspringInput
    connect?: HorseWhereUniqueInput
  }

  export type HorseCreateNestedManyWithoutDamInput = {
    create?: XOR<HorseCreateWithoutDamInput, HorseUncheckedCreateWithoutDamInput> | HorseCreateWithoutDamInput[] | HorseUncheckedCreateWithoutDamInput[]
    connectOrCreate?: HorseCreateOrConnectWithoutDamInput | HorseCreateOrConnectWithoutDamInput[]
    createMany?: HorseCreateManyDamInputEnvelope
    connect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
  }

  export type HorseCreateNestedOneWithoutSireOffspringInput = {
    create?: XOR<HorseCreateWithoutSireOffspringInput, HorseUncheckedCreateWithoutSireOffspringInput>
    connectOrCreate?: HorseCreateOrConnectWithoutSireOffspringInput
    connect?: HorseWhereUniqueInput
  }

  export type HorseCreateNestedManyWithoutSireInput = {
    create?: XOR<HorseCreateWithoutSireInput, HorseUncheckedCreateWithoutSireInput> | HorseCreateWithoutSireInput[] | HorseUncheckedCreateWithoutSireInput[]
    connectOrCreate?: HorseCreateOrConnectWithoutSireInput | HorseCreateOrConnectWithoutSireInput[]
    createMany?: HorseCreateManySireInputEnvelope
    connect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
  }

  export type StableCreateNestedOneWithoutHorsesInput = {
    create?: XOR<StableCreateWithoutHorsesInput, StableUncheckedCreateWithoutHorsesInput>
    connectOrCreate?: StableCreateOrConnectWithoutHorsesInput
    connect?: StableWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutHorsesInput = {
    create?: XOR<UserCreateWithoutHorsesInput, UserUncheckedCreateWithoutHorsesInput>
    connectOrCreate?: UserCreateOrConnectWithoutHorsesInput
    connect?: UserWhereUniqueInput
  }

  export type TrainingLogCreateNestedManyWithoutHorseInput = {
    create?: XOR<TrainingLogCreateWithoutHorseInput, TrainingLogUncheckedCreateWithoutHorseInput> | TrainingLogCreateWithoutHorseInput[] | TrainingLogUncheckedCreateWithoutHorseInput[]
    connectOrCreate?: TrainingLogCreateOrConnectWithoutHorseInput | TrainingLogCreateOrConnectWithoutHorseInput[]
    createMany?: TrainingLogCreateManyHorseInputEnvelope
    connect?: TrainingLogWhereUniqueInput | TrainingLogWhereUniqueInput[]
  }

  export type CompetitionResultUncheckedCreateNestedManyWithoutHorseInput = {
    create?: XOR<CompetitionResultCreateWithoutHorseInput, CompetitionResultUncheckedCreateWithoutHorseInput> | CompetitionResultCreateWithoutHorseInput[] | CompetitionResultUncheckedCreateWithoutHorseInput[]
    connectOrCreate?: CompetitionResultCreateOrConnectWithoutHorseInput | CompetitionResultCreateOrConnectWithoutHorseInput[]
    createMany?: CompetitionResultCreateManyHorseInputEnvelope
    connect?: CompetitionResultWhereUniqueInput | CompetitionResultWhereUniqueInput[]
  }

  export type FoalActivityUncheckedCreateNestedManyWithoutFoalInput = {
    create?: XOR<FoalActivityCreateWithoutFoalInput, FoalActivityUncheckedCreateWithoutFoalInput> | FoalActivityCreateWithoutFoalInput[] | FoalActivityUncheckedCreateWithoutFoalInput[]
    connectOrCreate?: FoalActivityCreateOrConnectWithoutFoalInput | FoalActivityCreateOrConnectWithoutFoalInput[]
    createMany?: FoalActivityCreateManyFoalInputEnvelope
    connect?: FoalActivityWhereUniqueInput | FoalActivityWhereUniqueInput[]
  }

  export type FoalDevelopmentUncheckedCreateNestedOneWithoutFoalInput = {
    create?: XOR<FoalDevelopmentCreateWithoutFoalInput, FoalDevelopmentUncheckedCreateWithoutFoalInput>
    connectOrCreate?: FoalDevelopmentCreateOrConnectWithoutFoalInput
    connect?: FoalDevelopmentWhereUniqueInput
  }

  export type FoalTrainingHistoryUncheckedCreateNestedManyWithoutHorseInput = {
    create?: XOR<FoalTrainingHistoryCreateWithoutHorseInput, FoalTrainingHistoryUncheckedCreateWithoutHorseInput> | FoalTrainingHistoryCreateWithoutHorseInput[] | FoalTrainingHistoryUncheckedCreateWithoutHorseInput[]
    connectOrCreate?: FoalTrainingHistoryCreateOrConnectWithoutHorseInput | FoalTrainingHistoryCreateOrConnectWithoutHorseInput[]
    createMany?: FoalTrainingHistoryCreateManyHorseInputEnvelope
    connect?: FoalTrainingHistoryWhereUniqueInput | FoalTrainingHistoryWhereUniqueInput[]
  }

  export type GroomAssignmentUncheckedCreateNestedManyWithoutFoalInput = {
    create?: XOR<GroomAssignmentCreateWithoutFoalInput, GroomAssignmentUncheckedCreateWithoutFoalInput> | GroomAssignmentCreateWithoutFoalInput[] | GroomAssignmentUncheckedCreateWithoutFoalInput[]
    connectOrCreate?: GroomAssignmentCreateOrConnectWithoutFoalInput | GroomAssignmentCreateOrConnectWithoutFoalInput[]
    createMany?: GroomAssignmentCreateManyFoalInputEnvelope
    connect?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
  }

  export type GroomInteractionUncheckedCreateNestedManyWithoutFoalInput = {
    create?: XOR<GroomInteractionCreateWithoutFoalInput, GroomInteractionUncheckedCreateWithoutFoalInput> | GroomInteractionCreateWithoutFoalInput[] | GroomInteractionUncheckedCreateWithoutFoalInput[]
    connectOrCreate?: GroomInteractionCreateOrConnectWithoutFoalInput | GroomInteractionCreateOrConnectWithoutFoalInput[]
    createMany?: GroomInteractionCreateManyFoalInputEnvelope
    connect?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
  }

  export type HorseXpEventUncheckedCreateNestedManyWithoutHorseInput = {
    create?: XOR<HorseXpEventCreateWithoutHorseInput, HorseXpEventUncheckedCreateWithoutHorseInput> | HorseXpEventCreateWithoutHorseInput[] | HorseXpEventUncheckedCreateWithoutHorseInput[]
    connectOrCreate?: HorseXpEventCreateOrConnectWithoutHorseInput | HorseXpEventCreateOrConnectWithoutHorseInput[]
    createMany?: HorseXpEventCreateManyHorseInputEnvelope
    connect?: HorseXpEventWhereUniqueInput | HorseXpEventWhereUniqueInput[]
  }

  export type HorseUncheckedCreateNestedManyWithoutDamInput = {
    create?: XOR<HorseCreateWithoutDamInput, HorseUncheckedCreateWithoutDamInput> | HorseCreateWithoutDamInput[] | HorseUncheckedCreateWithoutDamInput[]
    connectOrCreate?: HorseCreateOrConnectWithoutDamInput | HorseCreateOrConnectWithoutDamInput[]
    createMany?: HorseCreateManyDamInputEnvelope
    connect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
  }

  export type HorseUncheckedCreateNestedManyWithoutSireInput = {
    create?: XOR<HorseCreateWithoutSireInput, HorseUncheckedCreateWithoutSireInput> | HorseCreateWithoutSireInput[] | HorseUncheckedCreateWithoutSireInput[]
    connectOrCreate?: HorseCreateOrConnectWithoutSireInput | HorseCreateOrConnectWithoutSireInput[]
    createMany?: HorseCreateManySireInputEnvelope
    connect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
  }

  export type TrainingLogUncheckedCreateNestedManyWithoutHorseInput = {
    create?: XOR<TrainingLogCreateWithoutHorseInput, TrainingLogUncheckedCreateWithoutHorseInput> | TrainingLogCreateWithoutHorseInput[] | TrainingLogUncheckedCreateWithoutHorseInput[]
    connectOrCreate?: TrainingLogCreateOrConnectWithoutHorseInput | TrainingLogCreateOrConnectWithoutHorseInput[]
    createMany?: TrainingLogCreateManyHorseInputEnvelope
    connect?: TrainingLogWhereUniqueInput | TrainingLogWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type CompetitionResultUpdateManyWithoutHorseNestedInput = {
    create?: XOR<CompetitionResultCreateWithoutHorseInput, CompetitionResultUncheckedCreateWithoutHorseInput> | CompetitionResultCreateWithoutHorseInput[] | CompetitionResultUncheckedCreateWithoutHorseInput[]
    connectOrCreate?: CompetitionResultCreateOrConnectWithoutHorseInput | CompetitionResultCreateOrConnectWithoutHorseInput[]
    upsert?: CompetitionResultUpsertWithWhereUniqueWithoutHorseInput | CompetitionResultUpsertWithWhereUniqueWithoutHorseInput[]
    createMany?: CompetitionResultCreateManyHorseInputEnvelope
    set?: CompetitionResultWhereUniqueInput | CompetitionResultWhereUniqueInput[]
    disconnect?: CompetitionResultWhereUniqueInput | CompetitionResultWhereUniqueInput[]
    delete?: CompetitionResultWhereUniqueInput | CompetitionResultWhereUniqueInput[]
    connect?: CompetitionResultWhereUniqueInput | CompetitionResultWhereUniqueInput[]
    update?: CompetitionResultUpdateWithWhereUniqueWithoutHorseInput | CompetitionResultUpdateWithWhereUniqueWithoutHorseInput[]
    updateMany?: CompetitionResultUpdateManyWithWhereWithoutHorseInput | CompetitionResultUpdateManyWithWhereWithoutHorseInput[]
    deleteMany?: CompetitionResultScalarWhereInput | CompetitionResultScalarWhereInput[]
  }

  export type FoalActivityUpdateManyWithoutFoalNestedInput = {
    create?: XOR<FoalActivityCreateWithoutFoalInput, FoalActivityUncheckedCreateWithoutFoalInput> | FoalActivityCreateWithoutFoalInput[] | FoalActivityUncheckedCreateWithoutFoalInput[]
    connectOrCreate?: FoalActivityCreateOrConnectWithoutFoalInput | FoalActivityCreateOrConnectWithoutFoalInput[]
    upsert?: FoalActivityUpsertWithWhereUniqueWithoutFoalInput | FoalActivityUpsertWithWhereUniqueWithoutFoalInput[]
    createMany?: FoalActivityCreateManyFoalInputEnvelope
    set?: FoalActivityWhereUniqueInput | FoalActivityWhereUniqueInput[]
    disconnect?: FoalActivityWhereUniqueInput | FoalActivityWhereUniqueInput[]
    delete?: FoalActivityWhereUniqueInput | FoalActivityWhereUniqueInput[]
    connect?: FoalActivityWhereUniqueInput | FoalActivityWhereUniqueInput[]
    update?: FoalActivityUpdateWithWhereUniqueWithoutFoalInput | FoalActivityUpdateWithWhereUniqueWithoutFoalInput[]
    updateMany?: FoalActivityUpdateManyWithWhereWithoutFoalInput | FoalActivityUpdateManyWithWhereWithoutFoalInput[]
    deleteMany?: FoalActivityScalarWhereInput | FoalActivityScalarWhereInput[]
  }

  export type FoalDevelopmentUpdateOneWithoutFoalNestedInput = {
    create?: XOR<FoalDevelopmentCreateWithoutFoalInput, FoalDevelopmentUncheckedCreateWithoutFoalInput>
    connectOrCreate?: FoalDevelopmentCreateOrConnectWithoutFoalInput
    upsert?: FoalDevelopmentUpsertWithoutFoalInput
    disconnect?: FoalDevelopmentWhereInput | boolean
    delete?: FoalDevelopmentWhereInput | boolean
    connect?: FoalDevelopmentWhereUniqueInput
    update?: XOR<XOR<FoalDevelopmentUpdateToOneWithWhereWithoutFoalInput, FoalDevelopmentUpdateWithoutFoalInput>, FoalDevelopmentUncheckedUpdateWithoutFoalInput>
  }

  export type FoalTrainingHistoryUpdateManyWithoutHorseNestedInput = {
    create?: XOR<FoalTrainingHistoryCreateWithoutHorseInput, FoalTrainingHistoryUncheckedCreateWithoutHorseInput> | FoalTrainingHistoryCreateWithoutHorseInput[] | FoalTrainingHistoryUncheckedCreateWithoutHorseInput[]
    connectOrCreate?: FoalTrainingHistoryCreateOrConnectWithoutHorseInput | FoalTrainingHistoryCreateOrConnectWithoutHorseInput[]
    upsert?: FoalTrainingHistoryUpsertWithWhereUniqueWithoutHorseInput | FoalTrainingHistoryUpsertWithWhereUniqueWithoutHorseInput[]
    createMany?: FoalTrainingHistoryCreateManyHorseInputEnvelope
    set?: FoalTrainingHistoryWhereUniqueInput | FoalTrainingHistoryWhereUniqueInput[]
    disconnect?: FoalTrainingHistoryWhereUniqueInput | FoalTrainingHistoryWhereUniqueInput[]
    delete?: FoalTrainingHistoryWhereUniqueInput | FoalTrainingHistoryWhereUniqueInput[]
    connect?: FoalTrainingHistoryWhereUniqueInput | FoalTrainingHistoryWhereUniqueInput[]
    update?: FoalTrainingHistoryUpdateWithWhereUniqueWithoutHorseInput | FoalTrainingHistoryUpdateWithWhereUniqueWithoutHorseInput[]
    updateMany?: FoalTrainingHistoryUpdateManyWithWhereWithoutHorseInput | FoalTrainingHistoryUpdateManyWithWhereWithoutHorseInput[]
    deleteMany?: FoalTrainingHistoryScalarWhereInput | FoalTrainingHistoryScalarWhereInput[]
  }

  export type GroomAssignmentUpdateManyWithoutFoalNestedInput = {
    create?: XOR<GroomAssignmentCreateWithoutFoalInput, GroomAssignmentUncheckedCreateWithoutFoalInput> | GroomAssignmentCreateWithoutFoalInput[] | GroomAssignmentUncheckedCreateWithoutFoalInput[]
    connectOrCreate?: GroomAssignmentCreateOrConnectWithoutFoalInput | GroomAssignmentCreateOrConnectWithoutFoalInput[]
    upsert?: GroomAssignmentUpsertWithWhereUniqueWithoutFoalInput | GroomAssignmentUpsertWithWhereUniqueWithoutFoalInput[]
    createMany?: GroomAssignmentCreateManyFoalInputEnvelope
    set?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    disconnect?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    delete?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    connect?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    update?: GroomAssignmentUpdateWithWhereUniqueWithoutFoalInput | GroomAssignmentUpdateWithWhereUniqueWithoutFoalInput[]
    updateMany?: GroomAssignmentUpdateManyWithWhereWithoutFoalInput | GroomAssignmentUpdateManyWithWhereWithoutFoalInput[]
    deleteMany?: GroomAssignmentScalarWhereInput | GroomAssignmentScalarWhereInput[]
  }

  export type GroomInteractionUpdateManyWithoutFoalNestedInput = {
    create?: XOR<GroomInteractionCreateWithoutFoalInput, GroomInteractionUncheckedCreateWithoutFoalInput> | GroomInteractionCreateWithoutFoalInput[] | GroomInteractionUncheckedCreateWithoutFoalInput[]
    connectOrCreate?: GroomInteractionCreateOrConnectWithoutFoalInput | GroomInteractionCreateOrConnectWithoutFoalInput[]
    upsert?: GroomInteractionUpsertWithWhereUniqueWithoutFoalInput | GroomInteractionUpsertWithWhereUniqueWithoutFoalInput[]
    createMany?: GroomInteractionCreateManyFoalInputEnvelope
    set?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    disconnect?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    delete?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    connect?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    update?: GroomInteractionUpdateWithWhereUniqueWithoutFoalInput | GroomInteractionUpdateWithWhereUniqueWithoutFoalInput[]
    updateMany?: GroomInteractionUpdateManyWithWhereWithoutFoalInput | GroomInteractionUpdateManyWithWhereWithoutFoalInput[]
    deleteMany?: GroomInteractionScalarWhereInput | GroomInteractionScalarWhereInput[]
  }

  export type HorseXpEventUpdateManyWithoutHorseNestedInput = {
    create?: XOR<HorseXpEventCreateWithoutHorseInput, HorseXpEventUncheckedCreateWithoutHorseInput> | HorseXpEventCreateWithoutHorseInput[] | HorseXpEventUncheckedCreateWithoutHorseInput[]
    connectOrCreate?: HorseXpEventCreateOrConnectWithoutHorseInput | HorseXpEventCreateOrConnectWithoutHorseInput[]
    upsert?: HorseXpEventUpsertWithWhereUniqueWithoutHorseInput | HorseXpEventUpsertWithWhereUniqueWithoutHorseInput[]
    createMany?: HorseXpEventCreateManyHorseInputEnvelope
    set?: HorseXpEventWhereUniqueInput | HorseXpEventWhereUniqueInput[]
    disconnect?: HorseXpEventWhereUniqueInput | HorseXpEventWhereUniqueInput[]
    delete?: HorseXpEventWhereUniqueInput | HorseXpEventWhereUniqueInput[]
    connect?: HorseXpEventWhereUniqueInput | HorseXpEventWhereUniqueInput[]
    update?: HorseXpEventUpdateWithWhereUniqueWithoutHorseInput | HorseXpEventUpdateWithWhereUniqueWithoutHorseInput[]
    updateMany?: HorseXpEventUpdateManyWithWhereWithoutHorseInput | HorseXpEventUpdateManyWithWhereWithoutHorseInput[]
    deleteMany?: HorseXpEventScalarWhereInput | HorseXpEventScalarWhereInput[]
  }

  export type BreedUpdateOneWithoutHorsesNestedInput = {
    create?: XOR<BreedCreateWithoutHorsesInput, BreedUncheckedCreateWithoutHorsesInput>
    connectOrCreate?: BreedCreateOrConnectWithoutHorsesInput
    upsert?: BreedUpsertWithoutHorsesInput
    disconnect?: BreedWhereInput | boolean
    delete?: BreedWhereInput | boolean
    connect?: BreedWhereUniqueInput
    update?: XOR<XOR<BreedUpdateToOneWithWhereWithoutHorsesInput, BreedUpdateWithoutHorsesInput>, BreedUncheckedUpdateWithoutHorsesInput>
  }

  export type HorseUpdateOneWithoutDamOffspringNestedInput = {
    create?: XOR<HorseCreateWithoutDamOffspringInput, HorseUncheckedCreateWithoutDamOffspringInput>
    connectOrCreate?: HorseCreateOrConnectWithoutDamOffspringInput
    upsert?: HorseUpsertWithoutDamOffspringInput
    disconnect?: HorseWhereInput | boolean
    delete?: HorseWhereInput | boolean
    connect?: HorseWhereUniqueInput
    update?: XOR<XOR<HorseUpdateToOneWithWhereWithoutDamOffspringInput, HorseUpdateWithoutDamOffspringInput>, HorseUncheckedUpdateWithoutDamOffspringInput>
  }

  export type HorseUpdateManyWithoutDamNestedInput = {
    create?: XOR<HorseCreateWithoutDamInput, HorseUncheckedCreateWithoutDamInput> | HorseCreateWithoutDamInput[] | HorseUncheckedCreateWithoutDamInput[]
    connectOrCreate?: HorseCreateOrConnectWithoutDamInput | HorseCreateOrConnectWithoutDamInput[]
    upsert?: HorseUpsertWithWhereUniqueWithoutDamInput | HorseUpsertWithWhereUniqueWithoutDamInput[]
    createMany?: HorseCreateManyDamInputEnvelope
    set?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    disconnect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    delete?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    connect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    update?: HorseUpdateWithWhereUniqueWithoutDamInput | HorseUpdateWithWhereUniqueWithoutDamInput[]
    updateMany?: HorseUpdateManyWithWhereWithoutDamInput | HorseUpdateManyWithWhereWithoutDamInput[]
    deleteMany?: HorseScalarWhereInput | HorseScalarWhereInput[]
  }

  export type HorseUpdateOneWithoutSireOffspringNestedInput = {
    create?: XOR<HorseCreateWithoutSireOffspringInput, HorseUncheckedCreateWithoutSireOffspringInput>
    connectOrCreate?: HorseCreateOrConnectWithoutSireOffspringInput
    upsert?: HorseUpsertWithoutSireOffspringInput
    disconnect?: HorseWhereInput | boolean
    delete?: HorseWhereInput | boolean
    connect?: HorseWhereUniqueInput
    update?: XOR<XOR<HorseUpdateToOneWithWhereWithoutSireOffspringInput, HorseUpdateWithoutSireOffspringInput>, HorseUncheckedUpdateWithoutSireOffspringInput>
  }

  export type HorseUpdateManyWithoutSireNestedInput = {
    create?: XOR<HorseCreateWithoutSireInput, HorseUncheckedCreateWithoutSireInput> | HorseCreateWithoutSireInput[] | HorseUncheckedCreateWithoutSireInput[]
    connectOrCreate?: HorseCreateOrConnectWithoutSireInput | HorseCreateOrConnectWithoutSireInput[]
    upsert?: HorseUpsertWithWhereUniqueWithoutSireInput | HorseUpsertWithWhereUniqueWithoutSireInput[]
    createMany?: HorseCreateManySireInputEnvelope
    set?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    disconnect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    delete?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    connect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    update?: HorseUpdateWithWhereUniqueWithoutSireInput | HorseUpdateWithWhereUniqueWithoutSireInput[]
    updateMany?: HorseUpdateManyWithWhereWithoutSireInput | HorseUpdateManyWithWhereWithoutSireInput[]
    deleteMany?: HorseScalarWhereInput | HorseScalarWhereInput[]
  }

  export type StableUpdateOneWithoutHorsesNestedInput = {
    create?: XOR<StableCreateWithoutHorsesInput, StableUncheckedCreateWithoutHorsesInput>
    connectOrCreate?: StableCreateOrConnectWithoutHorsesInput
    upsert?: StableUpsertWithoutHorsesInput
    disconnect?: StableWhereInput | boolean
    delete?: StableWhereInput | boolean
    connect?: StableWhereUniqueInput
    update?: XOR<XOR<StableUpdateToOneWithWhereWithoutHorsesInput, StableUpdateWithoutHorsesInput>, StableUncheckedUpdateWithoutHorsesInput>
  }

  export type UserUpdateOneWithoutHorsesNestedInput = {
    create?: XOR<UserCreateWithoutHorsesInput, UserUncheckedCreateWithoutHorsesInput>
    connectOrCreate?: UserCreateOrConnectWithoutHorsesInput
    upsert?: UserUpsertWithoutHorsesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutHorsesInput, UserUpdateWithoutHorsesInput>, UserUncheckedUpdateWithoutHorsesInput>
  }

  export type TrainingLogUpdateManyWithoutHorseNestedInput = {
    create?: XOR<TrainingLogCreateWithoutHorseInput, TrainingLogUncheckedCreateWithoutHorseInput> | TrainingLogCreateWithoutHorseInput[] | TrainingLogUncheckedCreateWithoutHorseInput[]
    connectOrCreate?: TrainingLogCreateOrConnectWithoutHorseInput | TrainingLogCreateOrConnectWithoutHorseInput[]
    upsert?: TrainingLogUpsertWithWhereUniqueWithoutHorseInput | TrainingLogUpsertWithWhereUniqueWithoutHorseInput[]
    createMany?: TrainingLogCreateManyHorseInputEnvelope
    set?: TrainingLogWhereUniqueInput | TrainingLogWhereUniqueInput[]
    disconnect?: TrainingLogWhereUniqueInput | TrainingLogWhereUniqueInput[]
    delete?: TrainingLogWhereUniqueInput | TrainingLogWhereUniqueInput[]
    connect?: TrainingLogWhereUniqueInput | TrainingLogWhereUniqueInput[]
    update?: TrainingLogUpdateWithWhereUniqueWithoutHorseInput | TrainingLogUpdateWithWhereUniqueWithoutHorseInput[]
    updateMany?: TrainingLogUpdateManyWithWhereWithoutHorseInput | TrainingLogUpdateManyWithWhereWithoutHorseInput[]
    deleteMany?: TrainingLogScalarWhereInput | TrainingLogScalarWhereInput[]
  }

  export type CompetitionResultUncheckedUpdateManyWithoutHorseNestedInput = {
    create?: XOR<CompetitionResultCreateWithoutHorseInput, CompetitionResultUncheckedCreateWithoutHorseInput> | CompetitionResultCreateWithoutHorseInput[] | CompetitionResultUncheckedCreateWithoutHorseInput[]
    connectOrCreate?: CompetitionResultCreateOrConnectWithoutHorseInput | CompetitionResultCreateOrConnectWithoutHorseInput[]
    upsert?: CompetitionResultUpsertWithWhereUniqueWithoutHorseInput | CompetitionResultUpsertWithWhereUniqueWithoutHorseInput[]
    createMany?: CompetitionResultCreateManyHorseInputEnvelope
    set?: CompetitionResultWhereUniqueInput | CompetitionResultWhereUniqueInput[]
    disconnect?: CompetitionResultWhereUniqueInput | CompetitionResultWhereUniqueInput[]
    delete?: CompetitionResultWhereUniqueInput | CompetitionResultWhereUniqueInput[]
    connect?: CompetitionResultWhereUniqueInput | CompetitionResultWhereUniqueInput[]
    update?: CompetitionResultUpdateWithWhereUniqueWithoutHorseInput | CompetitionResultUpdateWithWhereUniqueWithoutHorseInput[]
    updateMany?: CompetitionResultUpdateManyWithWhereWithoutHorseInput | CompetitionResultUpdateManyWithWhereWithoutHorseInput[]
    deleteMany?: CompetitionResultScalarWhereInput | CompetitionResultScalarWhereInput[]
  }

  export type FoalActivityUncheckedUpdateManyWithoutFoalNestedInput = {
    create?: XOR<FoalActivityCreateWithoutFoalInput, FoalActivityUncheckedCreateWithoutFoalInput> | FoalActivityCreateWithoutFoalInput[] | FoalActivityUncheckedCreateWithoutFoalInput[]
    connectOrCreate?: FoalActivityCreateOrConnectWithoutFoalInput | FoalActivityCreateOrConnectWithoutFoalInput[]
    upsert?: FoalActivityUpsertWithWhereUniqueWithoutFoalInput | FoalActivityUpsertWithWhereUniqueWithoutFoalInput[]
    createMany?: FoalActivityCreateManyFoalInputEnvelope
    set?: FoalActivityWhereUniqueInput | FoalActivityWhereUniqueInput[]
    disconnect?: FoalActivityWhereUniqueInput | FoalActivityWhereUniqueInput[]
    delete?: FoalActivityWhereUniqueInput | FoalActivityWhereUniqueInput[]
    connect?: FoalActivityWhereUniqueInput | FoalActivityWhereUniqueInput[]
    update?: FoalActivityUpdateWithWhereUniqueWithoutFoalInput | FoalActivityUpdateWithWhereUniqueWithoutFoalInput[]
    updateMany?: FoalActivityUpdateManyWithWhereWithoutFoalInput | FoalActivityUpdateManyWithWhereWithoutFoalInput[]
    deleteMany?: FoalActivityScalarWhereInput | FoalActivityScalarWhereInput[]
  }

  export type FoalDevelopmentUncheckedUpdateOneWithoutFoalNestedInput = {
    create?: XOR<FoalDevelopmentCreateWithoutFoalInput, FoalDevelopmentUncheckedCreateWithoutFoalInput>
    connectOrCreate?: FoalDevelopmentCreateOrConnectWithoutFoalInput
    upsert?: FoalDevelopmentUpsertWithoutFoalInput
    disconnect?: FoalDevelopmentWhereInput | boolean
    delete?: FoalDevelopmentWhereInput | boolean
    connect?: FoalDevelopmentWhereUniqueInput
    update?: XOR<XOR<FoalDevelopmentUpdateToOneWithWhereWithoutFoalInput, FoalDevelopmentUpdateWithoutFoalInput>, FoalDevelopmentUncheckedUpdateWithoutFoalInput>
  }

  export type FoalTrainingHistoryUncheckedUpdateManyWithoutHorseNestedInput = {
    create?: XOR<FoalTrainingHistoryCreateWithoutHorseInput, FoalTrainingHistoryUncheckedCreateWithoutHorseInput> | FoalTrainingHistoryCreateWithoutHorseInput[] | FoalTrainingHistoryUncheckedCreateWithoutHorseInput[]
    connectOrCreate?: FoalTrainingHistoryCreateOrConnectWithoutHorseInput | FoalTrainingHistoryCreateOrConnectWithoutHorseInput[]
    upsert?: FoalTrainingHistoryUpsertWithWhereUniqueWithoutHorseInput | FoalTrainingHistoryUpsertWithWhereUniqueWithoutHorseInput[]
    createMany?: FoalTrainingHistoryCreateManyHorseInputEnvelope
    set?: FoalTrainingHistoryWhereUniqueInput | FoalTrainingHistoryWhereUniqueInput[]
    disconnect?: FoalTrainingHistoryWhereUniqueInput | FoalTrainingHistoryWhereUniqueInput[]
    delete?: FoalTrainingHistoryWhereUniqueInput | FoalTrainingHistoryWhereUniqueInput[]
    connect?: FoalTrainingHistoryWhereUniqueInput | FoalTrainingHistoryWhereUniqueInput[]
    update?: FoalTrainingHistoryUpdateWithWhereUniqueWithoutHorseInput | FoalTrainingHistoryUpdateWithWhereUniqueWithoutHorseInput[]
    updateMany?: FoalTrainingHistoryUpdateManyWithWhereWithoutHorseInput | FoalTrainingHistoryUpdateManyWithWhereWithoutHorseInput[]
    deleteMany?: FoalTrainingHistoryScalarWhereInput | FoalTrainingHistoryScalarWhereInput[]
  }

  export type GroomAssignmentUncheckedUpdateManyWithoutFoalNestedInput = {
    create?: XOR<GroomAssignmentCreateWithoutFoalInput, GroomAssignmentUncheckedCreateWithoutFoalInput> | GroomAssignmentCreateWithoutFoalInput[] | GroomAssignmentUncheckedCreateWithoutFoalInput[]
    connectOrCreate?: GroomAssignmentCreateOrConnectWithoutFoalInput | GroomAssignmentCreateOrConnectWithoutFoalInput[]
    upsert?: GroomAssignmentUpsertWithWhereUniqueWithoutFoalInput | GroomAssignmentUpsertWithWhereUniqueWithoutFoalInput[]
    createMany?: GroomAssignmentCreateManyFoalInputEnvelope
    set?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    disconnect?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    delete?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    connect?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    update?: GroomAssignmentUpdateWithWhereUniqueWithoutFoalInput | GroomAssignmentUpdateWithWhereUniqueWithoutFoalInput[]
    updateMany?: GroomAssignmentUpdateManyWithWhereWithoutFoalInput | GroomAssignmentUpdateManyWithWhereWithoutFoalInput[]
    deleteMany?: GroomAssignmentScalarWhereInput | GroomAssignmentScalarWhereInput[]
  }

  export type GroomInteractionUncheckedUpdateManyWithoutFoalNestedInput = {
    create?: XOR<GroomInteractionCreateWithoutFoalInput, GroomInteractionUncheckedCreateWithoutFoalInput> | GroomInteractionCreateWithoutFoalInput[] | GroomInteractionUncheckedCreateWithoutFoalInput[]
    connectOrCreate?: GroomInteractionCreateOrConnectWithoutFoalInput | GroomInteractionCreateOrConnectWithoutFoalInput[]
    upsert?: GroomInteractionUpsertWithWhereUniqueWithoutFoalInput | GroomInteractionUpsertWithWhereUniqueWithoutFoalInput[]
    createMany?: GroomInteractionCreateManyFoalInputEnvelope
    set?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    disconnect?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    delete?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    connect?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    update?: GroomInteractionUpdateWithWhereUniqueWithoutFoalInput | GroomInteractionUpdateWithWhereUniqueWithoutFoalInput[]
    updateMany?: GroomInteractionUpdateManyWithWhereWithoutFoalInput | GroomInteractionUpdateManyWithWhereWithoutFoalInput[]
    deleteMany?: GroomInteractionScalarWhereInput | GroomInteractionScalarWhereInput[]
  }

  export type HorseXpEventUncheckedUpdateManyWithoutHorseNestedInput = {
    create?: XOR<HorseXpEventCreateWithoutHorseInput, HorseXpEventUncheckedCreateWithoutHorseInput> | HorseXpEventCreateWithoutHorseInput[] | HorseXpEventUncheckedCreateWithoutHorseInput[]
    connectOrCreate?: HorseXpEventCreateOrConnectWithoutHorseInput | HorseXpEventCreateOrConnectWithoutHorseInput[]
    upsert?: HorseXpEventUpsertWithWhereUniqueWithoutHorseInput | HorseXpEventUpsertWithWhereUniqueWithoutHorseInput[]
    createMany?: HorseXpEventCreateManyHorseInputEnvelope
    set?: HorseXpEventWhereUniqueInput | HorseXpEventWhereUniqueInput[]
    disconnect?: HorseXpEventWhereUniqueInput | HorseXpEventWhereUniqueInput[]
    delete?: HorseXpEventWhereUniqueInput | HorseXpEventWhereUniqueInput[]
    connect?: HorseXpEventWhereUniqueInput | HorseXpEventWhereUniqueInput[]
    update?: HorseXpEventUpdateWithWhereUniqueWithoutHorseInput | HorseXpEventUpdateWithWhereUniqueWithoutHorseInput[]
    updateMany?: HorseXpEventUpdateManyWithWhereWithoutHorseInput | HorseXpEventUpdateManyWithWhereWithoutHorseInput[]
    deleteMany?: HorseXpEventScalarWhereInput | HorseXpEventScalarWhereInput[]
  }

  export type HorseUncheckedUpdateManyWithoutDamNestedInput = {
    create?: XOR<HorseCreateWithoutDamInput, HorseUncheckedCreateWithoutDamInput> | HorseCreateWithoutDamInput[] | HorseUncheckedCreateWithoutDamInput[]
    connectOrCreate?: HorseCreateOrConnectWithoutDamInput | HorseCreateOrConnectWithoutDamInput[]
    upsert?: HorseUpsertWithWhereUniqueWithoutDamInput | HorseUpsertWithWhereUniqueWithoutDamInput[]
    createMany?: HorseCreateManyDamInputEnvelope
    set?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    disconnect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    delete?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    connect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    update?: HorseUpdateWithWhereUniqueWithoutDamInput | HorseUpdateWithWhereUniqueWithoutDamInput[]
    updateMany?: HorseUpdateManyWithWhereWithoutDamInput | HorseUpdateManyWithWhereWithoutDamInput[]
    deleteMany?: HorseScalarWhereInput | HorseScalarWhereInput[]
  }

  export type HorseUncheckedUpdateManyWithoutSireNestedInput = {
    create?: XOR<HorseCreateWithoutSireInput, HorseUncheckedCreateWithoutSireInput> | HorseCreateWithoutSireInput[] | HorseUncheckedCreateWithoutSireInput[]
    connectOrCreate?: HorseCreateOrConnectWithoutSireInput | HorseCreateOrConnectWithoutSireInput[]
    upsert?: HorseUpsertWithWhereUniqueWithoutSireInput | HorseUpsertWithWhereUniqueWithoutSireInput[]
    createMany?: HorseCreateManySireInputEnvelope
    set?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    disconnect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    delete?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    connect?: HorseWhereUniqueInput | HorseWhereUniqueInput[]
    update?: HorseUpdateWithWhereUniqueWithoutSireInput | HorseUpdateWithWhereUniqueWithoutSireInput[]
    updateMany?: HorseUpdateManyWithWhereWithoutSireInput | HorseUpdateManyWithWhereWithoutSireInput[]
    deleteMany?: HorseScalarWhereInput | HorseScalarWhereInput[]
  }

  export type TrainingLogUncheckedUpdateManyWithoutHorseNestedInput = {
    create?: XOR<TrainingLogCreateWithoutHorseInput, TrainingLogUncheckedCreateWithoutHorseInput> | TrainingLogCreateWithoutHorseInput[] | TrainingLogUncheckedCreateWithoutHorseInput[]
    connectOrCreate?: TrainingLogCreateOrConnectWithoutHorseInput | TrainingLogCreateOrConnectWithoutHorseInput[]
    upsert?: TrainingLogUpsertWithWhereUniqueWithoutHorseInput | TrainingLogUpsertWithWhereUniqueWithoutHorseInput[]
    createMany?: TrainingLogCreateManyHorseInputEnvelope
    set?: TrainingLogWhereUniqueInput | TrainingLogWhereUniqueInput[]
    disconnect?: TrainingLogWhereUniqueInput | TrainingLogWhereUniqueInput[]
    delete?: TrainingLogWhereUniqueInput | TrainingLogWhereUniqueInput[]
    connect?: TrainingLogWhereUniqueInput | TrainingLogWhereUniqueInput[]
    update?: TrainingLogUpdateWithWhereUniqueWithoutHorseInput | TrainingLogUpdateWithWhereUniqueWithoutHorseInput[]
    updateMany?: TrainingLogUpdateManyWithWhereWithoutHorseInput | TrainingLogUpdateManyWithWhereWithoutHorseInput[]
    deleteMany?: TrainingLogScalarWhereInput | TrainingLogScalarWhereInput[]
  }

  export type GroomAssignmentCreateNestedManyWithoutGroomInput = {
    create?: XOR<GroomAssignmentCreateWithoutGroomInput, GroomAssignmentUncheckedCreateWithoutGroomInput> | GroomAssignmentCreateWithoutGroomInput[] | GroomAssignmentUncheckedCreateWithoutGroomInput[]
    connectOrCreate?: GroomAssignmentCreateOrConnectWithoutGroomInput | GroomAssignmentCreateOrConnectWithoutGroomInput[]
    createMany?: GroomAssignmentCreateManyGroomInputEnvelope
    connect?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
  }

  export type GroomInteractionCreateNestedManyWithoutGroomInput = {
    create?: XOR<GroomInteractionCreateWithoutGroomInput, GroomInteractionUncheckedCreateWithoutGroomInput> | GroomInteractionCreateWithoutGroomInput[] | GroomInteractionUncheckedCreateWithoutGroomInput[]
    connectOrCreate?: GroomInteractionCreateOrConnectWithoutGroomInput | GroomInteractionCreateOrConnectWithoutGroomInput[]
    createMany?: GroomInteractionCreateManyGroomInputEnvelope
    connect?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutGroomsInput = {
    create?: XOR<UserCreateWithoutGroomsInput, UserUncheckedCreateWithoutGroomsInput>
    connectOrCreate?: UserCreateOrConnectWithoutGroomsInput
    connect?: UserWhereUniqueInput
  }

  export type GroomAssignmentUncheckedCreateNestedManyWithoutGroomInput = {
    create?: XOR<GroomAssignmentCreateWithoutGroomInput, GroomAssignmentUncheckedCreateWithoutGroomInput> | GroomAssignmentCreateWithoutGroomInput[] | GroomAssignmentUncheckedCreateWithoutGroomInput[]
    connectOrCreate?: GroomAssignmentCreateOrConnectWithoutGroomInput | GroomAssignmentCreateOrConnectWithoutGroomInput[]
    createMany?: GroomAssignmentCreateManyGroomInputEnvelope
    connect?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
  }

  export type GroomInteractionUncheckedCreateNestedManyWithoutGroomInput = {
    create?: XOR<GroomInteractionCreateWithoutGroomInput, GroomInteractionUncheckedCreateWithoutGroomInput> | GroomInteractionCreateWithoutGroomInput[] | GroomInteractionUncheckedCreateWithoutGroomInput[]
    connectOrCreate?: GroomInteractionCreateOrConnectWithoutGroomInput | GroomInteractionCreateOrConnectWithoutGroomInput[]
    createMany?: GroomInteractionCreateManyGroomInputEnvelope
    connect?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type GroomAssignmentUpdateManyWithoutGroomNestedInput = {
    create?: XOR<GroomAssignmentCreateWithoutGroomInput, GroomAssignmentUncheckedCreateWithoutGroomInput> | GroomAssignmentCreateWithoutGroomInput[] | GroomAssignmentUncheckedCreateWithoutGroomInput[]
    connectOrCreate?: GroomAssignmentCreateOrConnectWithoutGroomInput | GroomAssignmentCreateOrConnectWithoutGroomInput[]
    upsert?: GroomAssignmentUpsertWithWhereUniqueWithoutGroomInput | GroomAssignmentUpsertWithWhereUniqueWithoutGroomInput[]
    createMany?: GroomAssignmentCreateManyGroomInputEnvelope
    set?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    disconnect?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    delete?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    connect?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    update?: GroomAssignmentUpdateWithWhereUniqueWithoutGroomInput | GroomAssignmentUpdateWithWhereUniqueWithoutGroomInput[]
    updateMany?: GroomAssignmentUpdateManyWithWhereWithoutGroomInput | GroomAssignmentUpdateManyWithWhereWithoutGroomInput[]
    deleteMany?: GroomAssignmentScalarWhereInput | GroomAssignmentScalarWhereInput[]
  }

  export type GroomInteractionUpdateManyWithoutGroomNestedInput = {
    create?: XOR<GroomInteractionCreateWithoutGroomInput, GroomInteractionUncheckedCreateWithoutGroomInput> | GroomInteractionCreateWithoutGroomInput[] | GroomInteractionUncheckedCreateWithoutGroomInput[]
    connectOrCreate?: GroomInteractionCreateOrConnectWithoutGroomInput | GroomInteractionCreateOrConnectWithoutGroomInput[]
    upsert?: GroomInteractionUpsertWithWhereUniqueWithoutGroomInput | GroomInteractionUpsertWithWhereUniqueWithoutGroomInput[]
    createMany?: GroomInteractionCreateManyGroomInputEnvelope
    set?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    disconnect?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    delete?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    connect?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    update?: GroomInteractionUpdateWithWhereUniqueWithoutGroomInput | GroomInteractionUpdateWithWhereUniqueWithoutGroomInput[]
    updateMany?: GroomInteractionUpdateManyWithWhereWithoutGroomInput | GroomInteractionUpdateManyWithWhereWithoutGroomInput[]
    deleteMany?: GroomInteractionScalarWhereInput | GroomInteractionScalarWhereInput[]
  }

  export type UserUpdateOneWithoutGroomsNestedInput = {
    create?: XOR<UserCreateWithoutGroomsInput, UserUncheckedCreateWithoutGroomsInput>
    connectOrCreate?: UserCreateOrConnectWithoutGroomsInput
    upsert?: UserUpsertWithoutGroomsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutGroomsInput, UserUpdateWithoutGroomsInput>, UserUncheckedUpdateWithoutGroomsInput>
  }

  export type GroomAssignmentUncheckedUpdateManyWithoutGroomNestedInput = {
    create?: XOR<GroomAssignmentCreateWithoutGroomInput, GroomAssignmentUncheckedCreateWithoutGroomInput> | GroomAssignmentCreateWithoutGroomInput[] | GroomAssignmentUncheckedCreateWithoutGroomInput[]
    connectOrCreate?: GroomAssignmentCreateOrConnectWithoutGroomInput | GroomAssignmentCreateOrConnectWithoutGroomInput[]
    upsert?: GroomAssignmentUpsertWithWhereUniqueWithoutGroomInput | GroomAssignmentUpsertWithWhereUniqueWithoutGroomInput[]
    createMany?: GroomAssignmentCreateManyGroomInputEnvelope
    set?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    disconnect?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    delete?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    connect?: GroomAssignmentWhereUniqueInput | GroomAssignmentWhereUniqueInput[]
    update?: GroomAssignmentUpdateWithWhereUniqueWithoutGroomInput | GroomAssignmentUpdateWithWhereUniqueWithoutGroomInput[]
    updateMany?: GroomAssignmentUpdateManyWithWhereWithoutGroomInput | GroomAssignmentUpdateManyWithWhereWithoutGroomInput[]
    deleteMany?: GroomAssignmentScalarWhereInput | GroomAssignmentScalarWhereInput[]
  }

  export type GroomInteractionUncheckedUpdateManyWithoutGroomNestedInput = {
    create?: XOR<GroomInteractionCreateWithoutGroomInput, GroomInteractionUncheckedCreateWithoutGroomInput> | GroomInteractionCreateWithoutGroomInput[] | GroomInteractionUncheckedCreateWithoutGroomInput[]
    connectOrCreate?: GroomInteractionCreateOrConnectWithoutGroomInput | GroomInteractionCreateOrConnectWithoutGroomInput[]
    upsert?: GroomInteractionUpsertWithWhereUniqueWithoutGroomInput | GroomInteractionUpsertWithWhereUniqueWithoutGroomInput[]
    createMany?: GroomInteractionCreateManyGroomInputEnvelope
    set?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    disconnect?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    delete?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    connect?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    update?: GroomInteractionUpdateWithWhereUniqueWithoutGroomInput | GroomInteractionUpdateWithWhereUniqueWithoutGroomInput[]
    updateMany?: GroomInteractionUpdateManyWithWhereWithoutGroomInput | GroomInteractionUpdateManyWithWhereWithoutGroomInput[]
    deleteMany?: GroomInteractionScalarWhereInput | GroomInteractionScalarWhereInput[]
  }

  export type HorseCreateNestedOneWithoutGroomAssignmentsInput = {
    create?: XOR<HorseCreateWithoutGroomAssignmentsInput, HorseUncheckedCreateWithoutGroomAssignmentsInput>
    connectOrCreate?: HorseCreateOrConnectWithoutGroomAssignmentsInput
    connect?: HorseWhereUniqueInput
  }

  export type GroomCreateNestedOneWithoutGroomAssignmentsInput = {
    create?: XOR<GroomCreateWithoutGroomAssignmentsInput, GroomUncheckedCreateWithoutGroomAssignmentsInput>
    connectOrCreate?: GroomCreateOrConnectWithoutGroomAssignmentsInput
    connect?: GroomWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutGroomAssignmentsInput = {
    create?: XOR<UserCreateWithoutGroomAssignmentsInput, UserUncheckedCreateWithoutGroomAssignmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutGroomAssignmentsInput
    connect?: UserWhereUniqueInput
  }

  export type GroomInteractionCreateNestedManyWithoutAssignmentInput = {
    create?: XOR<GroomInteractionCreateWithoutAssignmentInput, GroomInteractionUncheckedCreateWithoutAssignmentInput> | GroomInteractionCreateWithoutAssignmentInput[] | GroomInteractionUncheckedCreateWithoutAssignmentInput[]
    connectOrCreate?: GroomInteractionCreateOrConnectWithoutAssignmentInput | GroomInteractionCreateOrConnectWithoutAssignmentInput[]
    createMany?: GroomInteractionCreateManyAssignmentInputEnvelope
    connect?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
  }

  export type GroomInteractionUncheckedCreateNestedManyWithoutAssignmentInput = {
    create?: XOR<GroomInteractionCreateWithoutAssignmentInput, GroomInteractionUncheckedCreateWithoutAssignmentInput> | GroomInteractionCreateWithoutAssignmentInput[] | GroomInteractionUncheckedCreateWithoutAssignmentInput[]
    connectOrCreate?: GroomInteractionCreateOrConnectWithoutAssignmentInput | GroomInteractionCreateOrConnectWithoutAssignmentInput[]
    createMany?: GroomInteractionCreateManyAssignmentInputEnvelope
    connect?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
  }

  export type HorseUpdateOneRequiredWithoutGroomAssignmentsNestedInput = {
    create?: XOR<HorseCreateWithoutGroomAssignmentsInput, HorseUncheckedCreateWithoutGroomAssignmentsInput>
    connectOrCreate?: HorseCreateOrConnectWithoutGroomAssignmentsInput
    upsert?: HorseUpsertWithoutGroomAssignmentsInput
    connect?: HorseWhereUniqueInput
    update?: XOR<XOR<HorseUpdateToOneWithWhereWithoutGroomAssignmentsInput, HorseUpdateWithoutGroomAssignmentsInput>, HorseUncheckedUpdateWithoutGroomAssignmentsInput>
  }

  export type GroomUpdateOneRequiredWithoutGroomAssignmentsNestedInput = {
    create?: XOR<GroomCreateWithoutGroomAssignmentsInput, GroomUncheckedCreateWithoutGroomAssignmentsInput>
    connectOrCreate?: GroomCreateOrConnectWithoutGroomAssignmentsInput
    upsert?: GroomUpsertWithoutGroomAssignmentsInput
    connect?: GroomWhereUniqueInput
    update?: XOR<XOR<GroomUpdateToOneWithWhereWithoutGroomAssignmentsInput, GroomUpdateWithoutGroomAssignmentsInput>, GroomUncheckedUpdateWithoutGroomAssignmentsInput>
  }

  export type UserUpdateOneWithoutGroomAssignmentsNestedInput = {
    create?: XOR<UserCreateWithoutGroomAssignmentsInput, UserUncheckedCreateWithoutGroomAssignmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutGroomAssignmentsInput
    upsert?: UserUpsertWithoutGroomAssignmentsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutGroomAssignmentsInput, UserUpdateWithoutGroomAssignmentsInput>, UserUncheckedUpdateWithoutGroomAssignmentsInput>
  }

  export type GroomInteractionUpdateManyWithoutAssignmentNestedInput = {
    create?: XOR<GroomInteractionCreateWithoutAssignmentInput, GroomInteractionUncheckedCreateWithoutAssignmentInput> | GroomInteractionCreateWithoutAssignmentInput[] | GroomInteractionUncheckedCreateWithoutAssignmentInput[]
    connectOrCreate?: GroomInteractionCreateOrConnectWithoutAssignmentInput | GroomInteractionCreateOrConnectWithoutAssignmentInput[]
    upsert?: GroomInteractionUpsertWithWhereUniqueWithoutAssignmentInput | GroomInteractionUpsertWithWhereUniqueWithoutAssignmentInput[]
    createMany?: GroomInteractionCreateManyAssignmentInputEnvelope
    set?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    disconnect?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    delete?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    connect?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    update?: GroomInteractionUpdateWithWhereUniqueWithoutAssignmentInput | GroomInteractionUpdateWithWhereUniqueWithoutAssignmentInput[]
    updateMany?: GroomInteractionUpdateManyWithWhereWithoutAssignmentInput | GroomInteractionUpdateManyWithWhereWithoutAssignmentInput[]
    deleteMany?: GroomInteractionScalarWhereInput | GroomInteractionScalarWhereInput[]
  }

  export type GroomInteractionUncheckedUpdateManyWithoutAssignmentNestedInput = {
    create?: XOR<GroomInteractionCreateWithoutAssignmentInput, GroomInteractionUncheckedCreateWithoutAssignmentInput> | GroomInteractionCreateWithoutAssignmentInput[] | GroomInteractionUncheckedCreateWithoutAssignmentInput[]
    connectOrCreate?: GroomInteractionCreateOrConnectWithoutAssignmentInput | GroomInteractionCreateOrConnectWithoutAssignmentInput[]
    upsert?: GroomInteractionUpsertWithWhereUniqueWithoutAssignmentInput | GroomInteractionUpsertWithWhereUniqueWithoutAssignmentInput[]
    createMany?: GroomInteractionCreateManyAssignmentInputEnvelope
    set?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    disconnect?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    delete?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    connect?: GroomInteractionWhereUniqueInput | GroomInteractionWhereUniqueInput[]
    update?: GroomInteractionUpdateWithWhereUniqueWithoutAssignmentInput | GroomInteractionUpdateWithWhereUniqueWithoutAssignmentInput[]
    updateMany?: GroomInteractionUpdateManyWithWhereWithoutAssignmentInput | GroomInteractionUpdateManyWithWhereWithoutAssignmentInput[]
    deleteMany?: GroomInteractionScalarWhereInput | GroomInteractionScalarWhereInput[]
  }

  export type GroomAssignmentCreateNestedOneWithoutGroomInteractionsInput = {
    create?: XOR<GroomAssignmentCreateWithoutGroomInteractionsInput, GroomAssignmentUncheckedCreateWithoutGroomInteractionsInput>
    connectOrCreate?: GroomAssignmentCreateOrConnectWithoutGroomInteractionsInput
    connect?: GroomAssignmentWhereUniqueInput
  }

  export type HorseCreateNestedOneWithoutGroomInteractionsInput = {
    create?: XOR<HorseCreateWithoutGroomInteractionsInput, HorseUncheckedCreateWithoutGroomInteractionsInput>
    connectOrCreate?: HorseCreateOrConnectWithoutGroomInteractionsInput
    connect?: HorseWhereUniqueInput
  }

  export type GroomCreateNestedOneWithoutGroomInteractionsInput = {
    create?: XOR<GroomCreateWithoutGroomInteractionsInput, GroomUncheckedCreateWithoutGroomInteractionsInput>
    connectOrCreate?: GroomCreateOrConnectWithoutGroomInteractionsInput
    connect?: GroomWhereUniqueInput
  }

  export type GroomAssignmentUpdateOneWithoutGroomInteractionsNestedInput = {
    create?: XOR<GroomAssignmentCreateWithoutGroomInteractionsInput, GroomAssignmentUncheckedCreateWithoutGroomInteractionsInput>
    connectOrCreate?: GroomAssignmentCreateOrConnectWithoutGroomInteractionsInput
    upsert?: GroomAssignmentUpsertWithoutGroomInteractionsInput
    disconnect?: GroomAssignmentWhereInput | boolean
    delete?: GroomAssignmentWhereInput | boolean
    connect?: GroomAssignmentWhereUniqueInput
    update?: XOR<XOR<GroomAssignmentUpdateToOneWithWhereWithoutGroomInteractionsInput, GroomAssignmentUpdateWithoutGroomInteractionsInput>, GroomAssignmentUncheckedUpdateWithoutGroomInteractionsInput>
  }

  export type HorseUpdateOneRequiredWithoutGroomInteractionsNestedInput = {
    create?: XOR<HorseCreateWithoutGroomInteractionsInput, HorseUncheckedCreateWithoutGroomInteractionsInput>
    connectOrCreate?: HorseCreateOrConnectWithoutGroomInteractionsInput
    upsert?: HorseUpsertWithoutGroomInteractionsInput
    connect?: HorseWhereUniqueInput
    update?: XOR<XOR<HorseUpdateToOneWithWhereWithoutGroomInteractionsInput, HorseUpdateWithoutGroomInteractionsInput>, HorseUncheckedUpdateWithoutGroomInteractionsInput>
  }

  export type GroomUpdateOneRequiredWithoutGroomInteractionsNestedInput = {
    create?: XOR<GroomCreateWithoutGroomInteractionsInput, GroomUncheckedCreateWithoutGroomInteractionsInput>
    connectOrCreate?: GroomCreateOrConnectWithoutGroomInteractionsInput
    upsert?: GroomUpsertWithoutGroomInteractionsInput
    connect?: GroomWhereUniqueInput
    update?: XOR<XOR<GroomUpdateToOneWithWhereWithoutGroomInteractionsInput, GroomUpdateWithoutGroomInteractionsInput>, GroomUncheckedUpdateWithoutGroomInteractionsInput>
  }

  export type CompetitionResultCreateNestedManyWithoutShowInput = {
    create?: XOR<CompetitionResultCreateWithoutShowInput, CompetitionResultUncheckedCreateWithoutShowInput> | CompetitionResultCreateWithoutShowInput[] | CompetitionResultUncheckedCreateWithoutShowInput[]
    connectOrCreate?: CompetitionResultCreateOrConnectWithoutShowInput | CompetitionResultCreateOrConnectWithoutShowInput[]
    createMany?: CompetitionResultCreateManyShowInputEnvelope
    connect?: CompetitionResultWhereUniqueInput | CompetitionResultWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutShowsInput = {
    create?: XOR<UserCreateWithoutShowsInput, UserUncheckedCreateWithoutShowsInput>
    connectOrCreate?: UserCreateOrConnectWithoutShowsInput
    connect?: UserWhereUniqueInput
  }

  export type CompetitionResultUncheckedCreateNestedManyWithoutShowInput = {
    create?: XOR<CompetitionResultCreateWithoutShowInput, CompetitionResultUncheckedCreateWithoutShowInput> | CompetitionResultCreateWithoutShowInput[] | CompetitionResultUncheckedCreateWithoutShowInput[]
    connectOrCreate?: CompetitionResultCreateOrConnectWithoutShowInput | CompetitionResultCreateOrConnectWithoutShowInput[]
    createMany?: CompetitionResultCreateManyShowInputEnvelope
    connect?: CompetitionResultWhereUniqueInput | CompetitionResultWhereUniqueInput[]
  }

  export type CompetitionResultUpdateManyWithoutShowNestedInput = {
    create?: XOR<CompetitionResultCreateWithoutShowInput, CompetitionResultUncheckedCreateWithoutShowInput> | CompetitionResultCreateWithoutShowInput[] | CompetitionResultUncheckedCreateWithoutShowInput[]
    connectOrCreate?: CompetitionResultCreateOrConnectWithoutShowInput | CompetitionResultCreateOrConnectWithoutShowInput[]
    upsert?: CompetitionResultUpsertWithWhereUniqueWithoutShowInput | CompetitionResultUpsertWithWhereUniqueWithoutShowInput[]
    createMany?: CompetitionResultCreateManyShowInputEnvelope
    set?: CompetitionResultWhereUniqueInput | CompetitionResultWhereUniqueInput[]
    disconnect?: CompetitionResultWhereUniqueInput | CompetitionResultWhereUniqueInput[]
    delete?: CompetitionResultWhereUniqueInput | CompetitionResultWhereUniqueInput[]
    connect?: CompetitionResultWhereUniqueInput | CompetitionResultWhereUniqueInput[]
    update?: CompetitionResultUpdateWithWhereUniqueWithoutShowInput | CompetitionResultUpdateWithWhereUniqueWithoutShowInput[]
    updateMany?: CompetitionResultUpdateManyWithWhereWithoutShowInput | CompetitionResultUpdateManyWithWhereWithoutShowInput[]
    deleteMany?: CompetitionResultScalarWhereInput | CompetitionResultScalarWhereInput[]
  }

  export type UserUpdateOneWithoutShowsNestedInput = {
    create?: XOR<UserCreateWithoutShowsInput, UserUncheckedCreateWithoutShowsInput>
    connectOrCreate?: UserCreateOrConnectWithoutShowsInput
    upsert?: UserUpsertWithoutShowsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutShowsInput, UserUpdateWithoutShowsInput>, UserUncheckedUpdateWithoutShowsInput>
  }

  export type CompetitionResultUncheckedUpdateManyWithoutShowNestedInput = {
    create?: XOR<CompetitionResultCreateWithoutShowInput, CompetitionResultUncheckedCreateWithoutShowInput> | CompetitionResultCreateWithoutShowInput[] | CompetitionResultUncheckedCreateWithoutShowInput[]
    connectOrCreate?: CompetitionResultCreateOrConnectWithoutShowInput | CompetitionResultCreateOrConnectWithoutShowInput[]
    upsert?: CompetitionResultUpsertWithWhereUniqueWithoutShowInput | CompetitionResultUpsertWithWhereUniqueWithoutShowInput[]
    createMany?: CompetitionResultCreateManyShowInputEnvelope
    set?: CompetitionResultWhereUniqueInput | CompetitionResultWhereUniqueInput[]
    disconnect?: CompetitionResultWhereUniqueInput | CompetitionResultWhereUniqueInput[]
    delete?: CompetitionResultWhereUniqueInput | CompetitionResultWhereUniqueInput[]
    connect?: CompetitionResultWhereUniqueInput | CompetitionResultWhereUniqueInput[]
    update?: CompetitionResultUpdateWithWhereUniqueWithoutShowInput | CompetitionResultUpdateWithWhereUniqueWithoutShowInput[]
    updateMany?: CompetitionResultUpdateManyWithWhereWithoutShowInput | CompetitionResultUpdateManyWithWhereWithoutShowInput[]
    deleteMany?: CompetitionResultScalarWhereInput | CompetitionResultScalarWhereInput[]
  }

  export type HorseCreateNestedOneWithoutCompetitionResultsInput = {
    create?: XOR<HorseCreateWithoutCompetitionResultsInput, HorseUncheckedCreateWithoutCompetitionResultsInput>
    connectOrCreate?: HorseCreateOrConnectWithoutCompetitionResultsInput
    connect?: HorseWhereUniqueInput
  }

  export type ShowCreateNestedOneWithoutCompetitionResultsInput = {
    create?: XOR<ShowCreateWithoutCompetitionResultsInput, ShowUncheckedCreateWithoutCompetitionResultsInput>
    connectOrCreate?: ShowCreateOrConnectWithoutCompetitionResultsInput
    connect?: ShowWhereUniqueInput
  }

  export type HorseUpdateOneRequiredWithoutCompetitionResultsNestedInput = {
    create?: XOR<HorseCreateWithoutCompetitionResultsInput, HorseUncheckedCreateWithoutCompetitionResultsInput>
    connectOrCreate?: HorseCreateOrConnectWithoutCompetitionResultsInput
    upsert?: HorseUpsertWithoutCompetitionResultsInput
    connect?: HorseWhereUniqueInput
    update?: XOR<XOR<HorseUpdateToOneWithWhereWithoutCompetitionResultsInput, HorseUpdateWithoutCompetitionResultsInput>, HorseUncheckedUpdateWithoutCompetitionResultsInput>
  }

  export type ShowUpdateOneRequiredWithoutCompetitionResultsNestedInput = {
    create?: XOR<ShowCreateWithoutCompetitionResultsInput, ShowUncheckedCreateWithoutCompetitionResultsInput>
    connectOrCreate?: ShowCreateOrConnectWithoutCompetitionResultsInput
    upsert?: ShowUpsertWithoutCompetitionResultsInput
    connect?: ShowWhereUniqueInput
    update?: XOR<XOR<ShowUpdateToOneWithWhereWithoutCompetitionResultsInput, ShowUpdateWithoutCompetitionResultsInput>, ShowUncheckedUpdateWithoutCompetitionResultsInput>
  }

  export type HorseCreateNestedOneWithoutTrainingLogsInput = {
    create?: XOR<HorseCreateWithoutTrainingLogsInput, HorseUncheckedCreateWithoutTrainingLogsInput>
    connectOrCreate?: HorseCreateOrConnectWithoutTrainingLogsInput
    connect?: HorseWhereUniqueInput
  }

  export type HorseUpdateOneRequiredWithoutTrainingLogsNestedInput = {
    create?: XOR<HorseCreateWithoutTrainingLogsInput, HorseUncheckedCreateWithoutTrainingLogsInput>
    connectOrCreate?: HorseCreateOrConnectWithoutTrainingLogsInput
    upsert?: HorseUpsertWithoutTrainingLogsInput
    connect?: HorseWhereUniqueInput
    update?: XOR<XOR<HorseUpdateToOneWithWhereWithoutTrainingLogsInput, HorseUpdateWithoutTrainingLogsInput>, HorseUncheckedUpdateWithoutTrainingLogsInput>
  }

  export type HorseCreateNestedOneWithoutFoalDevelopmentInput = {
    create?: XOR<HorseCreateWithoutFoalDevelopmentInput, HorseUncheckedCreateWithoutFoalDevelopmentInput>
    connectOrCreate?: HorseCreateOrConnectWithoutFoalDevelopmentInput
    connect?: HorseWhereUniqueInput
  }

  export type HorseUpdateOneRequiredWithoutFoalDevelopmentNestedInput = {
    create?: XOR<HorseCreateWithoutFoalDevelopmentInput, HorseUncheckedCreateWithoutFoalDevelopmentInput>
    connectOrCreate?: HorseCreateOrConnectWithoutFoalDevelopmentInput
    upsert?: HorseUpsertWithoutFoalDevelopmentInput
    connect?: HorseWhereUniqueInput
    update?: XOR<XOR<HorseUpdateToOneWithWhereWithoutFoalDevelopmentInput, HorseUpdateWithoutFoalDevelopmentInput>, HorseUncheckedUpdateWithoutFoalDevelopmentInput>
  }

  export type HorseCreateNestedOneWithoutFoalActivitiesInput = {
    create?: XOR<HorseCreateWithoutFoalActivitiesInput, HorseUncheckedCreateWithoutFoalActivitiesInput>
    connectOrCreate?: HorseCreateOrConnectWithoutFoalActivitiesInput
    connect?: HorseWhereUniqueInput
  }

  export type HorseUpdateOneRequiredWithoutFoalActivitiesNestedInput = {
    create?: XOR<HorseCreateWithoutFoalActivitiesInput, HorseUncheckedCreateWithoutFoalActivitiesInput>
    connectOrCreate?: HorseCreateOrConnectWithoutFoalActivitiesInput
    upsert?: HorseUpsertWithoutFoalActivitiesInput
    connect?: HorseWhereUniqueInput
    update?: XOR<XOR<HorseUpdateToOneWithWhereWithoutFoalActivitiesInput, HorseUpdateWithoutFoalActivitiesInput>, HorseUncheckedUpdateWithoutFoalActivitiesInput>
  }

  export type HorseCreateNestedOneWithoutFoalTrainingHistoryInput = {
    create?: XOR<HorseCreateWithoutFoalTrainingHistoryInput, HorseUncheckedCreateWithoutFoalTrainingHistoryInput>
    connectOrCreate?: HorseCreateOrConnectWithoutFoalTrainingHistoryInput
    connect?: HorseWhereUniqueInput
  }

  export type HorseUpdateOneRequiredWithoutFoalTrainingHistoryNestedInput = {
    create?: XOR<HorseCreateWithoutFoalTrainingHistoryInput, HorseUncheckedCreateWithoutFoalTrainingHistoryInput>
    connectOrCreate?: HorseCreateOrConnectWithoutFoalTrainingHistoryInput
    upsert?: HorseUpsertWithoutFoalTrainingHistoryInput
    connect?: HorseWhereUniqueInput
    update?: XOR<XOR<HorseUpdateToOneWithWhereWithoutFoalTrainingHistoryInput, HorseUpdateWithoutFoalTrainingHistoryInput>, HorseUncheckedUpdateWithoutFoalTrainingHistoryInput>
  }

  export type UserCreateNestedOneWithoutXpEventsInput = {
    create?: XOR<UserCreateWithoutXpEventsInput, UserUncheckedCreateWithoutXpEventsInput>
    connectOrCreate?: UserCreateOrConnectWithoutXpEventsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutXpEventsNestedInput = {
    create?: XOR<UserCreateWithoutXpEventsInput, UserUncheckedCreateWithoutXpEventsInput>
    connectOrCreate?: UserCreateOrConnectWithoutXpEventsInput
    upsert?: UserUpsertWithoutXpEventsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutXpEventsInput, UserUpdateWithoutXpEventsInput>, UserUncheckedUpdateWithoutXpEventsInput>
  }

  export type UserCreateNestedOneWithoutRefreshTokensInput = {
    create?: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
    connectOrCreate?: UserCreateOrConnectWithoutRefreshTokensInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutRefreshTokensNestedInput = {
    create?: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
    connectOrCreate?: UserCreateOrConnectWithoutRefreshTokensInput
    upsert?: UserUpsertWithoutRefreshTokensInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRefreshTokensInput, UserUpdateWithoutRefreshTokensInput>, UserUncheckedUpdateWithoutRefreshTokensInput>
  }

  export type HorseCreateNestedOneWithoutHorseXpEventsInput = {
    create?: XOR<HorseCreateWithoutHorseXpEventsInput, HorseUncheckedCreateWithoutHorseXpEventsInput>
    connectOrCreate?: HorseCreateOrConnectWithoutHorseXpEventsInput
    connect?: HorseWhereUniqueInput
  }

  export type HorseUpdateOneRequiredWithoutHorseXpEventsNestedInput = {
    create?: XOR<HorseCreateWithoutHorseXpEventsInput, HorseUncheckedCreateWithoutHorseXpEventsInput>
    connectOrCreate?: HorseCreateOrConnectWithoutHorseXpEventsInput
    upsert?: HorseUpsertWithoutHorseXpEventsInput
    connect?: HorseWhereUniqueInput
    update?: XOR<XOR<HorseUpdateToOneWithWhereWithoutHorseXpEventsInput, HorseUpdateWithoutHorseXpEventsInput>, HorseUncheckedUpdateWithoutHorseXpEventsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type GroomAssignmentCreateWithoutUserInput = {
    startDate?: Date | string
    endDate?: Date | string | null
    isActive?: boolean
    isDefault?: boolean
    priority?: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    foal: HorseCreateNestedOneWithoutGroomAssignmentsInput
    groom: GroomCreateNestedOneWithoutGroomAssignmentsInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutAssignmentInput
  }

  export type GroomAssignmentUncheckedCreateWithoutUserInput = {
    id?: number
    startDate?: Date | string
    endDate?: Date | string | null
    isActive?: boolean
    isDefault?: boolean
    priority?: number
    notes?: string | null
    foalId: number
    groomId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutAssignmentInput
  }

  export type GroomAssignmentCreateOrConnectWithoutUserInput = {
    where: GroomAssignmentWhereUniqueInput
    create: XOR<GroomAssignmentCreateWithoutUserInput, GroomAssignmentUncheckedCreateWithoutUserInput>
  }

  export type GroomAssignmentCreateManyUserInputEnvelope = {
    data: GroomAssignmentCreateManyUserInput | GroomAssignmentCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type GroomCreateWithoutUserInput = {
    name: string
    speciality: string
    experience?: number
    skillLevel?: string
    personality: string
    sessionRate?: Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: string | null
    imageUrl?: string | null
    isActive?: boolean
    hiredDate?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutGroomInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutGroomInput
  }

  export type GroomUncheckedCreateWithoutUserInput = {
    id?: number
    name: string
    speciality: string
    experience?: number
    skillLevel?: string
    personality: string
    sessionRate?: Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: string | null
    imageUrl?: string | null
    isActive?: boolean
    hiredDate?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutGroomInput
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutGroomInput
  }

  export type GroomCreateOrConnectWithoutUserInput = {
    where: GroomWhereUniqueInput
    create: XOR<GroomCreateWithoutUserInput, GroomUncheckedCreateWithoutUserInput>
  }

  export type GroomCreateManyUserInputEnvelope = {
    data: GroomCreateManyUserInput | GroomCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type HorseCreateWithoutUserInput = {
    name: string
    sex: string
    dateOfBirth: Date | string
    ownerId?: string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventCreateNestedManyWithoutHorseInput
    breed?: BreedCreateNestedOneWithoutHorsesInput
    dam?: HorseCreateNestedOneWithoutDamOffspringInput
    damOffspring?: HorseCreateNestedManyWithoutDamInput
    sire?: HorseCreateNestedOneWithoutSireOffspringInput
    sireOffspring?: HorseCreateNestedManyWithoutSireInput
    stable?: StableCreateNestedOneWithoutHorsesInput
    trainingLogs?: TrainingLogCreateNestedManyWithoutHorseInput
  }

  export type HorseUncheckedCreateWithoutUserInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    breedId?: number | null
    ownerId?: string | null
    stableId?: number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    sireId?: number | null
    damId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultUncheckedCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityUncheckedCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentUncheckedCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventUncheckedCreateNestedManyWithoutHorseInput
    damOffspring?: HorseUncheckedCreateNestedManyWithoutDamInput
    sireOffspring?: HorseUncheckedCreateNestedManyWithoutSireInput
    trainingLogs?: TrainingLogUncheckedCreateNestedManyWithoutHorseInput
  }

  export type HorseCreateOrConnectWithoutUserInput = {
    where: HorseWhereUniqueInput
    create: XOR<HorseCreateWithoutUserInput, HorseUncheckedCreateWithoutUserInput>
  }

  export type HorseCreateManyUserInputEnvelope = {
    data: HorseCreateManyUserInput | HorseCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type RefreshTokenCreateWithoutUserInput = {
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RefreshTokenUncheckedCreateWithoutUserInput = {
    id?: number
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RefreshTokenCreateOrConnectWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    create: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput>
  }

  export type RefreshTokenCreateManyUserInputEnvelope = {
    data: RefreshTokenCreateManyUserInput | RefreshTokenCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ShowCreateWithoutHostUserInput = {
    name: string
    discipline: string
    levelMin: number
    levelMax: number
    entryFee: number
    prize: number
    runDate: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    competitionResults?: CompetitionResultCreateNestedManyWithoutShowInput
  }

  export type ShowUncheckedCreateWithoutHostUserInput = {
    id?: number
    name: string
    discipline: string
    levelMin: number
    levelMax: number
    entryFee: number
    prize: number
    runDate: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    competitionResults?: CompetitionResultUncheckedCreateNestedManyWithoutShowInput
  }

  export type ShowCreateOrConnectWithoutHostUserInput = {
    where: ShowWhereUniqueInput
    create: XOR<ShowCreateWithoutHostUserInput, ShowUncheckedCreateWithoutHostUserInput>
  }

  export type ShowCreateManyHostUserInputEnvelope = {
    data: ShowCreateManyHostUserInput | ShowCreateManyHostUserInput[]
    skipDuplicates?: boolean
  }

  export type XpEventCreateWithoutUserInput = {
    amount: number
    reason: string
    timestamp?: Date | string
  }

  export type XpEventUncheckedCreateWithoutUserInput = {
    id?: number
    amount: number
    reason: string
    timestamp?: Date | string
  }

  export type XpEventCreateOrConnectWithoutUserInput = {
    where: XpEventWhereUniqueInput
    create: XOR<XpEventCreateWithoutUserInput, XpEventUncheckedCreateWithoutUserInput>
  }

  export type XpEventCreateManyUserInputEnvelope = {
    data: XpEventCreateManyUserInput | XpEventCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type GroomAssignmentUpsertWithWhereUniqueWithoutUserInput = {
    where: GroomAssignmentWhereUniqueInput
    update: XOR<GroomAssignmentUpdateWithoutUserInput, GroomAssignmentUncheckedUpdateWithoutUserInput>
    create: XOR<GroomAssignmentCreateWithoutUserInput, GroomAssignmentUncheckedCreateWithoutUserInput>
  }

  export type GroomAssignmentUpdateWithWhereUniqueWithoutUserInput = {
    where: GroomAssignmentWhereUniqueInput
    data: XOR<GroomAssignmentUpdateWithoutUserInput, GroomAssignmentUncheckedUpdateWithoutUserInput>
  }

  export type GroomAssignmentUpdateManyWithWhereWithoutUserInput = {
    where: GroomAssignmentScalarWhereInput
    data: XOR<GroomAssignmentUpdateManyMutationInput, GroomAssignmentUncheckedUpdateManyWithoutUserInput>
  }

  export type GroomAssignmentScalarWhereInput = {
    AND?: GroomAssignmentScalarWhereInput | GroomAssignmentScalarWhereInput[]
    OR?: GroomAssignmentScalarWhereInput[]
    NOT?: GroomAssignmentScalarWhereInput | GroomAssignmentScalarWhereInput[]
    id?: IntFilter<"GroomAssignment"> | number
    startDate?: DateTimeFilter<"GroomAssignment"> | Date | string
    endDate?: DateTimeNullableFilter<"GroomAssignment"> | Date | string | null
    isActive?: BoolFilter<"GroomAssignment"> | boolean
    isDefault?: BoolFilter<"GroomAssignment"> | boolean
    priority?: IntFilter<"GroomAssignment"> | number
    notes?: StringNullableFilter<"GroomAssignment"> | string | null
    foalId?: IntFilter<"GroomAssignment"> | number
    groomId?: IntFilter<"GroomAssignment"> | number
    userId?: StringNullableFilter<"GroomAssignment"> | string | null
    createdAt?: DateTimeFilter<"GroomAssignment"> | Date | string
    updatedAt?: DateTimeFilter<"GroomAssignment"> | Date | string
  }

  export type GroomUpsertWithWhereUniqueWithoutUserInput = {
    where: GroomWhereUniqueInput
    update: XOR<GroomUpdateWithoutUserInput, GroomUncheckedUpdateWithoutUserInput>
    create: XOR<GroomCreateWithoutUserInput, GroomUncheckedCreateWithoutUserInput>
  }

  export type GroomUpdateWithWhereUniqueWithoutUserInput = {
    where: GroomWhereUniqueInput
    data: XOR<GroomUpdateWithoutUserInput, GroomUncheckedUpdateWithoutUserInput>
  }

  export type GroomUpdateManyWithWhereWithoutUserInput = {
    where: GroomScalarWhereInput
    data: XOR<GroomUpdateManyMutationInput, GroomUncheckedUpdateManyWithoutUserInput>
  }

  export type GroomScalarWhereInput = {
    AND?: GroomScalarWhereInput | GroomScalarWhereInput[]
    OR?: GroomScalarWhereInput[]
    NOT?: GroomScalarWhereInput | GroomScalarWhereInput[]
    id?: IntFilter<"Groom"> | number
    name?: StringFilter<"Groom"> | string
    speciality?: StringFilter<"Groom"> | string
    experience?: IntFilter<"Groom"> | number
    skillLevel?: StringFilter<"Groom"> | string
    personality?: StringFilter<"Groom"> | string
    sessionRate?: DecimalFilter<"Groom"> | Decimal | DecimalJsLike | number | string
    availability?: JsonFilter<"Groom">
    bio?: StringNullableFilter<"Groom"> | string | null
    imageUrl?: StringNullableFilter<"Groom"> | string | null
    isActive?: BoolFilter<"Groom"> | boolean
    hiredDate?: DateTimeFilter<"Groom"> | Date | string
    userId?: StringNullableFilter<"Groom"> | string | null
    createdAt?: DateTimeFilter<"Groom"> | Date | string
    updatedAt?: DateTimeFilter<"Groom"> | Date | string
  }

  export type HorseUpsertWithWhereUniqueWithoutUserInput = {
    where: HorseWhereUniqueInput
    update: XOR<HorseUpdateWithoutUserInput, HorseUncheckedUpdateWithoutUserInput>
    create: XOR<HorseCreateWithoutUserInput, HorseUncheckedCreateWithoutUserInput>
  }

  export type HorseUpdateWithWhereUniqueWithoutUserInput = {
    where: HorseWhereUniqueInput
    data: XOR<HorseUpdateWithoutUserInput, HorseUncheckedUpdateWithoutUserInput>
  }

  export type HorseUpdateManyWithWhereWithoutUserInput = {
    where: HorseScalarWhereInput
    data: XOR<HorseUpdateManyMutationInput, HorseUncheckedUpdateManyWithoutUserInput>
  }

  export type HorseScalarWhereInput = {
    AND?: HorseScalarWhereInput | HorseScalarWhereInput[]
    OR?: HorseScalarWhereInput[]
    NOT?: HorseScalarWhereInput | HorseScalarWhereInput[]
    id?: IntFilter<"Horse"> | number
    name?: StringFilter<"Horse"> | string
    sex?: StringFilter<"Horse"> | string
    dateOfBirth?: DateTimeFilter<"Horse"> | Date | string
    breedId?: IntNullableFilter<"Horse"> | number | null
    ownerId?: StringNullableFilter<"Horse"> | string | null
    stableId?: IntNullableFilter<"Horse"> | number | null
    genotype?: JsonNullableFilter<"Horse">
    phenotypicMarkings?: JsonNullableFilter<"Horse">
    finalDisplayColor?: StringNullableFilter<"Horse"> | string | null
    shade?: StringNullableFilter<"Horse"> | string | null
    imageUrl?: StringNullableFilter<"Horse"> | string | null
    trait?: StringNullableFilter<"Horse"> | string | null
    temperament?: StringNullableFilter<"Horse"> | string | null
    personality?: StringNullableFilter<"Horse"> | string | null
    precision?: IntNullableFilter<"Horse"> | number | null
    strength?: IntNullableFilter<"Horse"> | number | null
    speed?: IntNullableFilter<"Horse"> | number | null
    agility?: IntNullableFilter<"Horse"> | number | null
    endurance?: IntNullableFilter<"Horse"> | number | null
    intelligence?: IntNullableFilter<"Horse"> | number | null
    stamina?: IntNullableFilter<"Horse"> | number | null
    balance?: IntNullableFilter<"Horse"> | number | null
    boldness?: IntNullableFilter<"Horse"> | number | null
    flexibility?: IntNullableFilter<"Horse"> | number | null
    obedience?: IntNullableFilter<"Horse"> | number | null
    focus?: IntNullableFilter<"Horse"> | number | null
    totalEarnings?: IntNullableFilter<"Horse"> | number | null
    sireId?: IntNullableFilter<"Horse"> | number | null
    damId?: IntNullableFilter<"Horse"> | number | null
    studStatus?: StringNullableFilter<"Horse"> | string | null
    studFee?: IntNullableFilter<"Horse"> | number | null
    lastBredDate?: DateTimeNullableFilter<"Horse"> | Date | string | null
    forSale?: BoolNullableFilter<"Horse"> | boolean | null
    salePrice?: IntNullableFilter<"Horse"> | number | null
    healthStatus?: StringNullableFilter<"Horse"> | string | null
    lastVettedDate?: DateTimeNullableFilter<"Horse"> | Date | string | null
    bondScore?: IntNullableFilter<"Horse"> | number | null
    stressLevel?: IntNullableFilter<"Horse"> | number | null
    daysGroomedInARow?: IntNullableFilter<"Horse"> | number | null
    burnoutStatus?: StringNullableFilter<"Horse"> | string | null
    taskLog?: JsonNullableFilter<"Horse">
    consecutiveDaysFoalCare?: IntNullableFilter<"Horse"> | number | null
    lastGroomed?: DateTimeNullableFilter<"Horse"> | Date | string | null
    tack?: JsonNullableFilter<"Horse">
    age?: IntNullableFilter<"Horse"> | number | null
    userId?: StringNullableFilter<"Horse"> | string | null
    trainingCooldown?: DateTimeNullableFilter<"Horse"> | Date | string | null
    earnings?: DecimalNullableFilter<"Horse"> | Decimal | DecimalJsLike | number | string | null
    rider?: JsonNullableFilter<"Horse">
    disciplineScores?: JsonNullableFilter<"Horse">
    epigeneticModifiers?: JsonNullableFilter<"Horse">
    horseXp?: IntNullableFilter<"Horse"> | number | null
    availableStatPoints?: IntNullableFilter<"Horse"> | number | null
    createdAt?: DateTimeNullableFilter<"Horse"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Horse"> | Date | string | null
  }

  export type RefreshTokenUpsertWithWhereUniqueWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    update: XOR<RefreshTokenUpdateWithoutUserInput, RefreshTokenUncheckedUpdateWithoutUserInput>
    create: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput>
  }

  export type RefreshTokenUpdateWithWhereUniqueWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    data: XOR<RefreshTokenUpdateWithoutUserInput, RefreshTokenUncheckedUpdateWithoutUserInput>
  }

  export type RefreshTokenUpdateManyWithWhereWithoutUserInput = {
    where: RefreshTokenScalarWhereInput
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyWithoutUserInput>
  }

  export type RefreshTokenScalarWhereInput = {
    AND?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
    OR?: RefreshTokenScalarWhereInput[]
    NOT?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
    id?: IntFilter<"RefreshToken"> | number
    token?: StringFilter<"RefreshToken"> | string
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    updatedAt?: DateTimeFilter<"RefreshToken"> | Date | string
  }

  export type ShowUpsertWithWhereUniqueWithoutHostUserInput = {
    where: ShowWhereUniqueInput
    update: XOR<ShowUpdateWithoutHostUserInput, ShowUncheckedUpdateWithoutHostUserInput>
    create: XOR<ShowCreateWithoutHostUserInput, ShowUncheckedCreateWithoutHostUserInput>
  }

  export type ShowUpdateWithWhereUniqueWithoutHostUserInput = {
    where: ShowWhereUniqueInput
    data: XOR<ShowUpdateWithoutHostUserInput, ShowUncheckedUpdateWithoutHostUserInput>
  }

  export type ShowUpdateManyWithWhereWithoutHostUserInput = {
    where: ShowScalarWhereInput
    data: XOR<ShowUpdateManyMutationInput, ShowUncheckedUpdateManyWithoutHostUserInput>
  }

  export type ShowScalarWhereInput = {
    AND?: ShowScalarWhereInput | ShowScalarWhereInput[]
    OR?: ShowScalarWhereInput[]
    NOT?: ShowScalarWhereInput | ShowScalarWhereInput[]
    id?: IntFilter<"Show"> | number
    name?: StringFilter<"Show"> | string
    discipline?: StringFilter<"Show"> | string
    levelMin?: IntFilter<"Show"> | number
    levelMax?: IntFilter<"Show"> | number
    entryFee?: IntFilter<"Show"> | number
    prize?: IntFilter<"Show"> | number
    runDate?: DateTimeFilter<"Show"> | Date | string
    hostUserId?: StringNullableFilter<"Show"> | string | null
    createdAt?: DateTimeFilter<"Show"> | Date | string
    updatedAt?: DateTimeFilter<"Show"> | Date | string
  }

  export type XpEventUpsertWithWhereUniqueWithoutUserInput = {
    where: XpEventWhereUniqueInput
    update: XOR<XpEventUpdateWithoutUserInput, XpEventUncheckedUpdateWithoutUserInput>
    create: XOR<XpEventCreateWithoutUserInput, XpEventUncheckedCreateWithoutUserInput>
  }

  export type XpEventUpdateWithWhereUniqueWithoutUserInput = {
    where: XpEventWhereUniqueInput
    data: XOR<XpEventUpdateWithoutUserInput, XpEventUncheckedUpdateWithoutUserInput>
  }

  export type XpEventUpdateManyWithWhereWithoutUserInput = {
    where: XpEventScalarWhereInput
    data: XOR<XpEventUpdateManyMutationInput, XpEventUncheckedUpdateManyWithoutUserInput>
  }

  export type XpEventScalarWhereInput = {
    AND?: XpEventScalarWhereInput | XpEventScalarWhereInput[]
    OR?: XpEventScalarWhereInput[]
    NOT?: XpEventScalarWhereInput | XpEventScalarWhereInput[]
    id?: IntFilter<"XpEvent"> | number
    amount?: IntFilter<"XpEvent"> | number
    reason?: StringFilter<"XpEvent"> | string
    userId?: StringFilter<"XpEvent"> | string
    timestamp?: DateTimeFilter<"XpEvent"> | Date | string
  }

  export type HorseCreateWithoutBreedInput = {
    name: string
    sex: string
    dateOfBirth: Date | string
    ownerId?: string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventCreateNestedManyWithoutHorseInput
    dam?: HorseCreateNestedOneWithoutDamOffspringInput
    damOffspring?: HorseCreateNestedManyWithoutDamInput
    sire?: HorseCreateNestedOneWithoutSireOffspringInput
    sireOffspring?: HorseCreateNestedManyWithoutSireInput
    stable?: StableCreateNestedOneWithoutHorsesInput
    user?: UserCreateNestedOneWithoutHorsesInput
    trainingLogs?: TrainingLogCreateNestedManyWithoutHorseInput
  }

  export type HorseUncheckedCreateWithoutBreedInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    ownerId?: string | null
    stableId?: number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    sireId?: number | null
    damId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    userId?: string | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultUncheckedCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityUncheckedCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentUncheckedCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventUncheckedCreateNestedManyWithoutHorseInput
    damOffspring?: HorseUncheckedCreateNestedManyWithoutDamInput
    sireOffspring?: HorseUncheckedCreateNestedManyWithoutSireInput
    trainingLogs?: TrainingLogUncheckedCreateNestedManyWithoutHorseInput
  }

  export type HorseCreateOrConnectWithoutBreedInput = {
    where: HorseWhereUniqueInput
    create: XOR<HorseCreateWithoutBreedInput, HorseUncheckedCreateWithoutBreedInput>
  }

  export type HorseCreateManyBreedInputEnvelope = {
    data: HorseCreateManyBreedInput | HorseCreateManyBreedInput[]
    skipDuplicates?: boolean
  }

  export type HorseUpsertWithWhereUniqueWithoutBreedInput = {
    where: HorseWhereUniqueInput
    update: XOR<HorseUpdateWithoutBreedInput, HorseUncheckedUpdateWithoutBreedInput>
    create: XOR<HorseCreateWithoutBreedInput, HorseUncheckedCreateWithoutBreedInput>
  }

  export type HorseUpdateWithWhereUniqueWithoutBreedInput = {
    where: HorseWhereUniqueInput
    data: XOR<HorseUpdateWithoutBreedInput, HorseUncheckedUpdateWithoutBreedInput>
  }

  export type HorseUpdateManyWithWhereWithoutBreedInput = {
    where: HorseScalarWhereInput
    data: XOR<HorseUpdateManyMutationInput, HorseUncheckedUpdateManyWithoutBreedInput>
  }

  export type HorseCreateWithoutStableInput = {
    name: string
    sex: string
    dateOfBirth: Date | string
    ownerId?: string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventCreateNestedManyWithoutHorseInput
    breed?: BreedCreateNestedOneWithoutHorsesInput
    dam?: HorseCreateNestedOneWithoutDamOffspringInput
    damOffspring?: HorseCreateNestedManyWithoutDamInput
    sire?: HorseCreateNestedOneWithoutSireOffspringInput
    sireOffspring?: HorseCreateNestedManyWithoutSireInput
    user?: UserCreateNestedOneWithoutHorsesInput
    trainingLogs?: TrainingLogCreateNestedManyWithoutHorseInput
  }

  export type HorseUncheckedCreateWithoutStableInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    breedId?: number | null
    ownerId?: string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    sireId?: number | null
    damId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    userId?: string | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultUncheckedCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityUncheckedCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentUncheckedCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventUncheckedCreateNestedManyWithoutHorseInput
    damOffspring?: HorseUncheckedCreateNestedManyWithoutDamInput
    sireOffspring?: HorseUncheckedCreateNestedManyWithoutSireInput
    trainingLogs?: TrainingLogUncheckedCreateNestedManyWithoutHorseInput
  }

  export type HorseCreateOrConnectWithoutStableInput = {
    where: HorseWhereUniqueInput
    create: XOR<HorseCreateWithoutStableInput, HorseUncheckedCreateWithoutStableInput>
  }

  export type HorseCreateManyStableInputEnvelope = {
    data: HorseCreateManyStableInput | HorseCreateManyStableInput[]
    skipDuplicates?: boolean
  }

  export type HorseUpsertWithWhereUniqueWithoutStableInput = {
    where: HorseWhereUniqueInput
    update: XOR<HorseUpdateWithoutStableInput, HorseUncheckedUpdateWithoutStableInput>
    create: XOR<HorseCreateWithoutStableInput, HorseUncheckedCreateWithoutStableInput>
  }

  export type HorseUpdateWithWhereUniqueWithoutStableInput = {
    where: HorseWhereUniqueInput
    data: XOR<HorseUpdateWithoutStableInput, HorseUncheckedUpdateWithoutStableInput>
  }

  export type HorseUpdateManyWithWhereWithoutStableInput = {
    where: HorseScalarWhereInput
    data: XOR<HorseUpdateManyMutationInput, HorseUncheckedUpdateManyWithoutStableInput>
  }

  export type CompetitionResultCreateWithoutHorseInput = {
    score: Decimal | DecimalJsLike | number | string
    placement?: string | null
    discipline: string
    runDate: Date | string
    showName: string
    prizeWon?: Decimal | DecimalJsLike | number | string | null
    statGains?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    show: ShowCreateNestedOneWithoutCompetitionResultsInput
  }

  export type CompetitionResultUncheckedCreateWithoutHorseInput = {
    id?: number
    score: Decimal | DecimalJsLike | number | string
    placement?: string | null
    discipline: string
    runDate: Date | string
    showName: string
    prizeWon?: Decimal | DecimalJsLike | number | string | null
    statGains?: NullableJsonNullValueInput | InputJsonValue
    showId: number
    createdAt?: Date | string
  }

  export type CompetitionResultCreateOrConnectWithoutHorseInput = {
    where: CompetitionResultWhereUniqueInput
    create: XOR<CompetitionResultCreateWithoutHorseInput, CompetitionResultUncheckedCreateWithoutHorseInput>
  }

  export type CompetitionResultCreateManyHorseInputEnvelope = {
    data: CompetitionResultCreateManyHorseInput | CompetitionResultCreateManyHorseInput[]
    skipDuplicates?: boolean
  }

  export type FoalActivityCreateWithoutFoalInput = {
    day: number
    activityType: string
    outcome: string
    bondingChange: number
    stressChange: number
    description: string
    createdAt?: Date | string
  }

  export type FoalActivityUncheckedCreateWithoutFoalInput = {
    id?: number
    day: number
    activityType: string
    outcome: string
    bondingChange: number
    stressChange: number
    description: string
    createdAt?: Date | string
  }

  export type FoalActivityCreateOrConnectWithoutFoalInput = {
    where: FoalActivityWhereUniqueInput
    create: XOR<FoalActivityCreateWithoutFoalInput, FoalActivityUncheckedCreateWithoutFoalInput>
  }

  export type FoalActivityCreateManyFoalInputEnvelope = {
    data: FoalActivityCreateManyFoalInput | FoalActivityCreateManyFoalInput[]
    skipDuplicates?: boolean
  }

  export type FoalDevelopmentCreateWithoutFoalInput = {
    currentDay?: number
    bondingLevel?: number
    stressLevel?: number
    completedActivities?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FoalDevelopmentUncheckedCreateWithoutFoalInput = {
    id?: number
    currentDay?: number
    bondingLevel?: number
    stressLevel?: number
    completedActivities?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FoalDevelopmentCreateOrConnectWithoutFoalInput = {
    where: FoalDevelopmentWhereUniqueInput
    create: XOR<FoalDevelopmentCreateWithoutFoalInput, FoalDevelopmentUncheckedCreateWithoutFoalInput>
  }

  export type FoalTrainingHistoryCreateWithoutHorseInput = {
    id?: string
    day: number
    activity: string
    outcome: string
    bondChange?: number
    stressChange?: number
    timestamp?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FoalTrainingHistoryUncheckedCreateWithoutHorseInput = {
    id?: string
    day: number
    activity: string
    outcome: string
    bondChange?: number
    stressChange?: number
    timestamp?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FoalTrainingHistoryCreateOrConnectWithoutHorseInput = {
    where: FoalTrainingHistoryWhereUniqueInput
    create: XOR<FoalTrainingHistoryCreateWithoutHorseInput, FoalTrainingHistoryUncheckedCreateWithoutHorseInput>
  }

  export type FoalTrainingHistoryCreateManyHorseInputEnvelope = {
    data: FoalTrainingHistoryCreateManyHorseInput | FoalTrainingHistoryCreateManyHorseInput[]
    skipDuplicates?: boolean
  }

  export type GroomAssignmentCreateWithoutFoalInput = {
    startDate?: Date | string
    endDate?: Date | string | null
    isActive?: boolean
    isDefault?: boolean
    priority?: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    groom: GroomCreateNestedOneWithoutGroomAssignmentsInput
    user?: UserCreateNestedOneWithoutGroomAssignmentsInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutAssignmentInput
  }

  export type GroomAssignmentUncheckedCreateWithoutFoalInput = {
    id?: number
    startDate?: Date | string
    endDate?: Date | string | null
    isActive?: boolean
    isDefault?: boolean
    priority?: number
    notes?: string | null
    groomId: number
    userId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutAssignmentInput
  }

  export type GroomAssignmentCreateOrConnectWithoutFoalInput = {
    where: GroomAssignmentWhereUniqueInput
    create: XOR<GroomAssignmentCreateWithoutFoalInput, GroomAssignmentUncheckedCreateWithoutFoalInput>
  }

  export type GroomAssignmentCreateManyFoalInputEnvelope = {
    data: GroomAssignmentCreateManyFoalInput | GroomAssignmentCreateManyFoalInput[]
    skipDuplicates?: boolean
  }

  export type GroomInteractionCreateWithoutFoalInput = {
    interactionType: string
    duration: number
    bondingChange?: number
    stressChange?: number
    quality?: string
    notes?: string | null
    cost?: Decimal | DecimalJsLike | number | string
    timestamp?: Date | string
    createdAt?: Date | string
    assignment?: GroomAssignmentCreateNestedOneWithoutGroomInteractionsInput
    groom: GroomCreateNestedOneWithoutGroomInteractionsInput
  }

  export type GroomInteractionUncheckedCreateWithoutFoalInput = {
    id?: number
    interactionType: string
    duration: number
    bondingChange?: number
    stressChange?: number
    quality?: string
    notes?: string | null
    cost?: Decimal | DecimalJsLike | number | string
    groomId: number
    assignmentId?: number | null
    timestamp?: Date | string
    createdAt?: Date | string
  }

  export type GroomInteractionCreateOrConnectWithoutFoalInput = {
    where: GroomInteractionWhereUniqueInput
    create: XOR<GroomInteractionCreateWithoutFoalInput, GroomInteractionUncheckedCreateWithoutFoalInput>
  }

  export type GroomInteractionCreateManyFoalInputEnvelope = {
    data: GroomInteractionCreateManyFoalInput | GroomInteractionCreateManyFoalInput[]
    skipDuplicates?: boolean
  }

  export type HorseXpEventCreateWithoutHorseInput = {
    amount: number
    reason: string
    timestamp?: Date | string
  }

  export type HorseXpEventUncheckedCreateWithoutHorseInput = {
    id?: number
    amount: number
    reason: string
    timestamp?: Date | string
  }

  export type HorseXpEventCreateOrConnectWithoutHorseInput = {
    where: HorseXpEventWhereUniqueInput
    create: XOR<HorseXpEventCreateWithoutHorseInput, HorseXpEventUncheckedCreateWithoutHorseInput>
  }

  export type HorseXpEventCreateManyHorseInputEnvelope = {
    data: HorseXpEventCreateManyHorseInput | HorseXpEventCreateManyHorseInput[]
    skipDuplicates?: boolean
  }

  export type BreedCreateWithoutHorsesInput = {
    name: string
    description?: string | null
  }

  export type BreedUncheckedCreateWithoutHorsesInput = {
    id?: number
    name: string
    description?: string | null
  }

  export type BreedCreateOrConnectWithoutHorsesInput = {
    where: BreedWhereUniqueInput
    create: XOR<BreedCreateWithoutHorsesInput, BreedUncheckedCreateWithoutHorsesInput>
  }

  export type HorseCreateWithoutDamOffspringInput = {
    name: string
    sex: string
    dateOfBirth: Date | string
    ownerId?: string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventCreateNestedManyWithoutHorseInput
    breed?: BreedCreateNestedOneWithoutHorsesInput
    dam?: HorseCreateNestedOneWithoutDamOffspringInput
    sire?: HorseCreateNestedOneWithoutSireOffspringInput
    sireOffspring?: HorseCreateNestedManyWithoutSireInput
    stable?: StableCreateNestedOneWithoutHorsesInput
    user?: UserCreateNestedOneWithoutHorsesInput
    trainingLogs?: TrainingLogCreateNestedManyWithoutHorseInput
  }

  export type HorseUncheckedCreateWithoutDamOffspringInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    breedId?: number | null
    ownerId?: string | null
    stableId?: number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    sireId?: number | null
    damId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    userId?: string | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultUncheckedCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityUncheckedCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentUncheckedCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventUncheckedCreateNestedManyWithoutHorseInput
    sireOffspring?: HorseUncheckedCreateNestedManyWithoutSireInput
    trainingLogs?: TrainingLogUncheckedCreateNestedManyWithoutHorseInput
  }

  export type HorseCreateOrConnectWithoutDamOffspringInput = {
    where: HorseWhereUniqueInput
    create: XOR<HorseCreateWithoutDamOffspringInput, HorseUncheckedCreateWithoutDamOffspringInput>
  }

  export type HorseCreateWithoutDamInput = {
    name: string
    sex: string
    dateOfBirth: Date | string
    ownerId?: string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventCreateNestedManyWithoutHorseInput
    breed?: BreedCreateNestedOneWithoutHorsesInput
    damOffspring?: HorseCreateNestedManyWithoutDamInput
    sire?: HorseCreateNestedOneWithoutSireOffspringInput
    sireOffspring?: HorseCreateNestedManyWithoutSireInput
    stable?: StableCreateNestedOneWithoutHorsesInput
    user?: UserCreateNestedOneWithoutHorsesInput
    trainingLogs?: TrainingLogCreateNestedManyWithoutHorseInput
  }

  export type HorseUncheckedCreateWithoutDamInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    breedId?: number | null
    ownerId?: string | null
    stableId?: number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    sireId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    userId?: string | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultUncheckedCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityUncheckedCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentUncheckedCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventUncheckedCreateNestedManyWithoutHorseInput
    damOffspring?: HorseUncheckedCreateNestedManyWithoutDamInput
    sireOffspring?: HorseUncheckedCreateNestedManyWithoutSireInput
    trainingLogs?: TrainingLogUncheckedCreateNestedManyWithoutHorseInput
  }

  export type HorseCreateOrConnectWithoutDamInput = {
    where: HorseWhereUniqueInput
    create: XOR<HorseCreateWithoutDamInput, HorseUncheckedCreateWithoutDamInput>
  }

  export type HorseCreateManyDamInputEnvelope = {
    data: HorseCreateManyDamInput | HorseCreateManyDamInput[]
    skipDuplicates?: boolean
  }

  export type HorseCreateWithoutSireOffspringInput = {
    name: string
    sex: string
    dateOfBirth: Date | string
    ownerId?: string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventCreateNestedManyWithoutHorseInput
    breed?: BreedCreateNestedOneWithoutHorsesInput
    dam?: HorseCreateNestedOneWithoutDamOffspringInput
    damOffspring?: HorseCreateNestedManyWithoutDamInput
    sire?: HorseCreateNestedOneWithoutSireOffspringInput
    stable?: StableCreateNestedOneWithoutHorsesInput
    user?: UserCreateNestedOneWithoutHorsesInput
    trainingLogs?: TrainingLogCreateNestedManyWithoutHorseInput
  }

  export type HorseUncheckedCreateWithoutSireOffspringInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    breedId?: number | null
    ownerId?: string | null
    stableId?: number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    sireId?: number | null
    damId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    userId?: string | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultUncheckedCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityUncheckedCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentUncheckedCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventUncheckedCreateNestedManyWithoutHorseInput
    damOffspring?: HorseUncheckedCreateNestedManyWithoutDamInput
    trainingLogs?: TrainingLogUncheckedCreateNestedManyWithoutHorseInput
  }

  export type HorseCreateOrConnectWithoutSireOffspringInput = {
    where: HorseWhereUniqueInput
    create: XOR<HorseCreateWithoutSireOffspringInput, HorseUncheckedCreateWithoutSireOffspringInput>
  }

  export type HorseCreateWithoutSireInput = {
    name: string
    sex: string
    dateOfBirth: Date | string
    ownerId?: string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventCreateNestedManyWithoutHorseInput
    breed?: BreedCreateNestedOneWithoutHorsesInput
    dam?: HorseCreateNestedOneWithoutDamOffspringInput
    damOffspring?: HorseCreateNestedManyWithoutDamInput
    sireOffspring?: HorseCreateNestedManyWithoutSireInput
    stable?: StableCreateNestedOneWithoutHorsesInput
    user?: UserCreateNestedOneWithoutHorsesInput
    trainingLogs?: TrainingLogCreateNestedManyWithoutHorseInput
  }

  export type HorseUncheckedCreateWithoutSireInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    breedId?: number | null
    ownerId?: string | null
    stableId?: number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    damId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    userId?: string | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultUncheckedCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityUncheckedCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentUncheckedCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventUncheckedCreateNestedManyWithoutHorseInput
    damOffspring?: HorseUncheckedCreateNestedManyWithoutDamInput
    sireOffspring?: HorseUncheckedCreateNestedManyWithoutSireInput
    trainingLogs?: TrainingLogUncheckedCreateNestedManyWithoutHorseInput
  }

  export type HorseCreateOrConnectWithoutSireInput = {
    where: HorseWhereUniqueInput
    create: XOR<HorseCreateWithoutSireInput, HorseUncheckedCreateWithoutSireInput>
  }

  export type HorseCreateManySireInputEnvelope = {
    data: HorseCreateManySireInput | HorseCreateManySireInput[]
    skipDuplicates?: boolean
  }

  export type StableCreateWithoutHorsesInput = {
    name: string
    location?: string | null
  }

  export type StableUncheckedCreateWithoutHorsesInput = {
    id?: number
    name: string
    location?: string | null
  }

  export type StableCreateOrConnectWithoutHorsesInput = {
    where: StableWhereUniqueInput
    create: XOR<StableCreateWithoutHorsesInput, StableUncheckedCreateWithoutHorsesInput>
  }

  export type UserCreateWithoutHorsesInput = {
    id?: string
    username: string
    email: string
    password: string
    firstName: string
    lastName: string
    money?: number
    level?: number
    xp?: number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutUserInput
    grooms?: GroomCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    shows?: ShowCreateNestedManyWithoutHostUserInput
    xpEvents?: XpEventCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutHorsesInput = {
    id?: string
    username: string
    email: string
    password: string
    firstName: string
    lastName: string
    money?: number
    level?: number
    xp?: number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutUserInput
    grooms?: GroomUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    shows?: ShowUncheckedCreateNestedManyWithoutHostUserInput
    xpEvents?: XpEventUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutHorsesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutHorsesInput, UserUncheckedCreateWithoutHorsesInput>
  }

  export type TrainingLogCreateWithoutHorseInput = {
    discipline: string
    trainedAt?: Date | string
  }

  export type TrainingLogUncheckedCreateWithoutHorseInput = {
    id?: number
    discipline: string
    trainedAt?: Date | string
  }

  export type TrainingLogCreateOrConnectWithoutHorseInput = {
    where: TrainingLogWhereUniqueInput
    create: XOR<TrainingLogCreateWithoutHorseInput, TrainingLogUncheckedCreateWithoutHorseInput>
  }

  export type TrainingLogCreateManyHorseInputEnvelope = {
    data: TrainingLogCreateManyHorseInput | TrainingLogCreateManyHorseInput[]
    skipDuplicates?: boolean
  }

  export type CompetitionResultUpsertWithWhereUniqueWithoutHorseInput = {
    where: CompetitionResultWhereUniqueInput
    update: XOR<CompetitionResultUpdateWithoutHorseInput, CompetitionResultUncheckedUpdateWithoutHorseInput>
    create: XOR<CompetitionResultCreateWithoutHorseInput, CompetitionResultUncheckedCreateWithoutHorseInput>
  }

  export type CompetitionResultUpdateWithWhereUniqueWithoutHorseInput = {
    where: CompetitionResultWhereUniqueInput
    data: XOR<CompetitionResultUpdateWithoutHorseInput, CompetitionResultUncheckedUpdateWithoutHorseInput>
  }

  export type CompetitionResultUpdateManyWithWhereWithoutHorseInput = {
    where: CompetitionResultScalarWhereInput
    data: XOR<CompetitionResultUpdateManyMutationInput, CompetitionResultUncheckedUpdateManyWithoutHorseInput>
  }

  export type CompetitionResultScalarWhereInput = {
    AND?: CompetitionResultScalarWhereInput | CompetitionResultScalarWhereInput[]
    OR?: CompetitionResultScalarWhereInput[]
    NOT?: CompetitionResultScalarWhereInput | CompetitionResultScalarWhereInput[]
    id?: IntFilter<"CompetitionResult"> | number
    score?: DecimalFilter<"CompetitionResult"> | Decimal | DecimalJsLike | number | string
    placement?: StringNullableFilter<"CompetitionResult"> | string | null
    discipline?: StringFilter<"CompetitionResult"> | string
    runDate?: DateTimeFilter<"CompetitionResult"> | Date | string
    showName?: StringFilter<"CompetitionResult"> | string
    prizeWon?: DecimalNullableFilter<"CompetitionResult"> | Decimal | DecimalJsLike | number | string | null
    statGains?: JsonNullableFilter<"CompetitionResult">
    horseId?: IntFilter<"CompetitionResult"> | number
    showId?: IntFilter<"CompetitionResult"> | number
    createdAt?: DateTimeFilter<"CompetitionResult"> | Date | string
  }

  export type FoalActivityUpsertWithWhereUniqueWithoutFoalInput = {
    where: FoalActivityWhereUniqueInput
    update: XOR<FoalActivityUpdateWithoutFoalInput, FoalActivityUncheckedUpdateWithoutFoalInput>
    create: XOR<FoalActivityCreateWithoutFoalInput, FoalActivityUncheckedCreateWithoutFoalInput>
  }

  export type FoalActivityUpdateWithWhereUniqueWithoutFoalInput = {
    where: FoalActivityWhereUniqueInput
    data: XOR<FoalActivityUpdateWithoutFoalInput, FoalActivityUncheckedUpdateWithoutFoalInput>
  }

  export type FoalActivityUpdateManyWithWhereWithoutFoalInput = {
    where: FoalActivityScalarWhereInput
    data: XOR<FoalActivityUpdateManyMutationInput, FoalActivityUncheckedUpdateManyWithoutFoalInput>
  }

  export type FoalActivityScalarWhereInput = {
    AND?: FoalActivityScalarWhereInput | FoalActivityScalarWhereInput[]
    OR?: FoalActivityScalarWhereInput[]
    NOT?: FoalActivityScalarWhereInput | FoalActivityScalarWhereInput[]
    id?: IntFilter<"FoalActivity"> | number
    day?: IntFilter<"FoalActivity"> | number
    activityType?: StringFilter<"FoalActivity"> | string
    outcome?: StringFilter<"FoalActivity"> | string
    bondingChange?: IntFilter<"FoalActivity"> | number
    stressChange?: IntFilter<"FoalActivity"> | number
    description?: StringFilter<"FoalActivity"> | string
    foalId?: IntFilter<"FoalActivity"> | number
    createdAt?: DateTimeFilter<"FoalActivity"> | Date | string
  }

  export type FoalDevelopmentUpsertWithoutFoalInput = {
    update: XOR<FoalDevelopmentUpdateWithoutFoalInput, FoalDevelopmentUncheckedUpdateWithoutFoalInput>
    create: XOR<FoalDevelopmentCreateWithoutFoalInput, FoalDevelopmentUncheckedCreateWithoutFoalInput>
    where?: FoalDevelopmentWhereInput
  }

  export type FoalDevelopmentUpdateToOneWithWhereWithoutFoalInput = {
    where?: FoalDevelopmentWhereInput
    data: XOR<FoalDevelopmentUpdateWithoutFoalInput, FoalDevelopmentUncheckedUpdateWithoutFoalInput>
  }

  export type FoalDevelopmentUpdateWithoutFoalInput = {
    currentDay?: IntFieldUpdateOperationsInput | number
    bondingLevel?: IntFieldUpdateOperationsInput | number
    stressLevel?: IntFieldUpdateOperationsInput | number
    completedActivities?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FoalDevelopmentUncheckedUpdateWithoutFoalInput = {
    id?: IntFieldUpdateOperationsInput | number
    currentDay?: IntFieldUpdateOperationsInput | number
    bondingLevel?: IntFieldUpdateOperationsInput | number
    stressLevel?: IntFieldUpdateOperationsInput | number
    completedActivities?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FoalTrainingHistoryUpsertWithWhereUniqueWithoutHorseInput = {
    where: FoalTrainingHistoryWhereUniqueInput
    update: XOR<FoalTrainingHistoryUpdateWithoutHorseInput, FoalTrainingHistoryUncheckedUpdateWithoutHorseInput>
    create: XOR<FoalTrainingHistoryCreateWithoutHorseInput, FoalTrainingHistoryUncheckedCreateWithoutHorseInput>
  }

  export type FoalTrainingHistoryUpdateWithWhereUniqueWithoutHorseInput = {
    where: FoalTrainingHistoryWhereUniqueInput
    data: XOR<FoalTrainingHistoryUpdateWithoutHorseInput, FoalTrainingHistoryUncheckedUpdateWithoutHorseInput>
  }

  export type FoalTrainingHistoryUpdateManyWithWhereWithoutHorseInput = {
    where: FoalTrainingHistoryScalarWhereInput
    data: XOR<FoalTrainingHistoryUpdateManyMutationInput, FoalTrainingHistoryUncheckedUpdateManyWithoutHorseInput>
  }

  export type FoalTrainingHistoryScalarWhereInput = {
    AND?: FoalTrainingHistoryScalarWhereInput | FoalTrainingHistoryScalarWhereInput[]
    OR?: FoalTrainingHistoryScalarWhereInput[]
    NOT?: FoalTrainingHistoryScalarWhereInput | FoalTrainingHistoryScalarWhereInput[]
    id?: StringFilter<"FoalTrainingHistory"> | string
    day?: IntFilter<"FoalTrainingHistory"> | number
    activity?: StringFilter<"FoalTrainingHistory"> | string
    outcome?: StringFilter<"FoalTrainingHistory"> | string
    bondChange?: IntFilter<"FoalTrainingHistory"> | number
    stressChange?: IntFilter<"FoalTrainingHistory"> | number
    horseId?: IntFilter<"FoalTrainingHistory"> | number
    timestamp?: DateTimeFilter<"FoalTrainingHistory"> | Date | string
    createdAt?: DateTimeFilter<"FoalTrainingHistory"> | Date | string
    updatedAt?: DateTimeFilter<"FoalTrainingHistory"> | Date | string
  }

  export type GroomAssignmentUpsertWithWhereUniqueWithoutFoalInput = {
    where: GroomAssignmentWhereUniqueInput
    update: XOR<GroomAssignmentUpdateWithoutFoalInput, GroomAssignmentUncheckedUpdateWithoutFoalInput>
    create: XOR<GroomAssignmentCreateWithoutFoalInput, GroomAssignmentUncheckedCreateWithoutFoalInput>
  }

  export type GroomAssignmentUpdateWithWhereUniqueWithoutFoalInput = {
    where: GroomAssignmentWhereUniqueInput
    data: XOR<GroomAssignmentUpdateWithoutFoalInput, GroomAssignmentUncheckedUpdateWithoutFoalInput>
  }

  export type GroomAssignmentUpdateManyWithWhereWithoutFoalInput = {
    where: GroomAssignmentScalarWhereInput
    data: XOR<GroomAssignmentUpdateManyMutationInput, GroomAssignmentUncheckedUpdateManyWithoutFoalInput>
  }

  export type GroomInteractionUpsertWithWhereUniqueWithoutFoalInput = {
    where: GroomInteractionWhereUniqueInput
    update: XOR<GroomInteractionUpdateWithoutFoalInput, GroomInteractionUncheckedUpdateWithoutFoalInput>
    create: XOR<GroomInteractionCreateWithoutFoalInput, GroomInteractionUncheckedCreateWithoutFoalInput>
  }

  export type GroomInteractionUpdateWithWhereUniqueWithoutFoalInput = {
    where: GroomInteractionWhereUniqueInput
    data: XOR<GroomInteractionUpdateWithoutFoalInput, GroomInteractionUncheckedUpdateWithoutFoalInput>
  }

  export type GroomInteractionUpdateManyWithWhereWithoutFoalInput = {
    where: GroomInteractionScalarWhereInput
    data: XOR<GroomInteractionUpdateManyMutationInput, GroomInteractionUncheckedUpdateManyWithoutFoalInput>
  }

  export type GroomInteractionScalarWhereInput = {
    AND?: GroomInteractionScalarWhereInput | GroomInteractionScalarWhereInput[]
    OR?: GroomInteractionScalarWhereInput[]
    NOT?: GroomInteractionScalarWhereInput | GroomInteractionScalarWhereInput[]
    id?: IntFilter<"GroomInteraction"> | number
    interactionType?: StringFilter<"GroomInteraction"> | string
    duration?: IntFilter<"GroomInteraction"> | number
    bondingChange?: IntFilter<"GroomInteraction"> | number
    stressChange?: IntFilter<"GroomInteraction"> | number
    quality?: StringFilter<"GroomInteraction"> | string
    notes?: StringNullableFilter<"GroomInteraction"> | string | null
    cost?: DecimalFilter<"GroomInteraction"> | Decimal | DecimalJsLike | number | string
    foalId?: IntFilter<"GroomInteraction"> | number
    groomId?: IntFilter<"GroomInteraction"> | number
    assignmentId?: IntNullableFilter<"GroomInteraction"> | number | null
    timestamp?: DateTimeFilter<"GroomInteraction"> | Date | string
    createdAt?: DateTimeFilter<"GroomInteraction"> | Date | string
  }

  export type HorseXpEventUpsertWithWhereUniqueWithoutHorseInput = {
    where: HorseXpEventWhereUniqueInput
    update: XOR<HorseXpEventUpdateWithoutHorseInput, HorseXpEventUncheckedUpdateWithoutHorseInput>
    create: XOR<HorseXpEventCreateWithoutHorseInput, HorseXpEventUncheckedCreateWithoutHorseInput>
  }

  export type HorseXpEventUpdateWithWhereUniqueWithoutHorseInput = {
    where: HorseXpEventWhereUniqueInput
    data: XOR<HorseXpEventUpdateWithoutHorseInput, HorseXpEventUncheckedUpdateWithoutHorseInput>
  }

  export type HorseXpEventUpdateManyWithWhereWithoutHorseInput = {
    where: HorseXpEventScalarWhereInput
    data: XOR<HorseXpEventUpdateManyMutationInput, HorseXpEventUncheckedUpdateManyWithoutHorseInput>
  }

  export type HorseXpEventScalarWhereInput = {
    AND?: HorseXpEventScalarWhereInput | HorseXpEventScalarWhereInput[]
    OR?: HorseXpEventScalarWhereInput[]
    NOT?: HorseXpEventScalarWhereInput | HorseXpEventScalarWhereInput[]
    id?: IntFilter<"HorseXpEvent"> | number
    amount?: IntFilter<"HorseXpEvent"> | number
    reason?: StringFilter<"HorseXpEvent"> | string
    horseId?: IntFilter<"HorseXpEvent"> | number
    timestamp?: DateTimeFilter<"HorseXpEvent"> | Date | string
  }

  export type BreedUpsertWithoutHorsesInput = {
    update: XOR<BreedUpdateWithoutHorsesInput, BreedUncheckedUpdateWithoutHorsesInput>
    create: XOR<BreedCreateWithoutHorsesInput, BreedUncheckedCreateWithoutHorsesInput>
    where?: BreedWhereInput
  }

  export type BreedUpdateToOneWithWhereWithoutHorsesInput = {
    where?: BreedWhereInput
    data: XOR<BreedUpdateWithoutHorsesInput, BreedUncheckedUpdateWithoutHorsesInput>
  }

  export type BreedUpdateWithoutHorsesInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BreedUncheckedUpdateWithoutHorsesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type HorseUpsertWithoutDamOffspringInput = {
    update: XOR<HorseUpdateWithoutDamOffspringInput, HorseUncheckedUpdateWithoutDamOffspringInput>
    create: XOR<HorseCreateWithoutDamOffspringInput, HorseUncheckedCreateWithoutDamOffspringInput>
    where?: HorseWhereInput
  }

  export type HorseUpdateToOneWithWhereWithoutDamOffspringInput = {
    where?: HorseWhereInput
    data: XOR<HorseUpdateWithoutDamOffspringInput, HorseUncheckedUpdateWithoutDamOffspringInput>
  }

  export type HorseUpdateWithoutDamOffspringInput = {
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUpdateManyWithoutHorseNestedInput
    breed?: BreedUpdateOneWithoutHorsesNestedInput
    dam?: HorseUpdateOneWithoutDamOffspringNestedInput
    sire?: HorseUpdateOneWithoutSireOffspringNestedInput
    sireOffspring?: HorseUpdateManyWithoutSireNestedInput
    stable?: StableUpdateOneWithoutHorsesNestedInput
    user?: UserUpdateOneWithoutHorsesNestedInput
    trainingLogs?: TrainingLogUpdateManyWithoutHorseNestedInput
  }

  export type HorseUncheckedUpdateWithoutDamOffspringInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    breedId?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    stableId?: NullableIntFieldUpdateOperationsInput | number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    sireId?: NullableIntFieldUpdateOperationsInput | number | null
    damId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUncheckedUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUncheckedUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUncheckedUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUncheckedUpdateManyWithoutHorseNestedInput
    sireOffspring?: HorseUncheckedUpdateManyWithoutSireNestedInput
    trainingLogs?: TrainingLogUncheckedUpdateManyWithoutHorseNestedInput
  }

  export type HorseUpsertWithWhereUniqueWithoutDamInput = {
    where: HorseWhereUniqueInput
    update: XOR<HorseUpdateWithoutDamInput, HorseUncheckedUpdateWithoutDamInput>
    create: XOR<HorseCreateWithoutDamInput, HorseUncheckedCreateWithoutDamInput>
  }

  export type HorseUpdateWithWhereUniqueWithoutDamInput = {
    where: HorseWhereUniqueInput
    data: XOR<HorseUpdateWithoutDamInput, HorseUncheckedUpdateWithoutDamInput>
  }

  export type HorseUpdateManyWithWhereWithoutDamInput = {
    where: HorseScalarWhereInput
    data: XOR<HorseUpdateManyMutationInput, HorseUncheckedUpdateManyWithoutDamInput>
  }

  export type HorseUpsertWithoutSireOffspringInput = {
    update: XOR<HorseUpdateWithoutSireOffspringInput, HorseUncheckedUpdateWithoutSireOffspringInput>
    create: XOR<HorseCreateWithoutSireOffspringInput, HorseUncheckedCreateWithoutSireOffspringInput>
    where?: HorseWhereInput
  }

  export type HorseUpdateToOneWithWhereWithoutSireOffspringInput = {
    where?: HorseWhereInput
    data: XOR<HorseUpdateWithoutSireOffspringInput, HorseUncheckedUpdateWithoutSireOffspringInput>
  }

  export type HorseUpdateWithoutSireOffspringInput = {
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUpdateManyWithoutHorseNestedInput
    breed?: BreedUpdateOneWithoutHorsesNestedInput
    dam?: HorseUpdateOneWithoutDamOffspringNestedInput
    damOffspring?: HorseUpdateManyWithoutDamNestedInput
    sire?: HorseUpdateOneWithoutSireOffspringNestedInput
    stable?: StableUpdateOneWithoutHorsesNestedInput
    user?: UserUpdateOneWithoutHorsesNestedInput
    trainingLogs?: TrainingLogUpdateManyWithoutHorseNestedInput
  }

  export type HorseUncheckedUpdateWithoutSireOffspringInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    breedId?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    stableId?: NullableIntFieldUpdateOperationsInput | number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    sireId?: NullableIntFieldUpdateOperationsInput | number | null
    damId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUncheckedUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUncheckedUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUncheckedUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUncheckedUpdateManyWithoutHorseNestedInput
    damOffspring?: HorseUncheckedUpdateManyWithoutDamNestedInput
    trainingLogs?: TrainingLogUncheckedUpdateManyWithoutHorseNestedInput
  }

  export type HorseUpsertWithWhereUniqueWithoutSireInput = {
    where: HorseWhereUniqueInput
    update: XOR<HorseUpdateWithoutSireInput, HorseUncheckedUpdateWithoutSireInput>
    create: XOR<HorseCreateWithoutSireInput, HorseUncheckedCreateWithoutSireInput>
  }

  export type HorseUpdateWithWhereUniqueWithoutSireInput = {
    where: HorseWhereUniqueInput
    data: XOR<HorseUpdateWithoutSireInput, HorseUncheckedUpdateWithoutSireInput>
  }

  export type HorseUpdateManyWithWhereWithoutSireInput = {
    where: HorseScalarWhereInput
    data: XOR<HorseUpdateManyMutationInput, HorseUncheckedUpdateManyWithoutSireInput>
  }

  export type StableUpsertWithoutHorsesInput = {
    update: XOR<StableUpdateWithoutHorsesInput, StableUncheckedUpdateWithoutHorsesInput>
    create: XOR<StableCreateWithoutHorsesInput, StableUncheckedCreateWithoutHorsesInput>
    where?: StableWhereInput
  }

  export type StableUpdateToOneWithWhereWithoutHorsesInput = {
    where?: StableWhereInput
    data: XOR<StableUpdateWithoutHorsesInput, StableUncheckedUpdateWithoutHorsesInput>
  }

  export type StableUpdateWithoutHorsesInput = {
    name?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StableUncheckedUpdateWithoutHorsesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUpsertWithoutHorsesInput = {
    update: XOR<UserUpdateWithoutHorsesInput, UserUncheckedUpdateWithoutHorsesInput>
    create: XOR<UserCreateWithoutHorsesInput, UserUncheckedCreateWithoutHorsesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutHorsesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutHorsesInput, UserUncheckedUpdateWithoutHorsesInput>
  }

  export type UserUpdateWithoutHorsesInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    money?: IntFieldUpdateOperationsInput | number
    level?: IntFieldUpdateOperationsInput | number
    xp?: IntFieldUpdateOperationsInput | number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomAssignments?: GroomAssignmentUpdateManyWithoutUserNestedInput
    grooms?: GroomUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    shows?: ShowUpdateManyWithoutHostUserNestedInput
    xpEvents?: XpEventUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutHorsesInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    money?: IntFieldUpdateOperationsInput | number
    level?: IntFieldUpdateOperationsInput | number
    xp?: IntFieldUpdateOperationsInput | number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutUserNestedInput
    grooms?: GroomUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    shows?: ShowUncheckedUpdateManyWithoutHostUserNestedInput
    xpEvents?: XpEventUncheckedUpdateManyWithoutUserNestedInput
  }

  export type TrainingLogUpsertWithWhereUniqueWithoutHorseInput = {
    where: TrainingLogWhereUniqueInput
    update: XOR<TrainingLogUpdateWithoutHorseInput, TrainingLogUncheckedUpdateWithoutHorseInput>
    create: XOR<TrainingLogCreateWithoutHorseInput, TrainingLogUncheckedCreateWithoutHorseInput>
  }

  export type TrainingLogUpdateWithWhereUniqueWithoutHorseInput = {
    where: TrainingLogWhereUniqueInput
    data: XOR<TrainingLogUpdateWithoutHorseInput, TrainingLogUncheckedUpdateWithoutHorseInput>
  }

  export type TrainingLogUpdateManyWithWhereWithoutHorseInput = {
    where: TrainingLogScalarWhereInput
    data: XOR<TrainingLogUpdateManyMutationInput, TrainingLogUncheckedUpdateManyWithoutHorseInput>
  }

  export type TrainingLogScalarWhereInput = {
    AND?: TrainingLogScalarWhereInput | TrainingLogScalarWhereInput[]
    OR?: TrainingLogScalarWhereInput[]
    NOT?: TrainingLogScalarWhereInput | TrainingLogScalarWhereInput[]
    id?: IntFilter<"TrainingLog"> | number
    discipline?: StringFilter<"TrainingLog"> | string
    trainedAt?: DateTimeFilter<"TrainingLog"> | Date | string
    horseId?: IntFilter<"TrainingLog"> | number
  }

  export type GroomAssignmentCreateWithoutGroomInput = {
    startDate?: Date | string
    endDate?: Date | string | null
    isActive?: boolean
    isDefault?: boolean
    priority?: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    foal: HorseCreateNestedOneWithoutGroomAssignmentsInput
    user?: UserCreateNestedOneWithoutGroomAssignmentsInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutAssignmentInput
  }

  export type GroomAssignmentUncheckedCreateWithoutGroomInput = {
    id?: number
    startDate?: Date | string
    endDate?: Date | string | null
    isActive?: boolean
    isDefault?: boolean
    priority?: number
    notes?: string | null
    foalId: number
    userId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutAssignmentInput
  }

  export type GroomAssignmentCreateOrConnectWithoutGroomInput = {
    where: GroomAssignmentWhereUniqueInput
    create: XOR<GroomAssignmentCreateWithoutGroomInput, GroomAssignmentUncheckedCreateWithoutGroomInput>
  }

  export type GroomAssignmentCreateManyGroomInputEnvelope = {
    data: GroomAssignmentCreateManyGroomInput | GroomAssignmentCreateManyGroomInput[]
    skipDuplicates?: boolean
  }

  export type GroomInteractionCreateWithoutGroomInput = {
    interactionType: string
    duration: number
    bondingChange?: number
    stressChange?: number
    quality?: string
    notes?: string | null
    cost?: Decimal | DecimalJsLike | number | string
    timestamp?: Date | string
    createdAt?: Date | string
    assignment?: GroomAssignmentCreateNestedOneWithoutGroomInteractionsInput
    foal: HorseCreateNestedOneWithoutGroomInteractionsInput
  }

  export type GroomInteractionUncheckedCreateWithoutGroomInput = {
    id?: number
    interactionType: string
    duration: number
    bondingChange?: number
    stressChange?: number
    quality?: string
    notes?: string | null
    cost?: Decimal | DecimalJsLike | number | string
    foalId: number
    assignmentId?: number | null
    timestamp?: Date | string
    createdAt?: Date | string
  }

  export type GroomInteractionCreateOrConnectWithoutGroomInput = {
    where: GroomInteractionWhereUniqueInput
    create: XOR<GroomInteractionCreateWithoutGroomInput, GroomInteractionUncheckedCreateWithoutGroomInput>
  }

  export type GroomInteractionCreateManyGroomInputEnvelope = {
    data: GroomInteractionCreateManyGroomInput | GroomInteractionCreateManyGroomInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutGroomsInput = {
    id?: string
    username: string
    email: string
    password: string
    firstName: string
    lastName: string
    money?: number
    level?: number
    xp?: number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutUserInput
    horses?: HorseCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    shows?: ShowCreateNestedManyWithoutHostUserInput
    xpEvents?: XpEventCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutGroomsInput = {
    id?: string
    username: string
    email: string
    password: string
    firstName: string
    lastName: string
    money?: number
    level?: number
    xp?: number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutUserInput
    horses?: HorseUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    shows?: ShowUncheckedCreateNestedManyWithoutHostUserInput
    xpEvents?: XpEventUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutGroomsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutGroomsInput, UserUncheckedCreateWithoutGroomsInput>
  }

  export type GroomAssignmentUpsertWithWhereUniqueWithoutGroomInput = {
    where: GroomAssignmentWhereUniqueInput
    update: XOR<GroomAssignmentUpdateWithoutGroomInput, GroomAssignmentUncheckedUpdateWithoutGroomInput>
    create: XOR<GroomAssignmentCreateWithoutGroomInput, GroomAssignmentUncheckedCreateWithoutGroomInput>
  }

  export type GroomAssignmentUpdateWithWhereUniqueWithoutGroomInput = {
    where: GroomAssignmentWhereUniqueInput
    data: XOR<GroomAssignmentUpdateWithoutGroomInput, GroomAssignmentUncheckedUpdateWithoutGroomInput>
  }

  export type GroomAssignmentUpdateManyWithWhereWithoutGroomInput = {
    where: GroomAssignmentScalarWhereInput
    data: XOR<GroomAssignmentUpdateManyMutationInput, GroomAssignmentUncheckedUpdateManyWithoutGroomInput>
  }

  export type GroomInteractionUpsertWithWhereUniqueWithoutGroomInput = {
    where: GroomInteractionWhereUniqueInput
    update: XOR<GroomInteractionUpdateWithoutGroomInput, GroomInteractionUncheckedUpdateWithoutGroomInput>
    create: XOR<GroomInteractionCreateWithoutGroomInput, GroomInteractionUncheckedCreateWithoutGroomInput>
  }

  export type GroomInteractionUpdateWithWhereUniqueWithoutGroomInput = {
    where: GroomInteractionWhereUniqueInput
    data: XOR<GroomInteractionUpdateWithoutGroomInput, GroomInteractionUncheckedUpdateWithoutGroomInput>
  }

  export type GroomInteractionUpdateManyWithWhereWithoutGroomInput = {
    where: GroomInteractionScalarWhereInput
    data: XOR<GroomInteractionUpdateManyMutationInput, GroomInteractionUncheckedUpdateManyWithoutGroomInput>
  }

  export type UserUpsertWithoutGroomsInput = {
    update: XOR<UserUpdateWithoutGroomsInput, UserUncheckedUpdateWithoutGroomsInput>
    create: XOR<UserCreateWithoutGroomsInput, UserUncheckedCreateWithoutGroomsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutGroomsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutGroomsInput, UserUncheckedUpdateWithoutGroomsInput>
  }

  export type UserUpdateWithoutGroomsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    money?: IntFieldUpdateOperationsInput | number
    level?: IntFieldUpdateOperationsInput | number
    xp?: IntFieldUpdateOperationsInput | number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomAssignments?: GroomAssignmentUpdateManyWithoutUserNestedInput
    horses?: HorseUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    shows?: ShowUpdateManyWithoutHostUserNestedInput
    xpEvents?: XpEventUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutGroomsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    money?: IntFieldUpdateOperationsInput | number
    level?: IntFieldUpdateOperationsInput | number
    xp?: IntFieldUpdateOperationsInput | number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutUserNestedInput
    horses?: HorseUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    shows?: ShowUncheckedUpdateManyWithoutHostUserNestedInput
    xpEvents?: XpEventUncheckedUpdateManyWithoutUserNestedInput
  }

  export type HorseCreateWithoutGroomAssignmentsInput = {
    name: string
    sex: string
    dateOfBirth: Date | string
    ownerId?: string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryCreateNestedManyWithoutHorseInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventCreateNestedManyWithoutHorseInput
    breed?: BreedCreateNestedOneWithoutHorsesInput
    dam?: HorseCreateNestedOneWithoutDamOffspringInput
    damOffspring?: HorseCreateNestedManyWithoutDamInput
    sire?: HorseCreateNestedOneWithoutSireOffspringInput
    sireOffspring?: HorseCreateNestedManyWithoutSireInput
    stable?: StableCreateNestedOneWithoutHorsesInput
    user?: UserCreateNestedOneWithoutHorsesInput
    trainingLogs?: TrainingLogCreateNestedManyWithoutHorseInput
  }

  export type HorseUncheckedCreateWithoutGroomAssignmentsInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    breedId?: number | null
    ownerId?: string | null
    stableId?: number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    sireId?: number | null
    damId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    userId?: string | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultUncheckedCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityUncheckedCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentUncheckedCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedCreateNestedManyWithoutHorseInput
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventUncheckedCreateNestedManyWithoutHorseInput
    damOffspring?: HorseUncheckedCreateNestedManyWithoutDamInput
    sireOffspring?: HorseUncheckedCreateNestedManyWithoutSireInput
    trainingLogs?: TrainingLogUncheckedCreateNestedManyWithoutHorseInput
  }

  export type HorseCreateOrConnectWithoutGroomAssignmentsInput = {
    where: HorseWhereUniqueInput
    create: XOR<HorseCreateWithoutGroomAssignmentsInput, HorseUncheckedCreateWithoutGroomAssignmentsInput>
  }

  export type GroomCreateWithoutGroomAssignmentsInput = {
    name: string
    speciality: string
    experience?: number
    skillLevel?: string
    personality: string
    sessionRate?: Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: string | null
    imageUrl?: string | null
    isActive?: boolean
    hiredDate?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    groomInteractions?: GroomInteractionCreateNestedManyWithoutGroomInput
    user?: UserCreateNestedOneWithoutGroomsInput
  }

  export type GroomUncheckedCreateWithoutGroomAssignmentsInput = {
    id?: number
    name: string
    speciality: string
    experience?: number
    skillLevel?: string
    personality: string
    sessionRate?: Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: string | null
    imageUrl?: string | null
    isActive?: boolean
    hiredDate?: Date | string
    userId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutGroomInput
  }

  export type GroomCreateOrConnectWithoutGroomAssignmentsInput = {
    where: GroomWhereUniqueInput
    create: XOR<GroomCreateWithoutGroomAssignmentsInput, GroomUncheckedCreateWithoutGroomAssignmentsInput>
  }

  export type UserCreateWithoutGroomAssignmentsInput = {
    id?: string
    username: string
    email: string
    password: string
    firstName: string
    lastName: string
    money?: number
    level?: number
    xp?: number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    grooms?: GroomCreateNestedManyWithoutUserInput
    horses?: HorseCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    shows?: ShowCreateNestedManyWithoutHostUserInput
    xpEvents?: XpEventCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutGroomAssignmentsInput = {
    id?: string
    username: string
    email: string
    password: string
    firstName: string
    lastName: string
    money?: number
    level?: number
    xp?: number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    grooms?: GroomUncheckedCreateNestedManyWithoutUserInput
    horses?: HorseUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    shows?: ShowUncheckedCreateNestedManyWithoutHostUserInput
    xpEvents?: XpEventUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutGroomAssignmentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutGroomAssignmentsInput, UserUncheckedCreateWithoutGroomAssignmentsInput>
  }

  export type GroomInteractionCreateWithoutAssignmentInput = {
    interactionType: string
    duration: number
    bondingChange?: number
    stressChange?: number
    quality?: string
    notes?: string | null
    cost?: Decimal | DecimalJsLike | number | string
    timestamp?: Date | string
    createdAt?: Date | string
    foal: HorseCreateNestedOneWithoutGroomInteractionsInput
    groom: GroomCreateNestedOneWithoutGroomInteractionsInput
  }

  export type GroomInteractionUncheckedCreateWithoutAssignmentInput = {
    id?: number
    interactionType: string
    duration: number
    bondingChange?: number
    stressChange?: number
    quality?: string
    notes?: string | null
    cost?: Decimal | DecimalJsLike | number | string
    foalId: number
    groomId: number
    timestamp?: Date | string
    createdAt?: Date | string
  }

  export type GroomInteractionCreateOrConnectWithoutAssignmentInput = {
    where: GroomInteractionWhereUniqueInput
    create: XOR<GroomInteractionCreateWithoutAssignmentInput, GroomInteractionUncheckedCreateWithoutAssignmentInput>
  }

  export type GroomInteractionCreateManyAssignmentInputEnvelope = {
    data: GroomInteractionCreateManyAssignmentInput | GroomInteractionCreateManyAssignmentInput[]
    skipDuplicates?: boolean
  }

  export type HorseUpsertWithoutGroomAssignmentsInput = {
    update: XOR<HorseUpdateWithoutGroomAssignmentsInput, HorseUncheckedUpdateWithoutGroomAssignmentsInput>
    create: XOR<HorseCreateWithoutGroomAssignmentsInput, HorseUncheckedCreateWithoutGroomAssignmentsInput>
    where?: HorseWhereInput
  }

  export type HorseUpdateToOneWithWhereWithoutGroomAssignmentsInput = {
    where?: HorseWhereInput
    data: XOR<HorseUpdateWithoutGroomAssignmentsInput, HorseUncheckedUpdateWithoutGroomAssignmentsInput>
  }

  export type HorseUpdateWithoutGroomAssignmentsInput = {
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUpdateManyWithoutHorseNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUpdateManyWithoutHorseNestedInput
    breed?: BreedUpdateOneWithoutHorsesNestedInput
    dam?: HorseUpdateOneWithoutDamOffspringNestedInput
    damOffspring?: HorseUpdateManyWithoutDamNestedInput
    sire?: HorseUpdateOneWithoutSireOffspringNestedInput
    sireOffspring?: HorseUpdateManyWithoutSireNestedInput
    stable?: StableUpdateOneWithoutHorsesNestedInput
    user?: UserUpdateOneWithoutHorsesNestedInput
    trainingLogs?: TrainingLogUpdateManyWithoutHorseNestedInput
  }

  export type HorseUncheckedUpdateWithoutGroomAssignmentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    breedId?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    stableId?: NullableIntFieldUpdateOperationsInput | number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    sireId?: NullableIntFieldUpdateOperationsInput | number | null
    damId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUncheckedUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUncheckedUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUncheckedUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedUpdateManyWithoutHorseNestedInput
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUncheckedUpdateManyWithoutHorseNestedInput
    damOffspring?: HorseUncheckedUpdateManyWithoutDamNestedInput
    sireOffspring?: HorseUncheckedUpdateManyWithoutSireNestedInput
    trainingLogs?: TrainingLogUncheckedUpdateManyWithoutHorseNestedInput
  }

  export type GroomUpsertWithoutGroomAssignmentsInput = {
    update: XOR<GroomUpdateWithoutGroomAssignmentsInput, GroomUncheckedUpdateWithoutGroomAssignmentsInput>
    create: XOR<GroomCreateWithoutGroomAssignmentsInput, GroomUncheckedCreateWithoutGroomAssignmentsInput>
    where?: GroomWhereInput
  }

  export type GroomUpdateToOneWithWhereWithoutGroomAssignmentsInput = {
    where?: GroomWhereInput
    data: XOR<GroomUpdateWithoutGroomAssignmentsInput, GroomUncheckedUpdateWithoutGroomAssignmentsInput>
  }

  export type GroomUpdateWithoutGroomAssignmentsInput = {
    name?: StringFieldUpdateOperationsInput | string
    speciality?: StringFieldUpdateOperationsInput | string
    experience?: IntFieldUpdateOperationsInput | number
    skillLevel?: StringFieldUpdateOperationsInput | string
    personality?: StringFieldUpdateOperationsInput | string
    sessionRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hiredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomInteractions?: GroomInteractionUpdateManyWithoutGroomNestedInput
    user?: UserUpdateOneWithoutGroomsNestedInput
  }

  export type GroomUncheckedUpdateWithoutGroomAssignmentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    speciality?: StringFieldUpdateOperationsInput | string
    experience?: IntFieldUpdateOperationsInput | number
    skillLevel?: StringFieldUpdateOperationsInput | string
    personality?: StringFieldUpdateOperationsInput | string
    sessionRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hiredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutGroomNestedInput
  }

  export type UserUpsertWithoutGroomAssignmentsInput = {
    update: XOR<UserUpdateWithoutGroomAssignmentsInput, UserUncheckedUpdateWithoutGroomAssignmentsInput>
    create: XOR<UserCreateWithoutGroomAssignmentsInput, UserUncheckedCreateWithoutGroomAssignmentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutGroomAssignmentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutGroomAssignmentsInput, UserUncheckedUpdateWithoutGroomAssignmentsInput>
  }

  export type UserUpdateWithoutGroomAssignmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    money?: IntFieldUpdateOperationsInput | number
    level?: IntFieldUpdateOperationsInput | number
    xp?: IntFieldUpdateOperationsInput | number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grooms?: GroomUpdateManyWithoutUserNestedInput
    horses?: HorseUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    shows?: ShowUpdateManyWithoutHostUserNestedInput
    xpEvents?: XpEventUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutGroomAssignmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    money?: IntFieldUpdateOperationsInput | number
    level?: IntFieldUpdateOperationsInput | number
    xp?: IntFieldUpdateOperationsInput | number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grooms?: GroomUncheckedUpdateManyWithoutUserNestedInput
    horses?: HorseUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    shows?: ShowUncheckedUpdateManyWithoutHostUserNestedInput
    xpEvents?: XpEventUncheckedUpdateManyWithoutUserNestedInput
  }

  export type GroomInteractionUpsertWithWhereUniqueWithoutAssignmentInput = {
    where: GroomInteractionWhereUniqueInput
    update: XOR<GroomInteractionUpdateWithoutAssignmentInput, GroomInteractionUncheckedUpdateWithoutAssignmentInput>
    create: XOR<GroomInteractionCreateWithoutAssignmentInput, GroomInteractionUncheckedCreateWithoutAssignmentInput>
  }

  export type GroomInteractionUpdateWithWhereUniqueWithoutAssignmentInput = {
    where: GroomInteractionWhereUniqueInput
    data: XOR<GroomInteractionUpdateWithoutAssignmentInput, GroomInteractionUncheckedUpdateWithoutAssignmentInput>
  }

  export type GroomInteractionUpdateManyWithWhereWithoutAssignmentInput = {
    where: GroomInteractionScalarWhereInput
    data: XOR<GroomInteractionUpdateManyMutationInput, GroomInteractionUncheckedUpdateManyWithoutAssignmentInput>
  }

  export type GroomAssignmentCreateWithoutGroomInteractionsInput = {
    startDate?: Date | string
    endDate?: Date | string | null
    isActive?: boolean
    isDefault?: boolean
    priority?: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    foal: HorseCreateNestedOneWithoutGroomAssignmentsInput
    groom: GroomCreateNestedOneWithoutGroomAssignmentsInput
    user?: UserCreateNestedOneWithoutGroomAssignmentsInput
  }

  export type GroomAssignmentUncheckedCreateWithoutGroomInteractionsInput = {
    id?: number
    startDate?: Date | string
    endDate?: Date | string | null
    isActive?: boolean
    isDefault?: boolean
    priority?: number
    notes?: string | null
    foalId: number
    groomId: number
    userId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GroomAssignmentCreateOrConnectWithoutGroomInteractionsInput = {
    where: GroomAssignmentWhereUniqueInput
    create: XOR<GroomAssignmentCreateWithoutGroomInteractionsInput, GroomAssignmentUncheckedCreateWithoutGroomInteractionsInput>
  }

  export type HorseCreateWithoutGroomInteractionsInput = {
    name: string
    sex: string
    dateOfBirth: Date | string
    ownerId?: string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventCreateNestedManyWithoutHorseInput
    breed?: BreedCreateNestedOneWithoutHorsesInput
    dam?: HorseCreateNestedOneWithoutDamOffspringInput
    damOffspring?: HorseCreateNestedManyWithoutDamInput
    sire?: HorseCreateNestedOneWithoutSireOffspringInput
    sireOffspring?: HorseCreateNestedManyWithoutSireInput
    stable?: StableCreateNestedOneWithoutHorsesInput
    user?: UserCreateNestedOneWithoutHorsesInput
    trainingLogs?: TrainingLogCreateNestedManyWithoutHorseInput
  }

  export type HorseUncheckedCreateWithoutGroomInteractionsInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    breedId?: number | null
    ownerId?: string | null
    stableId?: number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    sireId?: number | null
    damId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    userId?: string | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultUncheckedCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityUncheckedCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentUncheckedCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventUncheckedCreateNestedManyWithoutHorseInput
    damOffspring?: HorseUncheckedCreateNestedManyWithoutDamInput
    sireOffspring?: HorseUncheckedCreateNestedManyWithoutSireInput
    trainingLogs?: TrainingLogUncheckedCreateNestedManyWithoutHorseInput
  }

  export type HorseCreateOrConnectWithoutGroomInteractionsInput = {
    where: HorseWhereUniqueInput
    create: XOR<HorseCreateWithoutGroomInteractionsInput, HorseUncheckedCreateWithoutGroomInteractionsInput>
  }

  export type GroomCreateWithoutGroomInteractionsInput = {
    name: string
    speciality: string
    experience?: number
    skillLevel?: string
    personality: string
    sessionRate?: Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: string | null
    imageUrl?: string | null
    isActive?: boolean
    hiredDate?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutGroomInput
    user?: UserCreateNestedOneWithoutGroomsInput
  }

  export type GroomUncheckedCreateWithoutGroomInteractionsInput = {
    id?: number
    name: string
    speciality: string
    experience?: number
    skillLevel?: string
    personality: string
    sessionRate?: Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: string | null
    imageUrl?: string | null
    isActive?: boolean
    hiredDate?: Date | string
    userId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutGroomInput
  }

  export type GroomCreateOrConnectWithoutGroomInteractionsInput = {
    where: GroomWhereUniqueInput
    create: XOR<GroomCreateWithoutGroomInteractionsInput, GroomUncheckedCreateWithoutGroomInteractionsInput>
  }

  export type GroomAssignmentUpsertWithoutGroomInteractionsInput = {
    update: XOR<GroomAssignmentUpdateWithoutGroomInteractionsInput, GroomAssignmentUncheckedUpdateWithoutGroomInteractionsInput>
    create: XOR<GroomAssignmentCreateWithoutGroomInteractionsInput, GroomAssignmentUncheckedCreateWithoutGroomInteractionsInput>
    where?: GroomAssignmentWhereInput
  }

  export type GroomAssignmentUpdateToOneWithWhereWithoutGroomInteractionsInput = {
    where?: GroomAssignmentWhereInput
    data: XOR<GroomAssignmentUpdateWithoutGroomInteractionsInput, GroomAssignmentUncheckedUpdateWithoutGroomInteractionsInput>
  }

  export type GroomAssignmentUpdateWithoutGroomInteractionsInput = {
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    foal?: HorseUpdateOneRequiredWithoutGroomAssignmentsNestedInput
    groom?: GroomUpdateOneRequiredWithoutGroomAssignmentsNestedInput
    user?: UserUpdateOneWithoutGroomAssignmentsNestedInput
  }

  export type GroomAssignmentUncheckedUpdateWithoutGroomInteractionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    foalId?: IntFieldUpdateOperationsInput | number
    groomId?: IntFieldUpdateOperationsInput | number
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HorseUpsertWithoutGroomInteractionsInput = {
    update: XOR<HorseUpdateWithoutGroomInteractionsInput, HorseUncheckedUpdateWithoutGroomInteractionsInput>
    create: XOR<HorseCreateWithoutGroomInteractionsInput, HorseUncheckedCreateWithoutGroomInteractionsInput>
    where?: HorseWhereInput
  }

  export type HorseUpdateToOneWithWhereWithoutGroomInteractionsInput = {
    where?: HorseWhereInput
    data: XOR<HorseUpdateWithoutGroomInteractionsInput, HorseUncheckedUpdateWithoutGroomInteractionsInput>
  }

  export type HorseUpdateWithoutGroomInteractionsInput = {
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUpdateManyWithoutHorseNestedInput
    breed?: BreedUpdateOneWithoutHorsesNestedInput
    dam?: HorseUpdateOneWithoutDamOffspringNestedInput
    damOffspring?: HorseUpdateManyWithoutDamNestedInput
    sire?: HorseUpdateOneWithoutSireOffspringNestedInput
    sireOffspring?: HorseUpdateManyWithoutSireNestedInput
    stable?: StableUpdateOneWithoutHorsesNestedInput
    user?: UserUpdateOneWithoutHorsesNestedInput
    trainingLogs?: TrainingLogUpdateManyWithoutHorseNestedInput
  }

  export type HorseUncheckedUpdateWithoutGroomInteractionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    breedId?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    stableId?: NullableIntFieldUpdateOperationsInput | number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    sireId?: NullableIntFieldUpdateOperationsInput | number | null
    damId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUncheckedUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUncheckedUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUncheckedUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUncheckedUpdateManyWithoutHorseNestedInput
    damOffspring?: HorseUncheckedUpdateManyWithoutDamNestedInput
    sireOffspring?: HorseUncheckedUpdateManyWithoutSireNestedInput
    trainingLogs?: TrainingLogUncheckedUpdateManyWithoutHorseNestedInput
  }

  export type GroomUpsertWithoutGroomInteractionsInput = {
    update: XOR<GroomUpdateWithoutGroomInteractionsInput, GroomUncheckedUpdateWithoutGroomInteractionsInput>
    create: XOR<GroomCreateWithoutGroomInteractionsInput, GroomUncheckedCreateWithoutGroomInteractionsInput>
    where?: GroomWhereInput
  }

  export type GroomUpdateToOneWithWhereWithoutGroomInteractionsInput = {
    where?: GroomWhereInput
    data: XOR<GroomUpdateWithoutGroomInteractionsInput, GroomUncheckedUpdateWithoutGroomInteractionsInput>
  }

  export type GroomUpdateWithoutGroomInteractionsInput = {
    name?: StringFieldUpdateOperationsInput | string
    speciality?: StringFieldUpdateOperationsInput | string
    experience?: IntFieldUpdateOperationsInput | number
    skillLevel?: StringFieldUpdateOperationsInput | string
    personality?: StringFieldUpdateOperationsInput | string
    sessionRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hiredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomAssignments?: GroomAssignmentUpdateManyWithoutGroomNestedInput
    user?: UserUpdateOneWithoutGroomsNestedInput
  }

  export type GroomUncheckedUpdateWithoutGroomInteractionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    speciality?: StringFieldUpdateOperationsInput | string
    experience?: IntFieldUpdateOperationsInput | number
    skillLevel?: StringFieldUpdateOperationsInput | string
    personality?: StringFieldUpdateOperationsInput | string
    sessionRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hiredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutGroomNestedInput
  }

  export type CompetitionResultCreateWithoutShowInput = {
    score: Decimal | DecimalJsLike | number | string
    placement?: string | null
    discipline: string
    runDate: Date | string
    showName: string
    prizeWon?: Decimal | DecimalJsLike | number | string | null
    statGains?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    horse: HorseCreateNestedOneWithoutCompetitionResultsInput
  }

  export type CompetitionResultUncheckedCreateWithoutShowInput = {
    id?: number
    score: Decimal | DecimalJsLike | number | string
    placement?: string | null
    discipline: string
    runDate: Date | string
    showName: string
    prizeWon?: Decimal | DecimalJsLike | number | string | null
    statGains?: NullableJsonNullValueInput | InputJsonValue
    horseId: number
    createdAt?: Date | string
  }

  export type CompetitionResultCreateOrConnectWithoutShowInput = {
    where: CompetitionResultWhereUniqueInput
    create: XOR<CompetitionResultCreateWithoutShowInput, CompetitionResultUncheckedCreateWithoutShowInput>
  }

  export type CompetitionResultCreateManyShowInputEnvelope = {
    data: CompetitionResultCreateManyShowInput | CompetitionResultCreateManyShowInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutShowsInput = {
    id?: string
    username: string
    email: string
    password: string
    firstName: string
    lastName: string
    money?: number
    level?: number
    xp?: number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutUserInput
    grooms?: GroomCreateNestedManyWithoutUserInput
    horses?: HorseCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    xpEvents?: XpEventCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutShowsInput = {
    id?: string
    username: string
    email: string
    password: string
    firstName: string
    lastName: string
    money?: number
    level?: number
    xp?: number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutUserInput
    grooms?: GroomUncheckedCreateNestedManyWithoutUserInput
    horses?: HorseUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    xpEvents?: XpEventUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutShowsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutShowsInput, UserUncheckedCreateWithoutShowsInput>
  }

  export type CompetitionResultUpsertWithWhereUniqueWithoutShowInput = {
    where: CompetitionResultWhereUniqueInput
    update: XOR<CompetitionResultUpdateWithoutShowInput, CompetitionResultUncheckedUpdateWithoutShowInput>
    create: XOR<CompetitionResultCreateWithoutShowInput, CompetitionResultUncheckedCreateWithoutShowInput>
  }

  export type CompetitionResultUpdateWithWhereUniqueWithoutShowInput = {
    where: CompetitionResultWhereUniqueInput
    data: XOR<CompetitionResultUpdateWithoutShowInput, CompetitionResultUncheckedUpdateWithoutShowInput>
  }

  export type CompetitionResultUpdateManyWithWhereWithoutShowInput = {
    where: CompetitionResultScalarWhereInput
    data: XOR<CompetitionResultUpdateManyMutationInput, CompetitionResultUncheckedUpdateManyWithoutShowInput>
  }

  export type UserUpsertWithoutShowsInput = {
    update: XOR<UserUpdateWithoutShowsInput, UserUncheckedUpdateWithoutShowsInput>
    create: XOR<UserCreateWithoutShowsInput, UserUncheckedCreateWithoutShowsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutShowsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutShowsInput, UserUncheckedUpdateWithoutShowsInput>
  }

  export type UserUpdateWithoutShowsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    money?: IntFieldUpdateOperationsInput | number
    level?: IntFieldUpdateOperationsInput | number
    xp?: IntFieldUpdateOperationsInput | number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomAssignments?: GroomAssignmentUpdateManyWithoutUserNestedInput
    grooms?: GroomUpdateManyWithoutUserNestedInput
    horses?: HorseUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    xpEvents?: XpEventUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutShowsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    money?: IntFieldUpdateOperationsInput | number
    level?: IntFieldUpdateOperationsInput | number
    xp?: IntFieldUpdateOperationsInput | number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutUserNestedInput
    grooms?: GroomUncheckedUpdateManyWithoutUserNestedInput
    horses?: HorseUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    xpEvents?: XpEventUncheckedUpdateManyWithoutUserNestedInput
  }

  export type HorseCreateWithoutCompetitionResultsInput = {
    name: string
    sex: string
    dateOfBirth: Date | string
    ownerId?: string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    foalActivities?: FoalActivityCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventCreateNestedManyWithoutHorseInput
    breed?: BreedCreateNestedOneWithoutHorsesInput
    dam?: HorseCreateNestedOneWithoutDamOffspringInput
    damOffspring?: HorseCreateNestedManyWithoutDamInput
    sire?: HorseCreateNestedOneWithoutSireOffspringInput
    sireOffspring?: HorseCreateNestedManyWithoutSireInput
    stable?: StableCreateNestedOneWithoutHorsesInput
    user?: UserCreateNestedOneWithoutHorsesInput
    trainingLogs?: TrainingLogCreateNestedManyWithoutHorseInput
  }

  export type HorseUncheckedCreateWithoutCompetitionResultsInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    breedId?: number | null
    ownerId?: string | null
    stableId?: number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    sireId?: number | null
    damId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    userId?: string | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    foalActivities?: FoalActivityUncheckedCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentUncheckedCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventUncheckedCreateNestedManyWithoutHorseInput
    damOffspring?: HorseUncheckedCreateNestedManyWithoutDamInput
    sireOffspring?: HorseUncheckedCreateNestedManyWithoutSireInput
    trainingLogs?: TrainingLogUncheckedCreateNestedManyWithoutHorseInput
  }

  export type HorseCreateOrConnectWithoutCompetitionResultsInput = {
    where: HorseWhereUniqueInput
    create: XOR<HorseCreateWithoutCompetitionResultsInput, HorseUncheckedCreateWithoutCompetitionResultsInput>
  }

  export type ShowCreateWithoutCompetitionResultsInput = {
    name: string
    discipline: string
    levelMin: number
    levelMax: number
    entryFee: number
    prize: number
    runDate: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    hostUser?: UserCreateNestedOneWithoutShowsInput
  }

  export type ShowUncheckedCreateWithoutCompetitionResultsInput = {
    id?: number
    name: string
    discipline: string
    levelMin: number
    levelMax: number
    entryFee: number
    prize: number
    runDate: Date | string
    hostUserId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShowCreateOrConnectWithoutCompetitionResultsInput = {
    where: ShowWhereUniqueInput
    create: XOR<ShowCreateWithoutCompetitionResultsInput, ShowUncheckedCreateWithoutCompetitionResultsInput>
  }

  export type HorseUpsertWithoutCompetitionResultsInput = {
    update: XOR<HorseUpdateWithoutCompetitionResultsInput, HorseUncheckedUpdateWithoutCompetitionResultsInput>
    create: XOR<HorseCreateWithoutCompetitionResultsInput, HorseUncheckedCreateWithoutCompetitionResultsInput>
    where?: HorseWhereInput
  }

  export type HorseUpdateToOneWithWhereWithoutCompetitionResultsInput = {
    where?: HorseWhereInput
    data: XOR<HorseUpdateWithoutCompetitionResultsInput, HorseUncheckedUpdateWithoutCompetitionResultsInput>
  }

  export type HorseUpdateWithoutCompetitionResultsInput = {
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foalActivities?: FoalActivityUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUpdateManyWithoutHorseNestedInput
    breed?: BreedUpdateOneWithoutHorsesNestedInput
    dam?: HorseUpdateOneWithoutDamOffspringNestedInput
    damOffspring?: HorseUpdateManyWithoutDamNestedInput
    sire?: HorseUpdateOneWithoutSireOffspringNestedInput
    sireOffspring?: HorseUpdateManyWithoutSireNestedInput
    stable?: StableUpdateOneWithoutHorsesNestedInput
    user?: UserUpdateOneWithoutHorsesNestedInput
    trainingLogs?: TrainingLogUpdateManyWithoutHorseNestedInput
  }

  export type HorseUncheckedUpdateWithoutCompetitionResultsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    breedId?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    stableId?: NullableIntFieldUpdateOperationsInput | number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    sireId?: NullableIntFieldUpdateOperationsInput | number | null
    damId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foalActivities?: FoalActivityUncheckedUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUncheckedUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUncheckedUpdateManyWithoutHorseNestedInput
    damOffspring?: HorseUncheckedUpdateManyWithoutDamNestedInput
    sireOffspring?: HorseUncheckedUpdateManyWithoutSireNestedInput
    trainingLogs?: TrainingLogUncheckedUpdateManyWithoutHorseNestedInput
  }

  export type ShowUpsertWithoutCompetitionResultsInput = {
    update: XOR<ShowUpdateWithoutCompetitionResultsInput, ShowUncheckedUpdateWithoutCompetitionResultsInput>
    create: XOR<ShowCreateWithoutCompetitionResultsInput, ShowUncheckedCreateWithoutCompetitionResultsInput>
    where?: ShowWhereInput
  }

  export type ShowUpdateToOneWithWhereWithoutCompetitionResultsInput = {
    where?: ShowWhereInput
    data: XOR<ShowUpdateWithoutCompetitionResultsInput, ShowUncheckedUpdateWithoutCompetitionResultsInput>
  }

  export type ShowUpdateWithoutCompetitionResultsInput = {
    name?: StringFieldUpdateOperationsInput | string
    discipline?: StringFieldUpdateOperationsInput | string
    levelMin?: IntFieldUpdateOperationsInput | number
    levelMax?: IntFieldUpdateOperationsInput | number
    entryFee?: IntFieldUpdateOperationsInput | number
    prize?: IntFieldUpdateOperationsInput | number
    runDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    hostUser?: UserUpdateOneWithoutShowsNestedInput
  }

  export type ShowUncheckedUpdateWithoutCompetitionResultsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    discipline?: StringFieldUpdateOperationsInput | string
    levelMin?: IntFieldUpdateOperationsInput | number
    levelMax?: IntFieldUpdateOperationsInput | number
    entryFee?: IntFieldUpdateOperationsInput | number
    prize?: IntFieldUpdateOperationsInput | number
    runDate?: DateTimeFieldUpdateOperationsInput | Date | string
    hostUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HorseCreateWithoutTrainingLogsInput = {
    name: string
    sex: string
    dateOfBirth: Date | string
    ownerId?: string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventCreateNestedManyWithoutHorseInput
    breed?: BreedCreateNestedOneWithoutHorsesInput
    dam?: HorseCreateNestedOneWithoutDamOffspringInput
    damOffspring?: HorseCreateNestedManyWithoutDamInput
    sire?: HorseCreateNestedOneWithoutSireOffspringInput
    sireOffspring?: HorseCreateNestedManyWithoutSireInput
    stable?: StableCreateNestedOneWithoutHorsesInput
    user?: UserCreateNestedOneWithoutHorsesInput
  }

  export type HorseUncheckedCreateWithoutTrainingLogsInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    breedId?: number | null
    ownerId?: string | null
    stableId?: number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    sireId?: number | null
    damId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    userId?: string | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultUncheckedCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityUncheckedCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentUncheckedCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventUncheckedCreateNestedManyWithoutHorseInput
    damOffspring?: HorseUncheckedCreateNestedManyWithoutDamInput
    sireOffspring?: HorseUncheckedCreateNestedManyWithoutSireInput
  }

  export type HorseCreateOrConnectWithoutTrainingLogsInput = {
    where: HorseWhereUniqueInput
    create: XOR<HorseCreateWithoutTrainingLogsInput, HorseUncheckedCreateWithoutTrainingLogsInput>
  }

  export type HorseUpsertWithoutTrainingLogsInput = {
    update: XOR<HorseUpdateWithoutTrainingLogsInput, HorseUncheckedUpdateWithoutTrainingLogsInput>
    create: XOR<HorseCreateWithoutTrainingLogsInput, HorseUncheckedCreateWithoutTrainingLogsInput>
    where?: HorseWhereInput
  }

  export type HorseUpdateToOneWithWhereWithoutTrainingLogsInput = {
    where?: HorseWhereInput
    data: XOR<HorseUpdateWithoutTrainingLogsInput, HorseUncheckedUpdateWithoutTrainingLogsInput>
  }

  export type HorseUpdateWithoutTrainingLogsInput = {
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUpdateManyWithoutHorseNestedInput
    breed?: BreedUpdateOneWithoutHorsesNestedInput
    dam?: HorseUpdateOneWithoutDamOffspringNestedInput
    damOffspring?: HorseUpdateManyWithoutDamNestedInput
    sire?: HorseUpdateOneWithoutSireOffspringNestedInput
    sireOffspring?: HorseUpdateManyWithoutSireNestedInput
    stable?: StableUpdateOneWithoutHorsesNestedInput
    user?: UserUpdateOneWithoutHorsesNestedInput
  }

  export type HorseUncheckedUpdateWithoutTrainingLogsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    breedId?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    stableId?: NullableIntFieldUpdateOperationsInput | number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    sireId?: NullableIntFieldUpdateOperationsInput | number | null
    damId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUncheckedUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUncheckedUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUncheckedUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUncheckedUpdateManyWithoutHorseNestedInput
    damOffspring?: HorseUncheckedUpdateManyWithoutDamNestedInput
    sireOffspring?: HorseUncheckedUpdateManyWithoutSireNestedInput
  }

  export type HorseCreateWithoutFoalDevelopmentInput = {
    name: string
    sex: string
    dateOfBirth: Date | string
    ownerId?: string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityCreateNestedManyWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventCreateNestedManyWithoutHorseInput
    breed?: BreedCreateNestedOneWithoutHorsesInput
    dam?: HorseCreateNestedOneWithoutDamOffspringInput
    damOffspring?: HorseCreateNestedManyWithoutDamInput
    sire?: HorseCreateNestedOneWithoutSireOffspringInput
    sireOffspring?: HorseCreateNestedManyWithoutSireInput
    stable?: StableCreateNestedOneWithoutHorsesInput
    user?: UserCreateNestedOneWithoutHorsesInput
    trainingLogs?: TrainingLogCreateNestedManyWithoutHorseInput
  }

  export type HorseUncheckedCreateWithoutFoalDevelopmentInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    breedId?: number | null
    ownerId?: string | null
    stableId?: number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    sireId?: number | null
    damId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    userId?: string | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultUncheckedCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityUncheckedCreateNestedManyWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventUncheckedCreateNestedManyWithoutHorseInput
    damOffspring?: HorseUncheckedCreateNestedManyWithoutDamInput
    sireOffspring?: HorseUncheckedCreateNestedManyWithoutSireInput
    trainingLogs?: TrainingLogUncheckedCreateNestedManyWithoutHorseInput
  }

  export type HorseCreateOrConnectWithoutFoalDevelopmentInput = {
    where: HorseWhereUniqueInput
    create: XOR<HorseCreateWithoutFoalDevelopmentInput, HorseUncheckedCreateWithoutFoalDevelopmentInput>
  }

  export type HorseUpsertWithoutFoalDevelopmentInput = {
    update: XOR<HorseUpdateWithoutFoalDevelopmentInput, HorseUncheckedUpdateWithoutFoalDevelopmentInput>
    create: XOR<HorseCreateWithoutFoalDevelopmentInput, HorseUncheckedCreateWithoutFoalDevelopmentInput>
    where?: HorseWhereInput
  }

  export type HorseUpdateToOneWithWhereWithoutFoalDevelopmentInput = {
    where?: HorseWhereInput
    data: XOR<HorseUpdateWithoutFoalDevelopmentInput, HorseUncheckedUpdateWithoutFoalDevelopmentInput>
  }

  export type HorseUpdateWithoutFoalDevelopmentInput = {
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUpdateManyWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUpdateManyWithoutHorseNestedInput
    breed?: BreedUpdateOneWithoutHorsesNestedInput
    dam?: HorseUpdateOneWithoutDamOffspringNestedInput
    damOffspring?: HorseUpdateManyWithoutDamNestedInput
    sire?: HorseUpdateOneWithoutSireOffspringNestedInput
    sireOffspring?: HorseUpdateManyWithoutSireNestedInput
    stable?: StableUpdateOneWithoutHorsesNestedInput
    user?: UserUpdateOneWithoutHorsesNestedInput
    trainingLogs?: TrainingLogUpdateManyWithoutHorseNestedInput
  }

  export type HorseUncheckedUpdateWithoutFoalDevelopmentInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    breedId?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    stableId?: NullableIntFieldUpdateOperationsInput | number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    sireId?: NullableIntFieldUpdateOperationsInput | number | null
    damId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUncheckedUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUncheckedUpdateManyWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUncheckedUpdateManyWithoutHorseNestedInput
    damOffspring?: HorseUncheckedUpdateManyWithoutDamNestedInput
    sireOffspring?: HorseUncheckedUpdateManyWithoutSireNestedInput
    trainingLogs?: TrainingLogUncheckedUpdateManyWithoutHorseNestedInput
  }

  export type HorseCreateWithoutFoalActivitiesInput = {
    name: string
    sex: string
    dateOfBirth: Date | string
    ownerId?: string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultCreateNestedManyWithoutHorseInput
    foalDevelopment?: FoalDevelopmentCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventCreateNestedManyWithoutHorseInput
    breed?: BreedCreateNestedOneWithoutHorsesInput
    dam?: HorseCreateNestedOneWithoutDamOffspringInput
    damOffspring?: HorseCreateNestedManyWithoutDamInput
    sire?: HorseCreateNestedOneWithoutSireOffspringInput
    sireOffspring?: HorseCreateNestedManyWithoutSireInput
    stable?: StableCreateNestedOneWithoutHorsesInput
    user?: UserCreateNestedOneWithoutHorsesInput
    trainingLogs?: TrainingLogCreateNestedManyWithoutHorseInput
  }

  export type HorseUncheckedCreateWithoutFoalActivitiesInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    breedId?: number | null
    ownerId?: string | null
    stableId?: number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    sireId?: number | null
    damId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    userId?: string | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultUncheckedCreateNestedManyWithoutHorseInput
    foalDevelopment?: FoalDevelopmentUncheckedCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventUncheckedCreateNestedManyWithoutHorseInput
    damOffspring?: HorseUncheckedCreateNestedManyWithoutDamInput
    sireOffspring?: HorseUncheckedCreateNestedManyWithoutSireInput
    trainingLogs?: TrainingLogUncheckedCreateNestedManyWithoutHorseInput
  }

  export type HorseCreateOrConnectWithoutFoalActivitiesInput = {
    where: HorseWhereUniqueInput
    create: XOR<HorseCreateWithoutFoalActivitiesInput, HorseUncheckedCreateWithoutFoalActivitiesInput>
  }

  export type HorseUpsertWithoutFoalActivitiesInput = {
    update: XOR<HorseUpdateWithoutFoalActivitiesInput, HorseUncheckedUpdateWithoutFoalActivitiesInput>
    create: XOR<HorseCreateWithoutFoalActivitiesInput, HorseUncheckedCreateWithoutFoalActivitiesInput>
    where?: HorseWhereInput
  }

  export type HorseUpdateToOneWithWhereWithoutFoalActivitiesInput = {
    where?: HorseWhereInput
    data: XOR<HorseUpdateWithoutFoalActivitiesInput, HorseUncheckedUpdateWithoutFoalActivitiesInput>
  }

  export type HorseUpdateWithoutFoalActivitiesInput = {
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUpdateManyWithoutHorseNestedInput
    foalDevelopment?: FoalDevelopmentUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUpdateManyWithoutHorseNestedInput
    breed?: BreedUpdateOneWithoutHorsesNestedInput
    dam?: HorseUpdateOneWithoutDamOffspringNestedInput
    damOffspring?: HorseUpdateManyWithoutDamNestedInput
    sire?: HorseUpdateOneWithoutSireOffspringNestedInput
    sireOffspring?: HorseUpdateManyWithoutSireNestedInput
    stable?: StableUpdateOneWithoutHorsesNestedInput
    user?: UserUpdateOneWithoutHorsesNestedInput
    trainingLogs?: TrainingLogUpdateManyWithoutHorseNestedInput
  }

  export type HorseUncheckedUpdateWithoutFoalActivitiesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    breedId?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    stableId?: NullableIntFieldUpdateOperationsInput | number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    sireId?: NullableIntFieldUpdateOperationsInput | number | null
    damId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUncheckedUpdateManyWithoutHorseNestedInput
    foalDevelopment?: FoalDevelopmentUncheckedUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUncheckedUpdateManyWithoutHorseNestedInput
    damOffspring?: HorseUncheckedUpdateManyWithoutDamNestedInput
    sireOffspring?: HorseUncheckedUpdateManyWithoutSireNestedInput
    trainingLogs?: TrainingLogUncheckedUpdateManyWithoutHorseNestedInput
  }

  export type HorseCreateWithoutFoalTrainingHistoryInput = {
    name: string
    sex: string
    dateOfBirth: Date | string
    ownerId?: string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentCreateNestedOneWithoutFoalInput
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventCreateNestedManyWithoutHorseInput
    breed?: BreedCreateNestedOneWithoutHorsesInput
    dam?: HorseCreateNestedOneWithoutDamOffspringInput
    damOffspring?: HorseCreateNestedManyWithoutDamInput
    sire?: HorseCreateNestedOneWithoutSireOffspringInput
    sireOffspring?: HorseCreateNestedManyWithoutSireInput
    stable?: StableCreateNestedOneWithoutHorsesInput
    user?: UserCreateNestedOneWithoutHorsesInput
    trainingLogs?: TrainingLogCreateNestedManyWithoutHorseInput
  }

  export type HorseUncheckedCreateWithoutFoalTrainingHistoryInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    breedId?: number | null
    ownerId?: string | null
    stableId?: number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    sireId?: number | null
    damId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    userId?: string | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultUncheckedCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityUncheckedCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentUncheckedCreateNestedOneWithoutFoalInput
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutFoalInput
    horseXpEvents?: HorseXpEventUncheckedCreateNestedManyWithoutHorseInput
    damOffspring?: HorseUncheckedCreateNestedManyWithoutDamInput
    sireOffspring?: HorseUncheckedCreateNestedManyWithoutSireInput
    trainingLogs?: TrainingLogUncheckedCreateNestedManyWithoutHorseInput
  }

  export type HorseCreateOrConnectWithoutFoalTrainingHistoryInput = {
    where: HorseWhereUniqueInput
    create: XOR<HorseCreateWithoutFoalTrainingHistoryInput, HorseUncheckedCreateWithoutFoalTrainingHistoryInput>
  }

  export type HorseUpsertWithoutFoalTrainingHistoryInput = {
    update: XOR<HorseUpdateWithoutFoalTrainingHistoryInput, HorseUncheckedUpdateWithoutFoalTrainingHistoryInput>
    create: XOR<HorseCreateWithoutFoalTrainingHistoryInput, HorseUncheckedCreateWithoutFoalTrainingHistoryInput>
    where?: HorseWhereInput
  }

  export type HorseUpdateToOneWithWhereWithoutFoalTrainingHistoryInput = {
    where?: HorseWhereInput
    data: XOR<HorseUpdateWithoutFoalTrainingHistoryInput, HorseUncheckedUpdateWithoutFoalTrainingHistoryInput>
  }

  export type HorseUpdateWithoutFoalTrainingHistoryInput = {
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUpdateOneWithoutFoalNestedInput
    groomAssignments?: GroomAssignmentUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUpdateManyWithoutHorseNestedInput
    breed?: BreedUpdateOneWithoutHorsesNestedInput
    dam?: HorseUpdateOneWithoutDamOffspringNestedInput
    damOffspring?: HorseUpdateManyWithoutDamNestedInput
    sire?: HorseUpdateOneWithoutSireOffspringNestedInput
    sireOffspring?: HorseUpdateManyWithoutSireNestedInput
    stable?: StableUpdateOneWithoutHorsesNestedInput
    user?: UserUpdateOneWithoutHorsesNestedInput
    trainingLogs?: TrainingLogUpdateManyWithoutHorseNestedInput
  }

  export type HorseUncheckedUpdateWithoutFoalTrainingHistoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    breedId?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    stableId?: NullableIntFieldUpdateOperationsInput | number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    sireId?: NullableIntFieldUpdateOperationsInput | number | null
    damId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUncheckedUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUncheckedUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUncheckedUpdateOneWithoutFoalNestedInput
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUncheckedUpdateManyWithoutHorseNestedInput
    damOffspring?: HorseUncheckedUpdateManyWithoutDamNestedInput
    sireOffspring?: HorseUncheckedUpdateManyWithoutSireNestedInput
    trainingLogs?: TrainingLogUncheckedUpdateManyWithoutHorseNestedInput
  }

  export type UserCreateWithoutXpEventsInput = {
    id?: string
    username: string
    email: string
    password: string
    firstName: string
    lastName: string
    money?: number
    level?: number
    xp?: number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutUserInput
    grooms?: GroomCreateNestedManyWithoutUserInput
    horses?: HorseCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    shows?: ShowCreateNestedManyWithoutHostUserInput
  }

  export type UserUncheckedCreateWithoutXpEventsInput = {
    id?: string
    username: string
    email: string
    password: string
    firstName: string
    lastName: string
    money?: number
    level?: number
    xp?: number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutUserInput
    grooms?: GroomUncheckedCreateNestedManyWithoutUserInput
    horses?: HorseUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    shows?: ShowUncheckedCreateNestedManyWithoutHostUserInput
  }

  export type UserCreateOrConnectWithoutXpEventsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutXpEventsInput, UserUncheckedCreateWithoutXpEventsInput>
  }

  export type UserUpsertWithoutXpEventsInput = {
    update: XOR<UserUpdateWithoutXpEventsInput, UserUncheckedUpdateWithoutXpEventsInput>
    create: XOR<UserCreateWithoutXpEventsInput, UserUncheckedCreateWithoutXpEventsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutXpEventsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutXpEventsInput, UserUncheckedUpdateWithoutXpEventsInput>
  }

  export type UserUpdateWithoutXpEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    money?: IntFieldUpdateOperationsInput | number
    level?: IntFieldUpdateOperationsInput | number
    xp?: IntFieldUpdateOperationsInput | number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomAssignments?: GroomAssignmentUpdateManyWithoutUserNestedInput
    grooms?: GroomUpdateManyWithoutUserNestedInput
    horses?: HorseUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    shows?: ShowUpdateManyWithoutHostUserNestedInput
  }

  export type UserUncheckedUpdateWithoutXpEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    money?: IntFieldUpdateOperationsInput | number
    level?: IntFieldUpdateOperationsInput | number
    xp?: IntFieldUpdateOperationsInput | number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutUserNestedInput
    grooms?: GroomUncheckedUpdateManyWithoutUserNestedInput
    horses?: HorseUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    shows?: ShowUncheckedUpdateManyWithoutHostUserNestedInput
  }

  export type UserCreateWithoutRefreshTokensInput = {
    id?: string
    username: string
    email: string
    password: string
    firstName: string
    lastName: string
    money?: number
    level?: number
    xp?: number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutUserInput
    grooms?: GroomCreateNestedManyWithoutUserInput
    horses?: HorseCreateNestedManyWithoutUserInput
    shows?: ShowCreateNestedManyWithoutHostUserInput
    xpEvents?: XpEventCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutRefreshTokensInput = {
    id?: string
    username: string
    email: string
    password: string
    firstName: string
    lastName: string
    money?: number
    level?: number
    xp?: number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutUserInput
    grooms?: GroomUncheckedCreateNestedManyWithoutUserInput
    horses?: HorseUncheckedCreateNestedManyWithoutUserInput
    shows?: ShowUncheckedCreateNestedManyWithoutHostUserInput
    xpEvents?: XpEventUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutRefreshTokensInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
  }

  export type UserUpsertWithoutRefreshTokensInput = {
    update: XOR<UserUpdateWithoutRefreshTokensInput, UserUncheckedUpdateWithoutRefreshTokensInput>
    create: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRefreshTokensInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRefreshTokensInput, UserUncheckedUpdateWithoutRefreshTokensInput>
  }

  export type UserUpdateWithoutRefreshTokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    money?: IntFieldUpdateOperationsInput | number
    level?: IntFieldUpdateOperationsInput | number
    xp?: IntFieldUpdateOperationsInput | number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomAssignments?: GroomAssignmentUpdateManyWithoutUserNestedInput
    grooms?: GroomUpdateManyWithoutUserNestedInput
    horses?: HorseUpdateManyWithoutUserNestedInput
    shows?: ShowUpdateManyWithoutHostUserNestedInput
    xpEvents?: XpEventUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutRefreshTokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    money?: IntFieldUpdateOperationsInput | number
    level?: IntFieldUpdateOperationsInput | number
    xp?: IntFieldUpdateOperationsInput | number
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutUserNestedInput
    grooms?: GroomUncheckedUpdateManyWithoutUserNestedInput
    horses?: HorseUncheckedUpdateManyWithoutUserNestedInput
    shows?: ShowUncheckedUpdateManyWithoutHostUserNestedInput
    xpEvents?: XpEventUncheckedUpdateManyWithoutUserNestedInput
  }

  export type HorseCreateWithoutHorseXpEventsInput = {
    name: string
    sex: string
    dateOfBirth: Date | string
    ownerId?: string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionCreateNestedManyWithoutFoalInput
    breed?: BreedCreateNestedOneWithoutHorsesInput
    dam?: HorseCreateNestedOneWithoutDamOffspringInput
    damOffspring?: HorseCreateNestedManyWithoutDamInput
    sire?: HorseCreateNestedOneWithoutSireOffspringInput
    sireOffspring?: HorseCreateNestedManyWithoutSireInput
    stable?: StableCreateNestedOneWithoutHorsesInput
    user?: UserCreateNestedOneWithoutHorsesInput
    trainingLogs?: TrainingLogCreateNestedManyWithoutHorseInput
  }

  export type HorseUncheckedCreateWithoutHorseXpEventsInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    breedId?: number | null
    ownerId?: string | null
    stableId?: number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    sireId?: number | null
    damId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    userId?: string | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    competitionResults?: CompetitionResultUncheckedCreateNestedManyWithoutHorseInput
    foalActivities?: FoalActivityUncheckedCreateNestedManyWithoutFoalInput
    foalDevelopment?: FoalDevelopmentUncheckedCreateNestedOneWithoutFoalInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedCreateNestedManyWithoutHorseInput
    groomAssignments?: GroomAssignmentUncheckedCreateNestedManyWithoutFoalInput
    groomInteractions?: GroomInteractionUncheckedCreateNestedManyWithoutFoalInput
    damOffspring?: HorseUncheckedCreateNestedManyWithoutDamInput
    sireOffspring?: HorseUncheckedCreateNestedManyWithoutSireInput
    trainingLogs?: TrainingLogUncheckedCreateNestedManyWithoutHorseInput
  }

  export type HorseCreateOrConnectWithoutHorseXpEventsInput = {
    where: HorseWhereUniqueInput
    create: XOR<HorseCreateWithoutHorseXpEventsInput, HorseUncheckedCreateWithoutHorseXpEventsInput>
  }

  export type HorseUpsertWithoutHorseXpEventsInput = {
    update: XOR<HorseUpdateWithoutHorseXpEventsInput, HorseUncheckedUpdateWithoutHorseXpEventsInput>
    create: XOR<HorseCreateWithoutHorseXpEventsInput, HorseUncheckedCreateWithoutHorseXpEventsInput>
    where?: HorseWhereInput
  }

  export type HorseUpdateToOneWithWhereWithoutHorseXpEventsInput = {
    where?: HorseWhereInput
    data: XOR<HorseUpdateWithoutHorseXpEventsInput, HorseUncheckedUpdateWithoutHorseXpEventsInput>
  }

  export type HorseUpdateWithoutHorseXpEventsInput = {
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutFoalNestedInput
    breed?: BreedUpdateOneWithoutHorsesNestedInput
    dam?: HorseUpdateOneWithoutDamOffspringNestedInput
    damOffspring?: HorseUpdateManyWithoutDamNestedInput
    sire?: HorseUpdateOneWithoutSireOffspringNestedInput
    sireOffspring?: HorseUpdateManyWithoutSireNestedInput
    stable?: StableUpdateOneWithoutHorsesNestedInput
    user?: UserUpdateOneWithoutHorsesNestedInput
    trainingLogs?: TrainingLogUpdateManyWithoutHorseNestedInput
  }

  export type HorseUncheckedUpdateWithoutHorseXpEventsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    breedId?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    stableId?: NullableIntFieldUpdateOperationsInput | number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    sireId?: NullableIntFieldUpdateOperationsInput | number | null
    damId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUncheckedUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUncheckedUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUncheckedUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutFoalNestedInput
    damOffspring?: HorseUncheckedUpdateManyWithoutDamNestedInput
    sireOffspring?: HorseUncheckedUpdateManyWithoutSireNestedInput
    trainingLogs?: TrainingLogUncheckedUpdateManyWithoutHorseNestedInput
  }

  export type GroomAssignmentCreateManyUserInput = {
    id?: number
    startDate?: Date | string
    endDate?: Date | string | null
    isActive?: boolean
    isDefault?: boolean
    priority?: number
    notes?: string | null
    foalId: number
    groomId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GroomCreateManyUserInput = {
    id?: number
    name: string
    speciality: string
    experience?: number
    skillLevel?: string
    personality: string
    sessionRate?: Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: string | null
    imageUrl?: string | null
    isActive?: boolean
    hiredDate?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HorseCreateManyUserInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    breedId?: number | null
    ownerId?: string | null
    stableId?: number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    sireId?: number | null
    damId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type RefreshTokenCreateManyUserInput = {
    id?: number
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShowCreateManyHostUserInput = {
    id?: number
    name: string
    discipline: string
    levelMin: number
    levelMax: number
    entryFee: number
    prize: number
    runDate: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type XpEventCreateManyUserInput = {
    id?: number
    amount: number
    reason: string
    timestamp?: Date | string
  }

  export type GroomAssignmentUpdateWithoutUserInput = {
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    foal?: HorseUpdateOneRequiredWithoutGroomAssignmentsNestedInput
    groom?: GroomUpdateOneRequiredWithoutGroomAssignmentsNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutAssignmentNestedInput
  }

  export type GroomAssignmentUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    foalId?: IntFieldUpdateOperationsInput | number
    groomId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutAssignmentNestedInput
  }

  export type GroomAssignmentUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    foalId?: IntFieldUpdateOperationsInput | number
    groomId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GroomUpdateWithoutUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    speciality?: StringFieldUpdateOperationsInput | string
    experience?: IntFieldUpdateOperationsInput | number
    skillLevel?: StringFieldUpdateOperationsInput | string
    personality?: StringFieldUpdateOperationsInput | string
    sessionRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hiredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomAssignments?: GroomAssignmentUpdateManyWithoutGroomNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutGroomNestedInput
  }

  export type GroomUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    speciality?: StringFieldUpdateOperationsInput | string
    experience?: IntFieldUpdateOperationsInput | number
    skillLevel?: StringFieldUpdateOperationsInput | string
    personality?: StringFieldUpdateOperationsInput | string
    sessionRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hiredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutGroomNestedInput
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutGroomNestedInput
  }

  export type GroomUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    speciality?: StringFieldUpdateOperationsInput | string
    experience?: IntFieldUpdateOperationsInput | number
    skillLevel?: StringFieldUpdateOperationsInput | string
    personality?: StringFieldUpdateOperationsInput | string
    sessionRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availability?: JsonNullValueInput | InputJsonValue
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    hiredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HorseUpdateWithoutUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUpdateManyWithoutHorseNestedInput
    breed?: BreedUpdateOneWithoutHorsesNestedInput
    dam?: HorseUpdateOneWithoutDamOffspringNestedInput
    damOffspring?: HorseUpdateManyWithoutDamNestedInput
    sire?: HorseUpdateOneWithoutSireOffspringNestedInput
    sireOffspring?: HorseUpdateManyWithoutSireNestedInput
    stable?: StableUpdateOneWithoutHorsesNestedInput
    trainingLogs?: TrainingLogUpdateManyWithoutHorseNestedInput
  }

  export type HorseUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    breedId?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    stableId?: NullableIntFieldUpdateOperationsInput | number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    sireId?: NullableIntFieldUpdateOperationsInput | number | null
    damId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUncheckedUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUncheckedUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUncheckedUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUncheckedUpdateManyWithoutHorseNestedInput
    damOffspring?: HorseUncheckedUpdateManyWithoutDamNestedInput
    sireOffspring?: HorseUncheckedUpdateManyWithoutSireNestedInput
    trainingLogs?: TrainingLogUncheckedUpdateManyWithoutHorseNestedInput
  }

  export type HorseUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    breedId?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    stableId?: NullableIntFieldUpdateOperationsInput | number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    sireId?: NullableIntFieldUpdateOperationsInput | number | null
    damId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RefreshTokenUpdateWithoutUserInput = {
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShowUpdateWithoutHostUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    discipline?: StringFieldUpdateOperationsInput | string
    levelMin?: IntFieldUpdateOperationsInput | number
    levelMax?: IntFieldUpdateOperationsInput | number
    entryFee?: IntFieldUpdateOperationsInput | number
    prize?: IntFieldUpdateOperationsInput | number
    runDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    competitionResults?: CompetitionResultUpdateManyWithoutShowNestedInput
  }

  export type ShowUncheckedUpdateWithoutHostUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    discipline?: StringFieldUpdateOperationsInput | string
    levelMin?: IntFieldUpdateOperationsInput | number
    levelMax?: IntFieldUpdateOperationsInput | number
    entryFee?: IntFieldUpdateOperationsInput | number
    prize?: IntFieldUpdateOperationsInput | number
    runDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    competitionResults?: CompetitionResultUncheckedUpdateManyWithoutShowNestedInput
  }

  export type ShowUncheckedUpdateManyWithoutHostUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    discipline?: StringFieldUpdateOperationsInput | string
    levelMin?: IntFieldUpdateOperationsInput | number
    levelMax?: IntFieldUpdateOperationsInput | number
    entryFee?: IntFieldUpdateOperationsInput | number
    prize?: IntFieldUpdateOperationsInput | number
    runDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type XpEventUpdateWithoutUserInput = {
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type XpEventUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type XpEventUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HorseCreateManyBreedInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    ownerId?: string | null
    stableId?: number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    sireId?: number | null
    damId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    userId?: string | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type HorseUpdateWithoutBreedInput = {
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUpdateManyWithoutHorseNestedInput
    dam?: HorseUpdateOneWithoutDamOffspringNestedInput
    damOffspring?: HorseUpdateManyWithoutDamNestedInput
    sire?: HorseUpdateOneWithoutSireOffspringNestedInput
    sireOffspring?: HorseUpdateManyWithoutSireNestedInput
    stable?: StableUpdateOneWithoutHorsesNestedInput
    user?: UserUpdateOneWithoutHorsesNestedInput
    trainingLogs?: TrainingLogUpdateManyWithoutHorseNestedInput
  }

  export type HorseUncheckedUpdateWithoutBreedInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    stableId?: NullableIntFieldUpdateOperationsInput | number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    sireId?: NullableIntFieldUpdateOperationsInput | number | null
    damId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUncheckedUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUncheckedUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUncheckedUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUncheckedUpdateManyWithoutHorseNestedInput
    damOffspring?: HorseUncheckedUpdateManyWithoutDamNestedInput
    sireOffspring?: HorseUncheckedUpdateManyWithoutSireNestedInput
    trainingLogs?: TrainingLogUncheckedUpdateManyWithoutHorseNestedInput
  }

  export type HorseUncheckedUpdateManyWithoutBreedInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    stableId?: NullableIntFieldUpdateOperationsInput | number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    sireId?: NullableIntFieldUpdateOperationsInput | number | null
    damId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HorseCreateManyStableInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    breedId?: number | null
    ownerId?: string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    sireId?: number | null
    damId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    userId?: string | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type HorseUpdateWithoutStableInput = {
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUpdateManyWithoutHorseNestedInput
    breed?: BreedUpdateOneWithoutHorsesNestedInput
    dam?: HorseUpdateOneWithoutDamOffspringNestedInput
    damOffspring?: HorseUpdateManyWithoutDamNestedInput
    sire?: HorseUpdateOneWithoutSireOffspringNestedInput
    sireOffspring?: HorseUpdateManyWithoutSireNestedInput
    user?: UserUpdateOneWithoutHorsesNestedInput
    trainingLogs?: TrainingLogUpdateManyWithoutHorseNestedInput
  }

  export type HorseUncheckedUpdateWithoutStableInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    breedId?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    sireId?: NullableIntFieldUpdateOperationsInput | number | null
    damId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUncheckedUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUncheckedUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUncheckedUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUncheckedUpdateManyWithoutHorseNestedInput
    damOffspring?: HorseUncheckedUpdateManyWithoutDamNestedInput
    sireOffspring?: HorseUncheckedUpdateManyWithoutSireNestedInput
    trainingLogs?: TrainingLogUncheckedUpdateManyWithoutHorseNestedInput
  }

  export type HorseUncheckedUpdateManyWithoutStableInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    breedId?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    sireId?: NullableIntFieldUpdateOperationsInput | number | null
    damId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CompetitionResultCreateManyHorseInput = {
    id?: number
    score: Decimal | DecimalJsLike | number | string
    placement?: string | null
    discipline: string
    runDate: Date | string
    showName: string
    prizeWon?: Decimal | DecimalJsLike | number | string | null
    statGains?: NullableJsonNullValueInput | InputJsonValue
    showId: number
    createdAt?: Date | string
  }

  export type FoalActivityCreateManyFoalInput = {
    id?: number
    day: number
    activityType: string
    outcome: string
    bondingChange: number
    stressChange: number
    description: string
    createdAt?: Date | string
  }

  export type FoalTrainingHistoryCreateManyHorseInput = {
    id?: string
    day: number
    activity: string
    outcome: string
    bondChange?: number
    stressChange?: number
    timestamp?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GroomAssignmentCreateManyFoalInput = {
    id?: number
    startDate?: Date | string
    endDate?: Date | string | null
    isActive?: boolean
    isDefault?: boolean
    priority?: number
    notes?: string | null
    groomId: number
    userId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GroomInteractionCreateManyFoalInput = {
    id?: number
    interactionType: string
    duration: number
    bondingChange?: number
    stressChange?: number
    quality?: string
    notes?: string | null
    cost?: Decimal | DecimalJsLike | number | string
    groomId: number
    assignmentId?: number | null
    timestamp?: Date | string
    createdAt?: Date | string
  }

  export type HorseXpEventCreateManyHorseInput = {
    id?: number
    amount: number
    reason: string
    timestamp?: Date | string
  }

  export type HorseCreateManyDamInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    breedId?: number | null
    ownerId?: string | null
    stableId?: number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    sireId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    userId?: string | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type HorseCreateManySireInput = {
    id?: number
    name: string
    sex: string
    dateOfBirth: Date | string
    breedId?: number | null
    ownerId?: string | null
    stableId?: number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: string | null
    shade?: string | null
    imageUrl?: string | null
    trait?: string | null
    temperament?: string | null
    personality?: string | null
    precision?: number | null
    strength?: number | null
    speed?: number | null
    agility?: number | null
    endurance?: number | null
    intelligence?: number | null
    stamina?: number | null
    balance?: number | null
    boldness?: number | null
    flexibility?: number | null
    obedience?: number | null
    focus?: number | null
    totalEarnings?: number | null
    damId?: number | null
    studStatus?: string | null
    studFee?: number | null
    lastBredDate?: Date | string | null
    forSale?: boolean | null
    salePrice?: number | null
    healthStatus?: string | null
    lastVettedDate?: Date | string | null
    bondScore?: number | null
    stressLevel?: number | null
    daysGroomedInARow?: number | null
    burnoutStatus?: string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: number | null
    lastGroomed?: Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: number | null
    userId?: string | null
    trainingCooldown?: Date | string | null
    earnings?: Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: number | null
    availableStatPoints?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type TrainingLogCreateManyHorseInput = {
    id?: number
    discipline: string
    trainedAt?: Date | string
  }

  export type CompetitionResultUpdateWithoutHorseInput = {
    score?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    placement?: NullableStringFieldUpdateOperationsInput | string | null
    discipline?: StringFieldUpdateOperationsInput | string
    runDate?: DateTimeFieldUpdateOperationsInput | Date | string
    showName?: StringFieldUpdateOperationsInput | string
    prizeWon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    statGains?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    show?: ShowUpdateOneRequiredWithoutCompetitionResultsNestedInput
  }

  export type CompetitionResultUncheckedUpdateWithoutHorseInput = {
    id?: IntFieldUpdateOperationsInput | number
    score?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    placement?: NullableStringFieldUpdateOperationsInput | string | null
    discipline?: StringFieldUpdateOperationsInput | string
    runDate?: DateTimeFieldUpdateOperationsInput | Date | string
    showName?: StringFieldUpdateOperationsInput | string
    prizeWon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    statGains?: NullableJsonNullValueInput | InputJsonValue
    showId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompetitionResultUncheckedUpdateManyWithoutHorseInput = {
    id?: IntFieldUpdateOperationsInput | number
    score?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    placement?: NullableStringFieldUpdateOperationsInput | string | null
    discipline?: StringFieldUpdateOperationsInput | string
    runDate?: DateTimeFieldUpdateOperationsInput | Date | string
    showName?: StringFieldUpdateOperationsInput | string
    prizeWon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    statGains?: NullableJsonNullValueInput | InputJsonValue
    showId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FoalActivityUpdateWithoutFoalInput = {
    day?: IntFieldUpdateOperationsInput | number
    activityType?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
    bondingChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FoalActivityUncheckedUpdateWithoutFoalInput = {
    id?: IntFieldUpdateOperationsInput | number
    day?: IntFieldUpdateOperationsInput | number
    activityType?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
    bondingChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FoalActivityUncheckedUpdateManyWithoutFoalInput = {
    id?: IntFieldUpdateOperationsInput | number
    day?: IntFieldUpdateOperationsInput | number
    activityType?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
    bondingChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FoalTrainingHistoryUpdateWithoutHorseInput = {
    id?: StringFieldUpdateOperationsInput | string
    day?: IntFieldUpdateOperationsInput | number
    activity?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
    bondChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FoalTrainingHistoryUncheckedUpdateWithoutHorseInput = {
    id?: StringFieldUpdateOperationsInput | string
    day?: IntFieldUpdateOperationsInput | number
    activity?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
    bondChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FoalTrainingHistoryUncheckedUpdateManyWithoutHorseInput = {
    id?: StringFieldUpdateOperationsInput | string
    day?: IntFieldUpdateOperationsInput | number
    activity?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
    bondChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GroomAssignmentUpdateWithoutFoalInput = {
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groom?: GroomUpdateOneRequiredWithoutGroomAssignmentsNestedInput
    user?: UserUpdateOneWithoutGroomAssignmentsNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutAssignmentNestedInput
  }

  export type GroomAssignmentUncheckedUpdateWithoutFoalInput = {
    id?: IntFieldUpdateOperationsInput | number
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    groomId?: IntFieldUpdateOperationsInput | number
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutAssignmentNestedInput
  }

  export type GroomAssignmentUncheckedUpdateManyWithoutFoalInput = {
    id?: IntFieldUpdateOperationsInput | number
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    groomId?: IntFieldUpdateOperationsInput | number
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GroomInteractionUpdateWithoutFoalInput = {
    interactionType?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    bondingChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    quality?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignment?: GroomAssignmentUpdateOneWithoutGroomInteractionsNestedInput
    groom?: GroomUpdateOneRequiredWithoutGroomInteractionsNestedInput
  }

  export type GroomInteractionUncheckedUpdateWithoutFoalInput = {
    id?: IntFieldUpdateOperationsInput | number
    interactionType?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    bondingChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    quality?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    groomId?: IntFieldUpdateOperationsInput | number
    assignmentId?: NullableIntFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GroomInteractionUncheckedUpdateManyWithoutFoalInput = {
    id?: IntFieldUpdateOperationsInput | number
    interactionType?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    bondingChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    quality?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    groomId?: IntFieldUpdateOperationsInput | number
    assignmentId?: NullableIntFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HorseXpEventUpdateWithoutHorseInput = {
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HorseXpEventUncheckedUpdateWithoutHorseInput = {
    id?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HorseXpEventUncheckedUpdateManyWithoutHorseInput = {
    id?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HorseUpdateWithoutDamInput = {
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUpdateManyWithoutHorseNestedInput
    breed?: BreedUpdateOneWithoutHorsesNestedInput
    damOffspring?: HorseUpdateManyWithoutDamNestedInput
    sire?: HorseUpdateOneWithoutSireOffspringNestedInput
    sireOffspring?: HorseUpdateManyWithoutSireNestedInput
    stable?: StableUpdateOneWithoutHorsesNestedInput
    user?: UserUpdateOneWithoutHorsesNestedInput
    trainingLogs?: TrainingLogUpdateManyWithoutHorseNestedInput
  }

  export type HorseUncheckedUpdateWithoutDamInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    breedId?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    stableId?: NullableIntFieldUpdateOperationsInput | number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    sireId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUncheckedUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUncheckedUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUncheckedUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUncheckedUpdateManyWithoutHorseNestedInput
    damOffspring?: HorseUncheckedUpdateManyWithoutDamNestedInput
    sireOffspring?: HorseUncheckedUpdateManyWithoutSireNestedInput
    trainingLogs?: TrainingLogUncheckedUpdateManyWithoutHorseNestedInput
  }

  export type HorseUncheckedUpdateManyWithoutDamInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    breedId?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    stableId?: NullableIntFieldUpdateOperationsInput | number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    sireId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HorseUpdateWithoutSireInput = {
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUpdateManyWithoutHorseNestedInput
    breed?: BreedUpdateOneWithoutHorsesNestedInput
    dam?: HorseUpdateOneWithoutDamOffspringNestedInput
    damOffspring?: HorseUpdateManyWithoutDamNestedInput
    sireOffspring?: HorseUpdateManyWithoutSireNestedInput
    stable?: StableUpdateOneWithoutHorsesNestedInput
    user?: UserUpdateOneWithoutHorsesNestedInput
    trainingLogs?: TrainingLogUpdateManyWithoutHorseNestedInput
  }

  export type HorseUncheckedUpdateWithoutSireInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    breedId?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    stableId?: NullableIntFieldUpdateOperationsInput | number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    damId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    competitionResults?: CompetitionResultUncheckedUpdateManyWithoutHorseNestedInput
    foalActivities?: FoalActivityUncheckedUpdateManyWithoutFoalNestedInput
    foalDevelopment?: FoalDevelopmentUncheckedUpdateOneWithoutFoalNestedInput
    foalTrainingHistory?: FoalTrainingHistoryUncheckedUpdateManyWithoutHorseNestedInput
    groomAssignments?: GroomAssignmentUncheckedUpdateManyWithoutFoalNestedInput
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutFoalNestedInput
    horseXpEvents?: HorseXpEventUncheckedUpdateManyWithoutHorseNestedInput
    damOffspring?: HorseUncheckedUpdateManyWithoutDamNestedInput
    sireOffspring?: HorseUncheckedUpdateManyWithoutSireNestedInput
    trainingLogs?: TrainingLogUncheckedUpdateManyWithoutHorseNestedInput
  }

  export type HorseUncheckedUpdateManyWithoutSireInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sex?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: DateTimeFieldUpdateOperationsInput | Date | string
    breedId?: NullableIntFieldUpdateOperationsInput | number | null
    ownerId?: NullableStringFieldUpdateOperationsInput | string | null
    stableId?: NullableIntFieldUpdateOperationsInput | number | null
    genotype?: NullableJsonNullValueInput | InputJsonValue
    phenotypicMarkings?: NullableJsonNullValueInput | InputJsonValue
    finalDisplayColor?: NullableStringFieldUpdateOperationsInput | string | null
    shade?: NullableStringFieldUpdateOperationsInput | string | null
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    trait?: NullableStringFieldUpdateOperationsInput | string | null
    temperament?: NullableStringFieldUpdateOperationsInput | string | null
    personality?: NullableStringFieldUpdateOperationsInput | string | null
    precision?: NullableIntFieldUpdateOperationsInput | number | null
    strength?: NullableIntFieldUpdateOperationsInput | number | null
    speed?: NullableIntFieldUpdateOperationsInput | number | null
    agility?: NullableIntFieldUpdateOperationsInput | number | null
    endurance?: NullableIntFieldUpdateOperationsInput | number | null
    intelligence?: NullableIntFieldUpdateOperationsInput | number | null
    stamina?: NullableIntFieldUpdateOperationsInput | number | null
    balance?: NullableIntFieldUpdateOperationsInput | number | null
    boldness?: NullableIntFieldUpdateOperationsInput | number | null
    flexibility?: NullableIntFieldUpdateOperationsInput | number | null
    obedience?: NullableIntFieldUpdateOperationsInput | number | null
    focus?: NullableIntFieldUpdateOperationsInput | number | null
    totalEarnings?: NullableIntFieldUpdateOperationsInput | number | null
    damId?: NullableIntFieldUpdateOperationsInput | number | null
    studStatus?: NullableStringFieldUpdateOperationsInput | string | null
    studFee?: NullableIntFieldUpdateOperationsInput | number | null
    lastBredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forSale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    salePrice?: NullableIntFieldUpdateOperationsInput | number | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    lastVettedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bondScore?: NullableIntFieldUpdateOperationsInput | number | null
    stressLevel?: NullableIntFieldUpdateOperationsInput | number | null
    daysGroomedInARow?: NullableIntFieldUpdateOperationsInput | number | null
    burnoutStatus?: NullableStringFieldUpdateOperationsInput | string | null
    taskLog?: NullableJsonNullValueInput | InputJsonValue
    consecutiveDaysFoalCare?: NullableIntFieldUpdateOperationsInput | number | null
    lastGroomed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tack?: NullableJsonNullValueInput | InputJsonValue
    age?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    trainingCooldown?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    earnings?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rider?: NullableJsonNullValueInput | InputJsonValue
    disciplineScores?: NullableJsonNullValueInput | InputJsonValue
    epigeneticModifiers?: NullableJsonNullValueInput | InputJsonValue
    horseXp?: NullableIntFieldUpdateOperationsInput | number | null
    availableStatPoints?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TrainingLogUpdateWithoutHorseInput = {
    discipline?: StringFieldUpdateOperationsInput | string
    trainedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TrainingLogUncheckedUpdateWithoutHorseInput = {
    id?: IntFieldUpdateOperationsInput | number
    discipline?: StringFieldUpdateOperationsInput | string
    trainedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TrainingLogUncheckedUpdateManyWithoutHorseInput = {
    id?: IntFieldUpdateOperationsInput | number
    discipline?: StringFieldUpdateOperationsInput | string
    trainedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GroomAssignmentCreateManyGroomInput = {
    id?: number
    startDate?: Date | string
    endDate?: Date | string | null
    isActive?: boolean
    isDefault?: boolean
    priority?: number
    notes?: string | null
    foalId: number
    userId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GroomInteractionCreateManyGroomInput = {
    id?: number
    interactionType: string
    duration: number
    bondingChange?: number
    stressChange?: number
    quality?: string
    notes?: string | null
    cost?: Decimal | DecimalJsLike | number | string
    foalId: number
    assignmentId?: number | null
    timestamp?: Date | string
    createdAt?: Date | string
  }

  export type GroomAssignmentUpdateWithoutGroomInput = {
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    foal?: HorseUpdateOneRequiredWithoutGroomAssignmentsNestedInput
    user?: UserUpdateOneWithoutGroomAssignmentsNestedInput
    groomInteractions?: GroomInteractionUpdateManyWithoutAssignmentNestedInput
  }

  export type GroomAssignmentUncheckedUpdateWithoutGroomInput = {
    id?: IntFieldUpdateOperationsInput | number
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    foalId?: IntFieldUpdateOperationsInput | number
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    groomInteractions?: GroomInteractionUncheckedUpdateManyWithoutAssignmentNestedInput
  }

  export type GroomAssignmentUncheckedUpdateManyWithoutGroomInput = {
    id?: IntFieldUpdateOperationsInput | number
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    foalId?: IntFieldUpdateOperationsInput | number
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GroomInteractionUpdateWithoutGroomInput = {
    interactionType?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    bondingChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    quality?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignment?: GroomAssignmentUpdateOneWithoutGroomInteractionsNestedInput
    foal?: HorseUpdateOneRequiredWithoutGroomInteractionsNestedInput
  }

  export type GroomInteractionUncheckedUpdateWithoutGroomInput = {
    id?: IntFieldUpdateOperationsInput | number
    interactionType?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    bondingChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    quality?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    foalId?: IntFieldUpdateOperationsInput | number
    assignmentId?: NullableIntFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GroomInteractionUncheckedUpdateManyWithoutGroomInput = {
    id?: IntFieldUpdateOperationsInput | number
    interactionType?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    bondingChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    quality?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    foalId?: IntFieldUpdateOperationsInput | number
    assignmentId?: NullableIntFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GroomInteractionCreateManyAssignmentInput = {
    id?: number
    interactionType: string
    duration: number
    bondingChange?: number
    stressChange?: number
    quality?: string
    notes?: string | null
    cost?: Decimal | DecimalJsLike | number | string
    foalId: number
    groomId: number
    timestamp?: Date | string
    createdAt?: Date | string
  }

  export type GroomInteractionUpdateWithoutAssignmentInput = {
    interactionType?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    bondingChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    quality?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    foal?: HorseUpdateOneRequiredWithoutGroomInteractionsNestedInput
    groom?: GroomUpdateOneRequiredWithoutGroomInteractionsNestedInput
  }

  export type GroomInteractionUncheckedUpdateWithoutAssignmentInput = {
    id?: IntFieldUpdateOperationsInput | number
    interactionType?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    bondingChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    quality?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    foalId?: IntFieldUpdateOperationsInput | number
    groomId?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GroomInteractionUncheckedUpdateManyWithoutAssignmentInput = {
    id?: IntFieldUpdateOperationsInput | number
    interactionType?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    bondingChange?: IntFieldUpdateOperationsInput | number
    stressChange?: IntFieldUpdateOperationsInput | number
    quality?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    foalId?: IntFieldUpdateOperationsInput | number
    groomId?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompetitionResultCreateManyShowInput = {
    id?: number
    score: Decimal | DecimalJsLike | number | string
    placement?: string | null
    discipline: string
    runDate: Date | string
    showName: string
    prizeWon?: Decimal | DecimalJsLike | number | string | null
    statGains?: NullableJsonNullValueInput | InputJsonValue
    horseId: number
    createdAt?: Date | string
  }

  export type CompetitionResultUpdateWithoutShowInput = {
    score?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    placement?: NullableStringFieldUpdateOperationsInput | string | null
    discipline?: StringFieldUpdateOperationsInput | string
    runDate?: DateTimeFieldUpdateOperationsInput | Date | string
    showName?: StringFieldUpdateOperationsInput | string
    prizeWon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    statGains?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    horse?: HorseUpdateOneRequiredWithoutCompetitionResultsNestedInput
  }

  export type CompetitionResultUncheckedUpdateWithoutShowInput = {
    id?: IntFieldUpdateOperationsInput | number
    score?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    placement?: NullableStringFieldUpdateOperationsInput | string | null
    discipline?: StringFieldUpdateOperationsInput | string
    runDate?: DateTimeFieldUpdateOperationsInput | Date | string
    showName?: StringFieldUpdateOperationsInput | string
    prizeWon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    statGains?: NullableJsonNullValueInput | InputJsonValue
    horseId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompetitionResultUncheckedUpdateManyWithoutShowInput = {
    id?: IntFieldUpdateOperationsInput | number
    score?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    placement?: NullableStringFieldUpdateOperationsInput | string | null
    discipline?: StringFieldUpdateOperationsInput | string
    runDate?: DateTimeFieldUpdateOperationsInput | Date | string
    showName?: StringFieldUpdateOperationsInput | string
    prizeWon?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    statGains?: NullableJsonNullValueInput | InputJsonValue
    horseId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}